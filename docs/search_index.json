[
["index.html", "Oceanographic setting influences the prokaryote community and metabolome in deep-sea sponges 1 Content 1.1 Experimental setup 1.2 Sample metadata analysis", " Oceanographic setting influences the prokaryote community and metabolome in deep-sea sponges Karin Steffen April 21, 2020 1 Content This is a set of code and data sets to document and reproduce the computational analyses in Steffen et al., 2020. In brief, it contains three parts: the metabolome, microbiota and inter-omics analyses. For the metabolome, we include detailed descriptions of the metabolomics data acquisition, data processing with xcms, and multivariate analyses with ropls. In addition, signals of known and novel compounds of interest were manually extracted and analysed. For the microbiota, we include community visualisation and ecological analyses in vegan. The inter-omics section contains mantel test and procrustes rotations, as well as the microbial interaction network annotated with the OTU’s correlation with barettin, and their response to depth. 1.1 Experimental setup Three demosponge species Geodia barretti (n=20), Stryphnus fortis (n=15), and Weberella bursa (n=17) (Fig 1.6) were sampled in the Davis Strait between Canada and Greenland (61.147942-66.38245 Lat,-68.78077- -57.96573 Lon) from 244 m to 1467 m depth (Fig 1.1, 1.2). Temperature and salinity in situ were recorded. All sample metadata is deposited at PANGAEA. All data for these analyses can be downloaded here. library(xfun) xfun::pkg_load2(c(&quot;base64enc&quot;, &quot;htmltools&quot;, &quot;mime&quot;)) xfun::embed_dir(&quot;data/&quot;, text = &quot;Download full data&quot;) 1.1.1 Map library(ggplot2) library(ggmap) library(maps) library(mapdata) library(marmap) library(ggrepel) library(sf) library(rnaturalearth) library(rnaturalearthdata) sample_coords &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) sample_coords &lt;- sample_coords[, c(&quot;Species&quot;, &quot;unified_ID&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;)] sample_coords &lt;- na.omit(sample_coords) world &lt;- ne_countries(scale = &quot;medium&quot;, returnclass = &quot;sf&quot;) sample_map2 &lt;- ggplot(data = world) + geom_sf() + coord_sf(xlim = c(-95, 0), ylim = c(45, 75), expand = T) + geom_point(data = sample_coords, aes(x = sample_coords$Longitude, y = sample_coords$Latitude)) + annotate(&quot;rect&quot;, xmin = -68.78077, xmax = -57.96573, ymin = 61.147942, ymax = 66.38245, alpha = 0.2) + ggtitle(&quot;Sample map&quot;) + xlab(&quot;Longitude&quot;) + ylab(&quot;Latitude&quot;) sample_map2 Figure 1.1: Geographic placement of the sample site on the Northern hemisphere, between Canada and Greenland. Dots indicate individual samples. map_data &lt;- getNOAA.bathy(-70, -50, 58, 68, resolution = 4, keep = T, antimeridian = FALSE) sample_map_1 &lt;- autoplot(map_data, geom = c(&quot;r&quot;, &quot;c&quot;)) + scale_fill_gradient2(low = &quot;dodgerblue4&quot;, mid = &quot;gainsboro&quot;, high = &quot;darkgreen&quot;) + geom_point(aes(x = sample_coords$Longitude, y = sample_coords$Latitude, colour = factor(sample_coords$Species)), data = sample_coords) + ggtitle(&quot;Sample map&quot;) + xlab(&quot;Longitude&quot;) + ylab(&quot;Latitude&quot;) + labs(fill = &quot;Depth&quot;, col = &quot;Species&quot;) sample_map_1 Figure 1.2: Detail map of the sampling site, samples represented by dots are coloured according to sponge species. # with labels: sample_map_1+geom_label_repel(aes(x=sample_coords$Longitude, y=sample_coords$Latitude, label = # sample_coords$unified_ID), box.padding = 0.35, point.padding = 0.5, data=sample_coords) # 3D map library(marmap) library(lattice) #for wireframe map_data_hires &lt;- getNOAA.bathy(-70, -50, 58, 68, resolution = 1, keep = T, antimeridian = FALSE) wireframe(unclass(map_data_hires), shade = T, aspect = c(1/2, 0.1), screen = list(z = 0, x = -50), par.settings = list(axis.line = list(col = &quot;transparent&quot;)), par.box = c(col = rgb(0, 0, 0, 0.1))) knitr::include_graphics(&quot;data/map_screenshot.png&quot;) Figure 1.3: 3D representation of the threshold and slope in the Davis strait. 1.1.2 Water masses knitr::include_graphics(&quot;data/Argo_Mean_on_Grid_Size_0dec25_2002_3-2018_6_Lambert_Lat_Range_59-65_Vector_IY20191123.png&quot;) Figure 1.4: Currents in the North Atlantic between Greenland and Canada. Analysis and figure contributed by Igor Yashayaev. knitr::include_graphics(&quot;data/water_masses_2002-2015 T-S Profiles Selected in Topo-range 300-1900 m &amp; Colored by Depth - Labeled.png&quot;) Figure 1.5: Temperature and salinity (T-S) plot showing the different water masses in the Davis strait by depth: Shelf Water (ShW), Slope Water (SW), Irminger Current (IC), Labrador Sea Water (LSW), and Icelandic slope water (ISW). Analysis and figure contributed by Igor Yashayaev. 1.1.3 Sponges knitr::include_graphics(&quot;data/sponges.png&quot;) Figure 1.6: A G. barretti and B S. fortis from West Shetland Channel. Image Crown Copyright ©2006, all rights reserved. Image provided by K. Howell, Plymouth University, UK. C W. bursa, picture taken by scuba diving at 40 m in Svalbard by Peter Leopold. G. barretti and S. fortis are high microbial abundance sponges ofthen found living in proximity. W. bursa is likely a low microbial abundance sponges (see diversity metrics, Nicole Boury-Esnault per.comm.). While all songes originate from the same geographic region, W. bursa typically does not occur in the same habitats as G. barretti and S. fortis (Murillo et al. 2018). It is omportant to note that S. fortis is whiteish in colour, and the yellow shown in the picture stems from Hexadella dedritifera frequently found overgrowing it. 1.2 Sample metadata analysis To investigate underlying data patterns, we assess correlation of our predictor variables, i.e. the meta data of our samples (depth, latitude, longitude, sampling year, salinity and temperature). 1.2.1 Correlations, visual inspection and variance inflation factors (VIF) across all samples md &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) md &lt;- md[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;YEAR&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;unified_ID&quot;)] a &lt;- cor.test(md$Depth, md$Latitude, method = &quot;spearman&quot;) a &lt;- paste(&quot;Rho =&quot;, round(a$estimate, digits = 3), &quot; p-value=&quot;, round(a$p.value, digits = 3)) b &lt;- cor.test(md$Depth, md$Longitude, method = &quot;spearman&quot;) b &lt;- paste(&quot;Rho =&quot;, round(b$estimate, digits = 3), &quot; p-value=&quot;, round(b$p.value, digits = 3)) c &lt;- cor.test(md$Depth, md$YEAR, method = &quot;spearman&quot;) c &lt;- paste(&quot;Rho =&quot;, round(c$estimate, digits = 3), &quot; p-value=&quot;, round(c$p.value, digits = 3)) d &lt;- cor.test(md$Depth, md$MeanBotSalinity_PSU, method = &quot;spearman&quot;) d &lt;- paste(&quot;Rho =&quot;, round(d$estimate, digits = 3), &quot; p-value=&quot;, round(d$p.value, digits = 3)) e &lt;- cor.test(md$Depth, md$MeanBottomTemp_Cdeg, method = &quot;spearman&quot;) e &lt;- paste(&quot;Rho =&quot;, round(e$estimate, digits = 3), &quot; p-value=&quot;, round(e$p.value, digits = 3)) f &lt;- cor.test(md$MeanBotSalinity_PSU, md$MeanBottomTemp_Cdeg, method = &quot;spearman&quot;) f &lt;- paste(&quot;T-S plot: Rho =&quot;, round(f$estimate, digits = 3), &quot; p-value=&quot;, round(f$p.value, digits = 3)) k &lt;- ggplot(md, aes(x = Latitude, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Latitude&quot;) + ylab(&quot;Depth&quot;) + ggtitle(a) + theme(plot.title = element_text(size = 10)) l &lt;- ggplot(md, aes(x = Longitude, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Longitude&quot;) + ylab(&quot;Depth&quot;) + ggtitle(b) + theme(plot.title = element_text(size = 10)) m &lt;- ggplot(md, aes(x = YEAR, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Year&quot;) + ylab(&quot;Depth&quot;) + ggtitle(c) + theme(plot.title = element_text(size = 10)) n &lt;- ggplot(md, aes(x = MeanBotSalinity_PSU, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Salinity&quot;) + ylab(&quot;Depth&quot;) + ggtitle(d) + theme(plot.title = element_text(size = 10)) o &lt;- ggplot(md, aes(x = MeanBottomTemp_Cdeg, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Temperature&quot;) + ylab(&quot;Depth&quot;) + ggtitle(e) + theme(plot.title = element_text(size = 10)) p &lt;- ggplot(md, aes(x = MeanBotSalinity_PSU, y = MeanBottomTemp_Cdeg, colour = md$Depth)) + geom_point(size = 2) + scale_colour_gradient(guide = guide_colourbar(), high = &quot;#f4c430&quot;, low = &quot;#3b3bc4&quot;, trans = &quot;reverse&quot;) + xlab(&quot;Salinity in psu&quot;) + ylab(&quot;Temperature in °C&quot;) + labs(colour = &quot;Depth&quot;) + ggtitle(f) + theme(plot.title = element_text(size = 10), legend.key.size = unit(0.3, &quot;cm&quot;)) + scale_x_continuous(limits = c(34.4, 35)) # The limits of the x-axis exclude two samples from water with comparably low salinity library(gridExtra) grid.arrange(k, l, m, n, o, p, nrow = 3, top = &quot;Spearman correlation of sample associated meta data&quot;) Figure 1.7: Correlation of depth with other envirnomental parameters/predictor variables across all samples. rm(a, b, c, d, e, f, k, l, m, n, o, p, df) In the bottom right plot showing temperature versus salinity, two samples from lower salinity were excluded for visual clarity. From the plots above and their correlation tests, we find that longitude, salinity and temperature are significantly correltated with depth, and that salinity and temperature also correlate with each other. This is further corroborated in the variance inflation factors. A VIF &gt; 10 indicates redundancy/collinearity. This means that we have to be cautious to avoid including redundant constraints in ecological models. library(usdm) md$Species &lt;- NULL md$unified_ID &lt;- NULL vif_all &lt;- vif(md) library(kableExtra) options(kableExtra.html.bsTable = T) kable(vif_all, longtable = T, booktabs = T, caption = &quot;VIF for meta data from all samples&quot;, row.names = F) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) Table 1.1: VIF for meta data from all samples Variables VIF Depth 3.267983 Latitude 6.125058 Longitude 7.189093 YEAR 1.122117 MeanBotSalinity_PSU 16.131495 MeanBottomTemp_Cdeg 12.301386 rm(md) As we will be focussing on Geodia barretti, we repeat the same inspection procedure for the sample subset. 1.2.2 Correlations, visual inspection and variance inflation factors (VIF) across G. barretti samples md &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) md &lt;- md[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;YEAR&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;unified_ID&quot;)] md &lt;- md[md$Species == &quot;Geodia barretti&quot;, ] a &lt;- cor.test(md$Depth, md$Latitude, method = &quot;spearman&quot;) a &lt;- paste(&quot;Rho =&quot;, round(a$estimate, digits = 3), &quot; p-value=&quot;, round(a$p.value, digits = 3)) b &lt;- cor.test(md$Depth, md$Longitude, method = &quot;spearman&quot;) b &lt;- paste(&quot;Rho =&quot;, round(b$estimate, digits = 3), &quot; p-value=&quot;, round(b$p.value, digits = 3)) c &lt;- cor.test(md$Depth, md$YEAR, method = &quot;spearman&quot;) c &lt;- paste(&quot;Rho =&quot;, round(c$estimate, digits = 3), &quot; p-value=&quot;, round(c$p.value, digits = 3)) d &lt;- cor.test(md$Depth, md$MeanBotSalinity_PSU, method = &quot;spearman&quot;) d &lt;- paste(&quot;Rho =&quot;, round(d$estimate, digits = 3), &quot; p-value=&quot;, round(d$p.value, digits = 3)) e &lt;- cor.test(md$Depth, md$MeanBottomTemp_Cdeg, method = &quot;spearman&quot;) e &lt;- paste(&quot;Rho =&quot;, round(e$estimate, digits = 3), &quot; p-value=&quot;, round(e$p.value, digits = 3)) f &lt;- cor.test(md$MeanBotSalinity_PSU, md$MeanBottomTemp_Cdeg, method = &quot;spearman&quot;) f &lt;- paste(&quot;Rho =&quot;, round(f$estimate, digits = 3), &quot; p-value=&quot;, round(f$p.value, digits = 3)) k &lt;- ggplot(md, aes(x = Latitude, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Latitude&quot;) + ylab(&quot;Depth&quot;) + ggtitle(a) + theme(plot.title = element_text(size = 10)) l &lt;- ggplot(md, aes(x = Longitude, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Longitude&quot;) + ylab(&quot;Depth&quot;) + ggtitle(b) + theme(plot.title = element_text(size = 10)) m &lt;- ggplot(md, aes(x = YEAR, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Year&quot;) + ylab(&quot;Depth&quot;) + ggtitle(c) + theme(plot.title = element_text(size = 10)) n &lt;- ggplot(md, aes(x = MeanBotSalinity_PSU, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Salinity&quot;) + ylab(&quot;Depth&quot;) + ggtitle(d) + theme(plot.title = element_text(size = 10)) o &lt;- ggplot(md, aes(x = MeanBottomTemp_Cdeg, y = Depth)) + geom_point() + scale_y_continuous(trans = &quot;reverse&quot;) + xlab(&quot;Temperature&quot;) + ylab(&quot;Depth&quot;) + ggtitle(e) + theme(plot.title = element_text(size = 10)) p &lt;- ggplot(md, aes(x = MeanBotSalinity_PSU, y = MeanBottomTemp_Cdeg, colour = md$Depth)) + geom_point(size = 2) + scale_colour_gradient(guide = guide_colourbar(), high = &quot;#f4c430&quot;, low = &quot;#3b3bc4&quot;, trans = &quot;reverse&quot;) + xlab(&quot;Salinity in psu&quot;) + ylab(&quot;Temperature in °C&quot;) + labs(colour = &quot;Depth&quot;) + ggtitle(f) + theme(plot.title = element_text(size = 10), legend.key.size = unit(0.3, &quot;cm&quot;)) library(gridExtra) grid.arrange(k, l, m, n, o, p, nrow = 3, top = &quot;Spearman correlation of Geodia barretti associated meta data&quot;) Figure 1.8: Correlation of depth with other envirnomental parameters/predictor variables across samples of G. barretti. rm(a, b, c, d, e, f, k, l, m, n, o, p, df) library(usdm) md$Species &lt;- NULL md$unified_ID &lt;- NULL vif1 &lt;- vif(md) vif1$VIF &lt;- round(vif1$VIF, digits = 2) md$MeanBotSalinity_PSU &lt;- NULL md$MeanBottomTemp_Cdeg &lt;- NULL vif2 &lt;- vif(md) vif2$VIF &lt;- round(vif2$VIF, digits = 2) library(dplyr) vifs &lt;- full_join(vif1, vif2, by = c(Variables = &quot;Variables&quot;)) colnames(vifs) &lt;- c(&quot;Variables&quot;, &quot;All predictors&quot;, &quot;Subset&quot;) vifs[c(5, 6), 3] &lt;- &quot;&quot; library(kableExtra) options(kableExtra.html.bsTable = T) cap &lt;- paste(&quot;VIF for extensive and simplified models for&quot;, text_spec(&quot;G. barretti&quot;, italic = T)) kable(vifs, longtable = T, booktabs = T, caption = cap, row.names = F) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) Table 1.2: VIF for extensive and simplified models for G. barretti Variables All predictors Subset Depth 22.15 5.91 Latitude 11.63 10.31 Longitude 16.59 13.38 YEAR 1.73 1.46 MeanBotSalinity_PSU 61.13 MeanBottomTemp_Cdeg 47.52 rm(md) With this subset, the collinearity becomes even more pronounced. Salinity, temperature and depth are strongly correlated and the VIFs indicated that they should not be included in a model together. This correlation is due to physical properties of water. Density of water increases with increasing salinity and decreasing temperature. To a lesser extent, longitude and lattitude are collinear in our sampling. However, removing the predictor variables salinity and temperature mititgated/lowered the effect of collinearity. References "],
["metabolomics.html", "2 Metabolomics 2.1 Experimental methods and detailed description 2.2 Data processing 2.3 Multivariate analyses 2.4 VIPS 2.5 Manual annotation, identification and extraction of metabolic feature signals 2.6 Chromatorgrams 2.7 Correlations", " 2 Metabolomics 2.1 Experimental methods and detailed description Additional sampling notes During the sampling on the Pâmiut cruises, the sponges remained on deck or in the laboratory for approximately 30–45 min before they were frozen to -20°C. The outside temperature usually oscillated around 4–5°C, and the sorting area was approximately 10°C. The sample consisted of both choanosome and coretx. Laboratory methods and data acquisition Metabolites were separated in connection to downstream mass spectrometry (HRMS) analysis using two different chromatographic columns (UPLC): a hydrophilic interaction liquid chromatography (HILIC) column that retains polar compounds, and a reversed-phase (RP) column that favours retention of non-polar compounds. All samples were processed in randomized order using glass instruments during the extraction to avoid chemical contamination. Mass spectrometry analysis Dried extracts in glass vials were dissolved in 200 µL solvent (HILIC: 50 µL H2O and 175 µL acetonitrile AcN; RP: 140 µL H2O and 10 µL AcN). Upon addition of the organic solvent for HILIC chromatography, all samples separated into two immiscible layers. The vials were centrifuged for 3 min at 2000 x g to yield an even separation. Only the top layer (approximately 150 µL) was transferred to a Chromacol 03-FISV MS-vial (Thermo Scientific, Waltham, Massachusetts, USA) for MS analyses. For RP chromatography, no layers were observed, and the entire volume of the dissolved sample was used. A five µL aliquot from each individual MS-vial for HILIC and RP, respectively, was combined to produce a quality control (QC) sample. High resolution MS analysis system and settings The extracts were analyzed back-to-back in positive and negative ionization mode on an Acquity I-Class Ultra Performance Liquid Chromatography UPLC coupled to a G2S Synapt Q-TOF with an electrospray ionization (ESI) ion source (all Waters Corp., Milford, MA, USA). Chromatographic separation in HILIC mode was performed on an Acquity UPLC BEH Amide column (1.7 µm, 2.1 mm inner diameter × 50 mm, Waters Corp.). Mobile phase A consisted of 95:5 acetonitrile/MQ water with 5 mM ammonium formate and 0.1 % formic acid (FA), and mobile phase B consisted of 40:60 acetonitrile/MQ water with 5 mM ammonium formate and 0.1 % FA. The gradient elution profile was as follows: mobile phase A was decreased non-linearly (slope factor 8, MassLynx) from 100 % A to 100 % B over 14 min, 100 % B was held for 2 min and then decreased back to 100 % A over 1 min. The column was re-equilibrated at 100 % A for 6 min for a total runtime of 23 min. Chromatographic separation in RP was performed on an Acquity UPLC BEH C18 column (1.7 µ m, 2.1 mm inner diameter × 50 mm, Waters). Mobile phase A consisted of MQ water with 0.1 % FA, and mobile phase B was AcN with 0.1 % FA. The gradient elution profile started at 95 % A, was decreased linearly over 14 min to 5 % A, and 5 % A was held for 2 min before the column was re-equilibrated at 95 % A for 4 min. The flow rate was set to 0.4 mL/min, the column temperature was set to 40°C, the samples were kept at 8°C and the injection volume was 5 µL in all experiments. Data acquisition Data acquisition was performed using MSE mode, and lock mass correction was applied using a solution of leucine enkephalin in both positive and negative mode. Ionization parameters were set as follows in positive/negative mode; the capillary voltage was 1kV/1.5 kV, the cone voltage was 30 V/25 V, the source offset was 50/60 and the source temperature was set to 120°C. Nitrogen was used as desolvation and cone gas with gas flows of 800 l/h and 50 l/h, respectively, and desolvation temperature was set to 500°C/450°C. For MSE acquisition a collision energy ramp from 20–45 eV was used with argon as collision gas. The instrument was calibrated in the m/z range 50–1500 using sodium formate prior to each analysis. All study samples were analysed in both RP and HILIC, in positive and negative ionization mode, resulting in four metabolite datasets per sponge specimen. The column and sample cone was cleaned in between each analysis mode. Prior to each analysis ten QC injections were made to condition the column, and to ensure stable retention times and signal intensities. The study samples were analysed in randomized order with QC injections interspaced every 6th injection. MS data processing Raw files were converted to netCDF files by Databridge (part of MassLynx, Waters Corporation, Milford, Massachusetts, USA). The netCDF files with the chromatographic spectra were sorted into folders according to species and processed with XCMS in R. Peak picking was performed using the centWave function with parameters ppm=8, peakwidth set to c(5,45) and the noise parameter set to 2000. Retention time alignment was performed with the obiwarp function and the response factor set to 10, grouping was performed with the “group” function and the “fillPeaks” function was used to impute a signal in cases where no matching pseudospectra were detected. The data set was curated to remove features eluting in the void (retention time less than 45 s). A raw data set as well as two normalized data sets (Log10-transformed and median fold change normalized) were produced and filtered to only retain features with a coefficient of variation &lt; 30% in the QC samples. After subsequent evaluation, raw data sets were used in subsequent statistics and modelling. An overview of the number of features and PC groups annotated by CAMERA, as well as their exclusion is given in a table at the end of this document. 2.2 Data processing 2.2.1 Peak picking with XCMS and annotation with CAMERA We processed samples from all three sponnge species in random order with interspersed injection of a combined QC sample to monitor stability of the UPLC-HRMS run. The acquired signals/spectra were converted to netCDF format using the Program DataBridge, and thereafter sorted into four folders, three for the sponge species (Gb, Sf, Wb) and one for the QC samples (QC). Peak picking and combination of pseudospectra is performed with the R package xcms, the subsequent annotation of adducts and isotopes with the R package CAMERA. 2.2.2 HILIC (Hydrophilic interaction chromatography) column with positive ESI (electron spray ionisation) # HILIC POS ALWAYS CHECK DATE, CHROMATOGRAPHIC CLOUMN (HILIC, RP) AND ESI-MODE (naming, CAMERA: pos, neg) # setwd() # work in directory containing the sorted CDF files. getwd() library(xcms) xset &lt;- xcmsSet(method = &quot;centWave&quot;, ppm = 8, peakwidth = c(5, 45), noise = 2000) save(xset, file = &quot;HILIC_pos_xset_20190417.Rda&quot;) # load(file=&#39;HILIC_pos_xset_20190417.Rda&#39;) #When resuming after a break xset &lt;- group(xset) xset2 &lt;- retcor(xset, method = &quot;obiwarp&quot;, response = 10, plottype = &quot;deviation&quot;) xset2 &lt;- group(xset2) xset3 &lt;- fillPeaks(xset2) save(xset3, file = &quot;HILIC_pos_xset3_20190417.Rda&quot;) reporttab &lt;- diffreport(xset3, &quot;Gb&quot;, &quot;Sf&quot;, &quot;Gb_Sf_HILIC_pos_20190417&quot;, 10) library(CAMERA) xsa &lt;- xsAnnotate(xset3) xsaF &lt;- groupFWHM(xsa, perfwhm = 0.3) xsaC &lt;- groupCorr(xsaF, cor_eic_th = 0.7) xsaFI &lt;- findIsotopes(xsaC) rules &lt;- read.csv(&quot;data/rules_jan_pos.csv&quot;, header = T, sep = &quot;,&quot;) xsaFA &lt;- findAdducts(xsaFI, polarity = &quot;positive&quot;, rules = rules) # write.csv(getPeaklist(xsaFA), file=&#39;HILIC_pos_20190417.csv&#39;) The other data experiments, HILIC with negative ESI and RP with positive and negative ESI are processed accordingly. 2.2.3 HILIC Chromatography with negative ESI # HILIC NEG 20190421 # setwd() # work in directory containing the sorted CDF files. getwd() library(xcms) xset &lt;- xcmsSet(method = &quot;centWave&quot;, ppm = 8, peakwidth = c(5, 45), noise = 2000) save(xset, file = &quot;HILIC_neg_xset_20190421.Rda&quot;) # load(file=&#39;HILIC_neg_xset_20190421.Rda&#39;) #When resuming after a break xset &lt;- group(xset) xset2 &lt;- retcor(xset, method = &quot;obiwarp&quot;, response = 10, plottype = &quot;deviation&quot;) xset2 &lt;- group(xset2) xset3 &lt;- fillPeaks(xset2) save(xset3, file = &quot;HILIC_neg_xset3_20190421.Rda&quot;) reporttab &lt;- diffreport(xset3, &quot;Gb&quot;, &quot;Sf&quot;, &quot;Gb_Sf_HILIC_neg_20190421&quot;, 10) library(CAMERA) xsa &lt;- xsAnnotate(xset3) xsaF &lt;- groupFWHM(xsa, perfwhm = 0.3) xsaC &lt;- groupCorr(xsaF, cor_eic_th = 0.7) xsaFI &lt;- findIsotopes(xsaC) rules &lt;- read.csv(&quot;data/rules_jan_neg.csv&quot;, header = T, sep = &quot;,&quot;) xsaFA &lt;- findAdducts(xsaFI, polarity = &quot;negative&quot;, rules = rules) # write.csv(getPeaklist(xsaFA), file=&#39;HILIC_neg_20190421.csv&#39;) 2.2.4 RP (Reversed phase) Chromatography with positive ESI # RP POS 20190421 # setwd() # work in directory containing the sorted CDF files. getwd() library(xcms) xset &lt;- xcmsSet(method = &quot;centWave&quot;, ppm = 8, peakwidth = c(5, 45), noise = 2000) save(xset, file = &quot;RP_pos_xset_20190421.Rda&quot;) # load(file=&#39;RP_pos_xset_20190421.Rda&#39;) #When resuming after a break xset &lt;- group(xset) xset2 &lt;- retcor(xset, method = &quot;obiwarp&quot;, response = 10, plottype = &quot;deviation&quot;) xset2 &lt;- group(xset2) xset3 &lt;- fillPeaks(xset2) save(xset3, file = &quot;RP_pos_xset3_20190421.Rda&quot;) reporttab &lt;- diffreport(xset3, &quot;Gb&quot;, &quot;Sf&quot;, &quot;Gb_Sf_RP_pos_20190421&quot;, 10) library(CAMERA) xsa &lt;- xsAnnotate(xset3) xsaF &lt;- groupFWHM(xsa, perfwhm = 0.3) xsaC &lt;- groupCorr(xsaF, cor_eic_th = 0.7) xsaFI &lt;- findIsotopes(xsaC) rules &lt;- read.csv(&quot;data/rules_jan_pos.csv&quot;, header = T, sep = &quot;,&quot;) xsaFA &lt;- findAdducts(xsaFI, polarity = &quot;positive&quot;, rules = rules) # write.csv(getPeaklist(xsaFA), file=&#39;RP_pos_20190421.csv&#39;) 2.2.5 RP Chromatography with negative ESI # RP NEG 20190422 # setwd() # work in directory containing the sorted CDF files. getwd() library(xcms) xset &lt;- xcmsSet(method = &quot;centWave&quot;, ppm = 8, peakwidth = c(5, 45), noise = 2000) save(xset, file = &quot;RP_neg_xset_20190422.Rda&quot;) # load(file=&#39;RP_neg_xset_20190422.Rda&#39;) #When resuming after a break xset &lt;- group(xset) xset2 &lt;- retcor(xset, method = &quot;obiwarp&quot;, response = 10, plottype = &quot;deviation&quot;) xset2 &lt;- group(xset2) xset3 &lt;- fillPeaks(xset2) save(xset3, file = &quot;RP_neg_xset3_20190422.Rda&quot;) reporttab &lt;- diffreport(xset3, &quot;Gb&quot;, &quot;Sf&quot;, &quot;Gb_Sf_RP_neg_20190422&quot;, 10) library(CAMERA) xsa &lt;- xsAnnotate(xset3) xsaF &lt;- groupFWHM(xsa, perfwhm = 0.3) xsaC &lt;- groupCorr(xsaF, cor_eic_th = 0.7) xsaFI &lt;- findIsotopes(xsaC) rules &lt;- read.csv(&quot;data/rules_jan_neg.csv&quot;, header = T, sep = &quot;,&quot;) xsaFA &lt;- findAdducts(xsaFI, polarity = &quot;negative&quot;, rules = rules) # write.csv(getPeaklist(xsaFA), file=&#39;RP_neg_20190422.csv&#39;) 2.2.6 Filtering of the raw data set Features with with following properties were removed: Eluting in the void (RT &lt; 45 s) CV&gt;30 % in QC samples Adducts as annotated by CAMERA As the presence of the same parent feature in the the form of isotopes and adducts distorts downstream global metabolome analyses, we generated two versions of curated or selective feature tables. In both, void and unstably measured features are removed (“cleaned”). One retains only the feature with the largest signal per pc group (“cleaned_pcgroup”), the other is more stringent and only contains explicitly annotated parent ions (“cleaned_MH”), i.e. [M+H]+ for positive ESI and [M-H]- for negative ESI acquired data. library(dplyr) # ================================ HILIC pos =================================== raw_peaks &lt;- read.csv(&quot;data/HILIC_pos_20190417.csv&quot;) hp_dim1 &lt;- dim(raw_peaks)[1] hp_pcg1 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features eluting in the void raw_peaks &lt;- raw_peaks[raw_peaks$rt &gt; 45, ] hp_dim2 &lt;- dim(raw_peaks)[1] hp_pcg2 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features with a CV &lt; 30% f &lt;- which(colnames(raw_peaks) == &quot;IE_20170918_02001&quot;) # first QC HILIC pos l &lt;- which(colnames(raw_peaks) == &quot;IE_20170918_07601&quot;) # last QC HILIC pos raw_peaks[&quot;SD&quot;] &lt;- apply(raw_peaks[, f:l], 1, sd) raw_peaks[&quot;MEAN&quot;] &lt;- apply(raw_peaks[, f:l], 1, mean) raw_peaks[&quot;CV&quot;] &lt;- raw_peaks$SD/raw_peaks$MEAN raw_peaks &lt;- raw_peaks[raw_peaks$CV &lt; 0.3, ] hp_dim3 &lt;- dim(raw_peaks)[1] hp_pcg3 &lt;- length(unique(raw_peaks$pcgroup)) # write.csv(raw_peaks, &#39;HILIC_pos_20190417_cleaned.csv&#39;) # Keep only the feature with the greatest sum of signal per pc group l &lt;- dim(raw_peaks)[2] - 6 raw_peaks[&quot;fss&quot;] &lt;- apply(raw_peaks[, 13:l], 1, sum) #feature signal sum raw_peaks &lt;- raw_peaks[order(raw_peaks$pcgroup, -raw_peaks$fss), ] # for every pc group, the first line has the strongest signal. The function distinct() [dplyr package] can be used # to keep only unique/distinct rows from a data frame. If there are duplicate rows, _only the first row_ is # preserved. selected_peaks &lt;- distinct(raw_peaks, raw_peaks$pcgroup, .keep_all = TRUE) hp_dim4 &lt;- dim(selected_peaks)[1] hp_pcg4 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;HILIC_pos_20190417_cleaned_pcgroup.csv&#39;) rm(selected_peaks) # Keep only features with explicit annotations of [M+H]+ library(stringr) raw_peaks[&quot;[M+H]+&quot;] &lt;- NA pattern &lt;- &quot;[M+H]+&quot; raw_peaks[&quot;[M+H]+&quot;] &lt;- str_detect(raw_peaks$adduct, paste0(&quot;^\\\\Q&quot;, pattern, &quot;\\\\E&quot;)) selected_peaks &lt;- raw_peaks[raw_peaks$`[M+H]+` == &quot;TRUE&quot;, ] hp_dim5 &lt;- dim(selected_peaks)[1] hp_pcg5 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;HILIC_pos_20190417_cleaned_MH.csv&#39;) hilic_pos &lt;- raw_peaks rm(f, l, raw_peaks, selected_peaks) # ================================ HILIC neg =================================== raw_peaks &lt;- read.csv(&quot;data/HILIC_neg_20190421.csv&quot;) hn_dim1 &lt;- dim(raw_peaks)[1] hn_pcg1 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features eluting in the void raw_peaks &lt;- raw_peaks[raw_peaks$rt &gt; 45, ] hn_dim2 &lt;- dim(raw_peaks)[1] hn_pcg2 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features with a CV &lt; 30% f &lt;- which(colnames(raw_peaks) == &quot;IE_20170919_01301&quot;) # first QC HILIC neg l &lt;- which(colnames(raw_peaks) == &quot;IE_20170919_06901&quot;) # last QC HILIC neg raw_peaks[&quot;SD&quot;] &lt;- apply(raw_peaks[, f:l], 1, sd) raw_peaks[&quot;MEAN&quot;] &lt;- apply(raw_peaks[, f:l], 1, mean) raw_peaks[&quot;CV&quot;] &lt;- raw_peaks$SD/raw_peaks$MEAN raw_peaks &lt;- raw_peaks[raw_peaks$CV &lt; 0.3, ] hn_dim3 &lt;- dim(raw_peaks)[1] hn_pcg3 &lt;- length(unique(raw_peaks$pcgroup)) # write.csv(raw_peaks, &#39;HILIC_neg_20190421_cleaned.csv&#39;) # Keep only the feature with the greatest sum of signal per pc group l &lt;- dim(raw_peaks)[2] - 6 raw_peaks[&quot;fss&quot;] &lt;- apply(raw_peaks[, 13:l], 1, sum) #feature signal sum raw_peaks &lt;- raw_peaks[order(raw_peaks$pcgroup, -raw_peaks$fss), ] selected_peaks &lt;- distinct(raw_peaks, raw_peaks$pcgroup, .keep_all = TRUE) hn_dim4 &lt;- dim(selected_peaks)[1] hn_pcg4 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;HILIC_neg_20190421_cleaned_pcgroup.csv&#39;) rm(selected_peaks) # Keep only features with explicit annotations of [M-H]- library(stringr) raw_peaks[&quot;[M-H]-&quot;] &lt;- NA pattern &lt;- &quot;[M-H]-&quot; raw_peaks[&quot;[M-H]-&quot;] &lt;- str_detect(raw_peaks$adduct, paste0(&quot;^\\\\Q&quot;, pattern, &quot;\\\\E&quot;)) selected_peaks &lt;- raw_peaks[raw_peaks$`[M-H]-` == &quot;TRUE&quot;, ] hn_dim5 &lt;- dim(selected_peaks)[1] hn_pcg5 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;HILIC_neg_20190421_cleaned_MH.csv&#39;) hilic_neg &lt;- raw_peaks rm(f, l, raw_peaks) # ================================== RP pos ==================================== raw_peaks &lt;- read.csv(&quot;data/RP_pos_20190421.csv&quot;) rp_dim1 &lt;- dim(raw_peaks)[1] rp_pcg1 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features eluting in the void raw_peaks &lt;- raw_peaks[raw_peaks$rt &gt; 45, ] rp_dim2 &lt;- dim(raw_peaks)[1] rp_pcg2 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features with a CV &lt; 30% f &lt;- which(colnames(raw_peaks) == &quot;IE_20171002_01401&quot;) # first QC RP neg l &lt;- which(colnames(raw_peaks) == &quot;IE_20171002_07201&quot;) # last QC RP neg raw_peaks[&quot;SD&quot;] &lt;- apply(raw_peaks[, f:l], 1, sd) raw_peaks[&quot;MEAN&quot;] &lt;- apply(raw_peaks[, f:l], 1, mean) raw_peaks[&quot;CV&quot;] &lt;- raw_peaks$SD/raw_peaks$MEAN raw_peaks &lt;- raw_peaks[raw_peaks$CV &lt; 0.3, ] rp_dim3 &lt;- dim(raw_peaks)[1] rp_pcg3 &lt;- length(unique(raw_peaks$pcgroup)) # write.csv(raw_peaks, &#39;RP_pos_20190421_cleaned.csv&#39;) # Keep only the feature with the greatest sum of signal per pc group l &lt;- dim(raw_peaks)[2] - 6 raw_peaks[&quot;fss&quot;] &lt;- apply(raw_peaks[, 13:l], 1, sum) #feature signal sum raw_peaks &lt;- raw_peaks[order(raw_peaks$pcgroup, -raw_peaks$fss), ] selected_peaks &lt;- distinct(raw_peaks, raw_peaks$pcgroup, .keep_all = TRUE) rp_dim4 &lt;- dim(selected_peaks)[1] rp_pcg4 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;RP_pos_20190421_cleaned_pcgroup.csv&#39;) rm(selected_peaks) # Keep only features with explicit annotations of [M+H]+ library(stringr) raw_peaks[&quot;[M+H]+&quot;] &lt;- NA pattern &lt;- &quot;[M+H]+&quot; raw_peaks[&quot;[M+H]+&quot;] &lt;- str_detect(raw_peaks$adduct, paste0(&quot;^\\\\Q&quot;, pattern, &quot;\\\\E&quot;)) selected_peaks &lt;- raw_peaks[raw_peaks$`[M+H]+` == &quot;TRUE&quot;, ] rp_dim5 &lt;- dim(selected_peaks)[1] rp_pcg5 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;RP_pos_20190421_cleaned_MH.csv&#39;) rp_pos &lt;- raw_peaks rm(f, l, raw_peaks, selected_peaks) # ================================== RP neg ==================================== raw_peaks &lt;- read.csv(&quot;data/RP_neg_20190422.csv&quot;) rn_dim1 &lt;- dim(raw_peaks)[1] rn_pcg1 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features eluting in the void raw_peaks &lt;- raw_peaks[raw_peaks$rt &gt; 45, ] rn_dim2 &lt;- dim(raw_peaks)[1] rn_pcg2 &lt;- length(unique(raw_peaks$pcgroup)) # Removing features with a CV &lt; 30% f &lt;- which(colnames(raw_peaks) == &quot;IE_20171003_01301&quot;) # first QC RP neg l &lt;- which(colnames(raw_peaks) == &quot;IE_20171003_05701&quot;) # 3rd last QC RP neg; QC empty after this injection raw_peaks[&quot;SD&quot;] &lt;- apply(raw_peaks[, f:l], 1, sd) raw_peaks[&quot;MEAN&quot;] &lt;- apply(raw_peaks[, f:l], 1, mean) raw_peaks[&quot;CV&quot;] &lt;- raw_peaks$SD/raw_peaks$MEAN raw_peaks &lt;- raw_peaks[raw_peaks$CV &lt; 0.3, ] rn_dim3 &lt;- dim(raw_peaks)[1] rn_pcg3 &lt;- length(unique(raw_peaks$pcgroup)) # write.csv(raw_peaks, &#39;RP_neg_20190422_cleaned.csv&#39;) # Keep only the feature with the greatest sum of signal per pc group l &lt;- dim(raw_peaks)[2] - 6 raw_peaks[&quot;fss&quot;] &lt;- apply(raw_peaks[, 13:l], 1, sum) #feature signal sum raw_peaks &lt;- raw_peaks[order(raw_peaks$pcgroup, -raw_peaks$fss), ] selected_peaks &lt;- distinct(raw_peaks, raw_peaks$pcgroup, .keep_all = TRUE) rn_dim4 &lt;- dim(selected_peaks)[1] rn_pcg4 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;RP_neg_20190422_cleaned_pcgroup.csv&#39;) rm(selected_peaks) # Keep only features with explicit annotations of [M-H]- library(stringr) raw_peaks[&quot;[M-H]-&quot;] &lt;- NA pattern &lt;- &quot;[M-H]-&quot; raw_peaks[&quot;[M-H]-&quot;] &lt;- str_detect(raw_peaks$adduct, paste0(&quot;^\\\\Q&quot;, pattern, &quot;\\\\E&quot;)) selected_peaks &lt;- raw_peaks[raw_peaks$`[M-H]-` == &quot;TRUE&quot;, ] rn_dim5 &lt;- dim(selected_peaks)[1] rn_pcg5 &lt;- length(unique(selected_peaks$pcgroup)) # write.csv(selected_peaks, &#39;RP_neg_20190422_cleaned_MH.csv&#39;) hilic_neg &lt;- raw_peaks rm(f, l, raw_peaks, selected_peaks) 2.2.7 Data quality control To monitor the stability of the signal during the UPLC-HRMS run, we plot the total signal per sample by injection order. hp &lt;- read.csv(&quot;data/HILIC_pos_20190417.csv&quot;, header = T, sep = &quot;,&quot;) hn &lt;- read.csv(&quot;data/HILIC_neg_20190421.csv&quot;, header = T, sep = &quot;,&quot;) rp &lt;- read.csv(&quot;data/RP_pos_20190421.csv&quot;, header = T, sep = &quot;,&quot;) rn &lt;- read.csv(&quot;data/RP_neg_20190422.csv&quot;, header = T, sep = &quot;,&quot;) # subsetting, keep only sample data hp &lt;- hp[, 13:(dim(hp)[2] - 3)] #14 hn &lt;- hn[, 13:(dim(hn)[2] - 3)] rp &lt;- rp[, 13:(dim(rp)[2] - 3)] rn &lt;- rn[, 13:(dim(rn)[2] - 3)] # sum signal of columns, i.e. per sample hp[nrow(hp) + 1, ] &lt;- apply(hp, 2, sum) hn[nrow(hn) + 1, ] &lt;- apply(hn, 2, sum) rp[nrow(rp) + 1, ] &lt;- apply(rp, 2, sum) rn[nrow(rn) + 1, ] &lt;- apply(rn, 2, sum) # data frame gymnastics hp_df &lt;- data.frame(t((hp[dim(hp)[1], ]))) hn_df &lt;- data.frame(t((hn[dim(hn)[1], ]))) rp_df &lt;- data.frame(t((rp[dim(rp)[1], ]))) rn_df &lt;- data.frame(t((rn[dim(rn)[1], ]))) colnames(hp_df) &lt;- c(&quot;colsum_hp&quot;) hp_df[&quot;id&quot;] &lt;- rownames(hp_df) colnames(hn_df) &lt;- c(&quot;colsum_hn&quot;) hn_df[&quot;id&quot;] &lt;- rownames(hn_df) colnames(rp_df) &lt;- c(&quot;colsum_rp&quot;) rp_df[&quot;id&quot;] &lt;- rownames(rp_df) colnames(rn_df) &lt;- c(&quot;colsum_rn&quot;) rn_df[&quot;id&quot;] &lt;- rownames(rn_df) library(stringr) hp_df[&quot;hp_io&quot;] &lt;- as.integer(str_sub(hp_df$id, -4, -3)) hn_df[&quot;hn_io&quot;] &lt;- as.integer(str_sub(hn_df$id, -4, -3)) rp_df[&quot;rp_io&quot;] &lt;- as.integer(str_sub(rp_df$id, -4, -3)) rn_df[&quot;rn_io&quot;] &lt;- as.integer(str_sub(rn_df$id, -4, -3)) hp_df &lt;- hp_df[order(hp_df$hp_io), ] hp_df[&quot;n&quot;] &lt;- seq(nrow(hp_df)) hp_df[&quot;experiment&quot;] &lt;- &quot;HILIC pos.&quot; hn_df &lt;- hn_df[order(hn_df$hn_io), ] hn_df[&quot;n&quot;] &lt;- seq(nrow(hn_df)) hn_df[&quot;experiment&quot;] &lt;- &quot;HILIC neg.&quot; rp_df &lt;- rp_df[order(rp_df$rp_io), ] rp_df[&quot;n&quot;] &lt;- seq(nrow(rp_df)) rp_df[&quot;experiment&quot;] &lt;- &quot;RP pos.&quot; rn_df &lt;- rn_df[order(rn_df$rn_io), ] rn_df[&quot;n&quot;] &lt;- seq(nrow(rn_df)) rn_df[&quot;experiment&quot;] &lt;- &quot;RP neg.&quot; colnames(hp_df) &lt;- c(&quot;colsum&quot;, &quot;id&quot;, &quot;io&quot;, &quot;n&quot;, &quot;experiment&quot;) colnames(hn_df) &lt;- c(&quot;colsum&quot;, &quot;id&quot;, &quot;io&quot;, &quot;n&quot;, &quot;experiment&quot;) colnames(rp_df) &lt;- c(&quot;colsum&quot;, &quot;id&quot;, &quot;io&quot;, &quot;n&quot;, &quot;experiment&quot;) colnames(rn_df) &lt;- c(&quot;colsum&quot;, &quot;id&quot;, &quot;io&quot;, &quot;n&quot;, &quot;experiment&quot;) stability &lt;- rbind(hp_df, hn_df, rp_df, rn_df) library(ggplot2) ggplot(stability, aes(x = n, y = colsum, color = experiment)) + geom_line(size = 1.5) + ggtitle(&quot;Signal intensity during UPLC-HRMS experiments&quot;) + xlab(&quot;sample injection order&quot;) + ylab(&quot;total signal intensity per sample&quot;) + labs(colour = &quot;Experiment&quot;) + theme(legend.position = &quot;bottom&quot;) + geom_smooth(method = &quot;lm&quot;, size = 0.5) + facet_grid(experiment ~ ., scales = &quot;free&quot;) Figure 2.1: Cummulative signal intensity across all samples and chromatographic experiments shows only a minor effect of injection order. rm(hp, hp_df, hn, hn_df, rp, rp_df, rn, rn_df, stability) We see that while signal intensity in all experimental data seems fairly stable, the HILIC positive data set has the highest intensity and virtually no changes at all throughout data acquisition. Therefore, we mostly rely on analyses of the HILIC pos data set. 2.2.8 Summary of data processing Below we outline the number of features removed in every step as shown in the table and corresponding figure. ‘CV&gt;30%’ is the data set subsequently labelled “cleaned”, ‘repr. feat.’ are the PC-group data set and ‘ion’ are sometimes also labelled “MH”. initial_f &lt;- c(hp_dim1, hn_dim1, rp_dim1, rn_dim1) rt_f &lt;- c(hp_dim2, hn_dim2, rp_dim2, rn_dim2) cv_f &lt;- c(hp_dim3, hn_dim3, rp_dim3, rn_dim3) representative_f &lt;- c(hp_dim4, hn_dim4, rp_dim4, rn_dim4) ion_f &lt;- c(hp_dim5, hn_dim5, rp_dim5, rn_dim5) initial_p &lt;- c(hp_pcg1, hn_pcg1, rp_pcg1, rn_pcg1) rt_p &lt;- c(hp_pcg2, hn_pcg2, rp_pcg2, rn_pcg2) cv_p &lt;- c(hp_pcg3, hn_pcg3, rp_pcg3, rn_pcg3) representative_p &lt;- c(hp_pcg4, hn_pcg4, rp_pcg4, rn_pcg4) ion_p &lt;- c(hp_pcg5, hn_pcg5, rp_pcg5, rn_pcg5) df &lt;- cbind(initial_f, rt_f, cv_f, representative_f, ion_f, initial_p, rt_p, cv_p, representative_p, ion_p) rownames(df) &lt;- c(&quot;HILIC pos&quot;, &quot;HILIC neg&quot;, &quot;RP pos&quot;, &quot;RP neg&quot;) library(kableExtra) options(kableExtra.html.bsTable = T) kable(df, col.names = c(&quot;initial&quot;, &quot;RT &gt;45 s&quot;, &quot;CV &lt;30%&quot;, &quot;repr. feat.&quot;, &quot;ion&quot;, &quot;initial&quot;, &quot;RT &gt;45 s&quot;, &quot;CV &lt;30%&quot;, &quot;repr. feat.&quot;, &quot;ion&quot;), longtable = T, booktabs = T, caption = &quot;Number of features and pc groups remaining after each filtering step.&quot;) %&gt;% add_header_above(c(&quot;&quot;, features = 5, `pc groups` = 5)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) Table 2.1: Number of features and pc groups remaining after each filtering step. features pc groups initial RT &gt;45 s CV &lt;30% repr. feat. ion initial RT &gt;45 s CV &lt;30% repr. feat. ion HILIC pos 5113 4389 3507 2212 105 3298 2781 2212 2212 79 HILIC neg 4049 3081 2808 1351 123 2044 1495 1351 1351 62 RP pos 5821 5588 4673 2736 171 3420 3277 2736 2736 128 RP neg 3867 3621 3166 1678 105 2069 1918 1678 1678 80 library(reshape2) df &lt;- melt(df) df[&quot;filter&quot;] &lt;- c(rep((&quot;initial&quot;), 4), rep((&quot;RT &gt;45 s&quot;), 4), rep((&quot;CV &lt;30%&quot;), 4), rep((&quot;rep&quot;), 4), rep((&quot;ion&quot;), 4)) df$filter &lt;- factor(df$filter, levels = c(&quot;initial&quot;, &quot;RT &gt;45 s&quot;, &quot;CV &lt;30%&quot;, &quot;rep&quot;, &quot;ion&quot;)) df[&quot;category&quot;] &lt;- c(rep((&quot;feature&quot;), 20), rep((&quot;pc group&quot;), 20)) df$Var2 &lt;- NULL colnames(df) &lt;- c(&quot;acquisition&quot;, &quot;value&quot;, &quot;filter&quot;, &quot;category&quot;) library(ggplot2) ggplot(df, aes(fill = filter, x = acquisition, y = value)) + geom_bar(position = &quot;dodge&quot;, stat = &quot;identity&quot;) + facet_grid(. ~ category) + xlab(&quot;Data acquisition mode&quot;) + ylab(&quot;Count&quot;) + labs(fill = &quot;Filtering step&quot;) + theme_bw() + scale_fill_grey() + scale_y_continuous(breaks = seq(0, 6000, 1000)) + theme(axis.text.x = element_text(angle = 45, vjust = 0.5, hjust = 0.5), legend.position = &quot;bottom&quot;) Figure 2.2: Effect of different filtering steps on the resulting metabolomes in numbers of features. After preliminary analyses of metabolomics data, a few outliers were re-identified by P. Cárdenas, and one specimen was removed from the data set as it originated from another species. 2.3 Multivariate analyses We start by visualising all metabolomes with a PCA and a PERMANOVA to get a first impression of our data. library(ropls) library(dplyr) library(ggplot2) library(tidyverse) library(vegan) # load data hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) formatting &lt;- function(metabolome, meta_data, r, my_colnames) { formatted &lt;- metabolome formatted &lt;- formatted[, 14:(dim(formatted)[2] - r)] formatted &lt;- data.frame(t(formatted)) formatted[&quot;ID&quot;] &lt;- rownames(formatted) formatted[&quot;unified_ID&quot;] &lt;- meta_data$unified_ID[match(formatted$ID, meta_data[[my_colnames]])] formatted[&quot;filter&quot;] &lt;- str_sub(formatted$unified_ID, 1, 2) formatted &lt;- formatted[!formatted$filter == &quot;QC&quot;, ] formatted &lt;- na.omit(formatted) # formatted$filter &lt;- NULL formatted$ID &lt;- NULL formatted &lt;- formatted[order(formatted$unified_ID), ] rownames(formatted) &lt;- formatted$unified_ID return(formatted) } hilic_pos &lt;- formatting(hilic_pos, meta_data, 6, &quot;LC.MS.HILIC.positive&quot;) hilic_neg &lt;- formatting(hilic_neg, meta_data, 6, &quot;LC.MS.HILIC.negative&quot;) rp_pos &lt;- formatting(rp_pos, meta_data, 6, &quot;LC.MS.RP.positive&quot;) rp_neg &lt;- formatting(rp_neg, meta_data, 6, &quot;LC.MS.RP.negative&quot;) md &lt;- meta_data[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;YEAR&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;unified_ID&quot;)] # Overview PCA illustrating the metabolomes differ by sponge species pca_wrapper &lt;- function(metabolome, md, my_title) { metabolome$unified_ID &lt;- NULL metabolome$filter &lt;- NULL metabolome &lt;- prcomp(metabolome, scale = T) k &lt;- summary(metabolome)[[&quot;importance&quot;]] metabolome_df &lt;- data.frame(metabolome$x) #scores, i.e. principal components of the sponge sample metabolome_df[&quot;unified_ID&quot;] &lt;- as.factor(rownames(metabolome_df)) x1 &lt;- paste(&quot;PC1&quot;, round(k[2, 1], digits = 3) * 100, &quot;%&quot;) y1 &lt;- paste(&quot;PC2&quot;, round(k[2, 2], digits = 3) * 100, &quot;%&quot;) metabolome_df &lt;- left_join(metabolome_df[, c(&quot;PC1&quot;, &quot;PC2&quot;, &quot;PC3&quot;, &quot;unified_ID&quot;)], md[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;unified_ID&quot;)]) p &lt;- ggplot(metabolome_df, aes(x = PC1, y = PC2)) + geom_point(size = 3, aes(shape = factor(Species))) + ggtitle(my_title) + xlab(x1) + ylab(y1) + theme(legend.position = &quot;none&quot;) #+labs(shape=&#39;Species&#39;) return(p) } hp_pca &lt;- pca_wrapper(hilic_pos, md, &quot;Hilic pos&quot;) hn_pca &lt;- pca_wrapper(hilic_neg, md, &quot;Hilic neg&quot;) rp_pca &lt;- pca_wrapper(rp_pos, md, &quot;RP pos&quot;) rn_pca &lt;- pca_wrapper(rp_neg, md, &quot;RP pos&quot;) library(gridExtra) grid.arrange(hp_pca, hn_pca, rp_pca, rn_pca, nrow = 2) Figure 2.3: PCA of the cleaned data sets. Dots are Gb samples, squares are Wb samples, traingles are Sf samples. library(vegan) permanova &lt;- function(metabolome, md) { metabolome$filter &lt;- NULL md &lt;- md[md$unified_ID %in% metabolome$unified_ID, ] metabolome &lt;- metabolome[order(metabolome$unified_ID), ] md &lt;- md[order(md$unified_ID), ] metabolome$unified_ID &lt;- NULL m &lt;- adonis(metabolome ~ Species, md) return(m) } permanova(hilic_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 5.6422 2.82112 34.302 0.62026 0.001 *** ## Residuals 42 3.4543 0.08224 0.37974 ## Total 44 9.0965 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(hilic_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 2.0768 1.03838 26.046 0.55363 0.001 *** ## Residuals 42 1.6744 0.03987 0.44637 ## Total 44 3.7512 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 6.0969 3.04847 35.972 0.6314 0.001 *** ## Residuals 42 3.5593 0.08475 0.3686 ## Total 44 9.6563 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 6.4179 3.2089 36.013 0.63725 0.001 *** ## Residuals 41 3.6533 0.0891 0.36275 ## Total 43 10.0712 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 From the PCA and the PERMANOVA (function adonis, Pr(&gt;F) is the p-value), we gather that the metabolomes regardless of how they were acquired are significatly different in the three sponge species. Therefore, we separate the metabolomes for investigating the effect of depth on them individually. In order to investigate whether depth has an effect on the metabolomes, we use OPLS orthogonal projections of latent structures as multivariate analysis approach. This method allows to separate variations in the data based on e.g. depth and orthogonal, i.e. unrelated variation. # splitting df and adapting meta data spl_ada &lt;- function(metabolome, md) { metabolome_gb &lt;- metabolome[metabolome$filter == &quot;Gb&quot;, ] metabolome_sf &lt;- metabolome[metabolome$filter == &quot;Sf&quot;, ] metabolome_wb &lt;- metabolome[metabolome$filter == &quot;Wb&quot;, ] md_gb &lt;- md[md$unified_ID %in% metabolome_gb$unified_ID, ] md_sf &lt;- md[md$unified_ID %in% metabolome_sf$unified_ID, ] md_wb &lt;- md[md$unified_ID %in% metabolome_wb$unified_ID, ] metabolome_gb &lt;- metabolome_gb[order(metabolome_gb$unified_ID), ] metabolome_sf &lt;- metabolome_sf[order(metabolome_sf$unified_ID), ] metabolome_wb &lt;- metabolome_wb[order(metabolome_wb$unified_ID), ] metabolome_gb$filter &lt;- NULL metabolome_gb$unified_ID &lt;- NULL metabolome_sf$filter &lt;- NULL metabolome_sf$unified_ID &lt;- NULL metabolome_wb$filter &lt;- NULL metabolome_wb$unified_ID &lt;- NULL md_gb &lt;- md_gb[order(md_gb$unified_ID), ] md_sf &lt;- md_sf[order(md_sf$unified_ID), ] md_wb &lt;- md_wb[order(md_wb$unified_ID), ] mva_data &lt;- list(metabolome_gb = metabolome_gb, metabolome_sf = metabolome_sf, metabolome_wb = metabolome_wb, md_gb = md_gb, md_sf = md_sf, md_wb = md_wb) return(mva_data) } hp_opls_df &lt;- spl_ada(hilic_pos, md) hn_opls_df &lt;- spl_ada(hilic_neg, md) rp_opls_df &lt;- spl_ada(rp_pos, md) rn_opls_df &lt;- spl_ada(rp_neg, md) # P should be NA; or 1 ropls_wrapper &lt;- function(opls_df, p1, p2, p3) { # ropls&#39; PCA gb.pca &lt;- opls(opls_df$metabolome_gb, plotL = F, printL = F) sf.pca &lt;- opls(opls_df$metabolome_sf, plotL = F, printL = F) wb.pca &lt;- opls(opls_df$metabolome_wb, plotL = F, printL = F) md_gb &lt;- opls_df$md_gb md_sf &lt;- opls_df$md_sf md_wb &lt;- opls_df$md_wb # ropls&#39; OPLS gb.opls &lt;- opls(opls_df$metabolome_gb, md_gb[, &quot;Depth&quot;], permI = 1000, orthoI = p1, scaleC = &quot;pareto&quot;, plotL = F) sf.opls &lt;- opls(opls_df$metabolome_sf, md_sf[, &quot;Depth&quot;], permI = 1000, orthoI = p2, scaleC = &quot;pareto&quot;, plotL = F) wb.opls &lt;- opls(opls_df$metabolome_wb, md_wb[, &quot;Depth&quot;], permI = 1000, orthoI = p3, scaleC = &quot;pareto&quot;, plotL = F) # summary gb.opls &lt;- gb.opls@summaryDF sf.opls &lt;- sf.opls@summaryDF wb.opls &lt;- wb.opls@summaryDF opls_diagnostics &lt;- rbind(gb.opls, sf.opls, wb.opls) opls_diagnostics[&quot;Species&quot;] &lt;- c(&quot;Geodia barretti&quot;, &quot;Stryphnus fortis&quot;, &quot;Weberella bursa&quot;) return(opls_diagnostics) } a &lt;- Sys.time() hp_cleaned_opls &lt;- ropls_wrapper(hp_opls_df, NA, 1, NA) hn_cleaned_opls &lt;- ropls_wrapper(hn_opls_df, NA, 1, NA) rp_cleaned_opls &lt;- ropls_wrapper(rp_opls_df, NA, 1, NA) rn_cleaned_opls &lt;- ropls_wrapper(rn_opls_df, 1, 1, NA) b &lt;- Sys.time() b - a cleaned &lt;- rbind(hp_cleaned_opls, hn_cleaned_opls, rp_cleaned_opls, rn_cleaned_opls) cleaned[&quot;Experiment&quot;] &lt;- c(rep(&quot;HILIC pos&quot;, 3), rep(&quot;HILIC neg&quot;, 3), rep(&quot;RP pos&quot;, 3), rep(&quot;RP neg&quot;, 3)) write.csv(cleaned, &quot;data/cleaned_opls_diagnostics.csv&quot;, row.names = F) In the same manner, we can analyse the two remaining sets produced by different filtering options. # load data ION hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) hilic_pos &lt;- formatting(hilic_pos, meta_data, 8, &quot;LC.MS.HILIC.positive&quot;) hilic_neg &lt;- formatting(hilic_neg, meta_data, 8, &quot;LC.MS.HILIC.negative&quot;) rp_pos &lt;- formatting(rp_pos, meta_data, 8, &quot;LC.MS.RP.positive&quot;) rp_neg &lt;- formatting(rp_neg, meta_data, 8, &quot;LC.MS.RP.negative&quot;) md &lt;- meta_data[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;YEAR&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;unified_ID&quot;)] hp_pca &lt;- pca_wrapper(hilic_pos, md, &quot;Hilic pos&quot;) hn_pca &lt;- pca_wrapper(hilic_neg, md, &quot;Hilic neg&quot;) rp_pca &lt;- pca_wrapper(rp_pos, md, &quot;RP pos&quot;) rn_pca &lt;- pca_wrapper(rp_neg, md, &quot;RP pos&quot;) grid.arrange(hp_pca, hn_pca, rp_pca, rn_pca, nrow = 2) Figure 2.4: PCA of the metabolome data setf filtered to retain only annotated ions. Dots are Gb samples, squares are Wb samples, traingles are Sf samples. permanova(hilic_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 7.9121 3.9560 48.131 0.69623 0.001 *** ## Residuals 42 3.4521 0.0822 0.30377 ## Total 44 11.3642 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(hilic_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 1.23799 0.61899 31.471 0.59978 0.001 *** ## Residuals 42 0.82609 0.01967 0.40022 ## Total 44 2.06408 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 8.9172 4.4586 52.824 0.71554 0.001 *** ## Residuals 42 3.5450 0.0844 0.28446 ## Total 44 12.4621 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 7.4863 3.7432 33.508 0.62043 0.001 *** ## Residuals 41 4.5801 0.1117 0.37957 ## Total 43 12.0665 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 hp_opls_df &lt;- spl_ada(hilic_pos, md) hn_opls_df &lt;- spl_ada(hilic_neg, md) rp_opls_df &lt;- spl_ada(rp_pos, md) rn_opls_df &lt;- spl_ada(rp_neg, md) a &lt;- Sys.time() hp_cleaned_opls &lt;- ropls_wrapper(hp_opls_df, NA, 1, NA) hn_cleaned_opls &lt;- ropls_wrapper(hn_opls_df, NA, NA, NA) rp_cleaned_opls &lt;- ropls_wrapper(rp_opls_df, NA, 1, NA) rn_cleaned_opls &lt;- ropls_wrapper(rn_opls_df, 1, 1, NA) b &lt;- Sys.time() b - a ion &lt;- rbind(hp_cleaned_opls, hn_cleaned_opls, rp_cleaned_opls, rn_cleaned_opls) ion[&quot;Experiment&quot;] &lt;- c(rep(&quot;HILIC pos&quot;, 3), rep(&quot;HILIC neg&quot;, 3), rep(&quot;RP pos&quot;, 3), rep(&quot;RP neg&quot;, 3)) write.csv(ion, &quot;data/cleaned_MH_opls_diagnostics.csv&quot;, row.names = F) # load data PC_GROUP hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) hilic_pos &lt;- formatting(hilic_pos, meta_data, 8, &quot;LC.MS.HILIC.positive&quot;) hilic_neg &lt;- formatting(hilic_neg, meta_data, 8, &quot;LC.MS.HILIC.negative&quot;) rp_pos &lt;- formatting(rp_pos, meta_data, 8, &quot;LC.MS.RP.positive&quot;) rp_neg &lt;- formatting(rp_neg, meta_data, 8, &quot;LC.MS.RP.negative&quot;) md &lt;- meta_data[, c(&quot;Species&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;YEAR&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;unified_ID&quot;)] hp_pca &lt;- pca_wrapper(hilic_pos, md, &quot;Hilic pos&quot;) hn_pca &lt;- pca_wrapper(hilic_neg, md, &quot;Hilic neg&quot;) rp_pca &lt;- pca_wrapper(rp_pos, md, &quot;RP pos&quot;) rn_pca &lt;- pca_wrapper(rp_neg, md, &quot;RP pos&quot;) grid.arrange(hp_pca, hn_pca, rp_pca, rn_pca, nrow = 2) Figure 2.5: PCA of the metabolome data setf filtered to retain the feature with the strongest signal per PC group. Dots are Gb samples, squares are Wb samples, traingles are Sf samples. permanova(hilic_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 6.0660 3.03302 33.376 0.6138 0.001 *** ## Residuals 42 3.8167 0.09087 0.3862 ## Total 44 9.8828 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(hilic_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 5.1323 2.56616 32.819 0.6098 0.001 *** ## Residuals 42 3.2840 0.07819 0.3902 ## Total 44 8.4163 1.0000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_pos, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 5.7191 2.85957 35.582 0.62886 0.001 *** ## Residuals 42 3.3754 0.08037 0.37114 ## Total 44 9.0945 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 permanova(rp_neg, md) ## ## Call: ## adonis(formula = metabolome ~ Species, data = md) ## ## Permutation: free ## Number of permutations: 999 ## ## Terms added sequentially (first to last) ## ## Df SumsOfSqs MeanSqs F.Model R2 Pr(&gt;F) ## Species 2 6.8700 3.4350 33.333 0.61919 0.001 *** ## Residuals 41 4.2251 0.1031 0.38081 ## Total 43 11.0952 1.00000 ## --- ## Signif. codes: 0 &#39;***&#39; 0.001 &#39;**&#39; 0.01 &#39;*&#39; 0.05 &#39;.&#39; 0.1 &#39; &#39; 1 hp_opls_df &lt;- spl_ada(hilic_pos, md) hn_opls_df &lt;- spl_ada(hilic_neg, md) rp_opls_df &lt;- spl_ada(rp_pos, md) rn_opls_df &lt;- spl_ada(rp_neg, md) a &lt;- Sys.time() hp_cleaned_opls &lt;- ropls_wrapper(hp_opls_df, NA, NA, NA) hn_cleaned_opls &lt;- ropls_wrapper(hn_opls_df, NA, NA, NA) rp_cleaned_opls &lt;- ropls_wrapper(rp_opls_df, NA, NA, NA) rn_cleaned_opls &lt;- ropls_wrapper(rn_opls_df, NA, NA, NA) b &lt;- Sys.time() b - a pcg &lt;- rbind(hp_cleaned_opls, hn_cleaned_opls, rp_cleaned_opls, rn_cleaned_opls) pcg[&quot;Experiment&quot;] &lt;- c(rep(&quot;HILIC pos&quot;, 3), rep(&quot;HILIC neg&quot;, 3), rep(&quot;RP pos&quot;, 3), rep(&quot;RP neg&quot;, 3)) write.csv(pcg, &quot;data/cleaned_PC_opls_diagnostics.csv&quot;, row.names = F) In some cases, an OPLS model was not appropriate Typically, the model chooses the number of orthogonal components by itself (orthI=NA) and when the first component is not significant, the model building will stop. However, one can force any number of orthogonal components and run the model anyways. You can spot those cases when the NA was set to 1 in the ropls_wrapper function The multivariate analyses (OPLS) were quite time consuming, requiring 1.4 hours for the “cleaned” data sets, 46.3 min for the “PC-group” data stes and 4 min for the “ion” data sets on my system. Therefore, the combined model diagnostics are summarised in Tab 2.2. library(kableExtra) cleaned &lt;- read.csv(&quot;data/cleaned_opls_diagnostics.csv&quot;, header = T) pcgrp &lt;- read.csv(&quot;data/cleaned_PC_opls_diagnostics.csv&quot;, header = T) ion &lt;- read.csv(&quot;data/cleaned_MH_opls_diagnostics.csv&quot;, header = T) opls_diagnostics &lt;- rbind(cleaned, pcgrp, ion) opls_diagnostics[&quot;filtering&quot;] &lt;- c(rep(&quot;cleaned&quot;, 12), rep(&quot;pc group&quot;, 12), rep(&quot;ion&quot;, 12)) options(kableExtra.html.bsTable = T) kable(opls_diagnostics, col.names = c(&quot;R2X cum&quot;, &quot;R2Y cum&quot;, &quot;Q2 cum&quot;, &quot;RMSEE&quot;, &quot;pre&quot;, &quot;ort&quot;, &quot;pR2Y&quot;, &quot;pQ2&quot;, &quot;Species&quot;, &quot;Experiment&quot;, &quot;data set&quot;), longtable = T, booktabs = T, caption = &quot;Model diagnostics of the metabolome variations modelled by depth&quot;, row.names = FALSE) %&gt;% add_header_above(c(Diagnostics = 8, `Data set attribution` = 3)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), font_size = 12, full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) Table 2.2: Model diagnostics of the metabolome variations modelled by depth Diagnostics Data set attribution R2X cum R2Y cum Q2 cum RMSEE pre ort pR2Y pQ2 Species Experiment data set 0.425 0.998 0.8670 19.7 1 2 0.001 0.001 Geodia barretti HILIC pos cleaned 0.257 0.988 0.6530 42.0 1 1 0.067 0.002 Stryphnus fortis HILIC pos cleaned 0.496 0.999 0.5490 13.7 1 3 0.002 0.028 Weberella bursa HILIC pos cleaned 0.464 0.988 0.7670 47.4 1 2 0.010 0.001 Geodia barretti HILIC neg cleaned 0.436 0.924 0.6290 106.0 1 1 0.074 0.002 Stryphnus fortis HILIC neg cleaned 0.366 0.985 0.5560 42.4 1 2 0.233 0.013 Weberella bursa HILIC neg cleaned 0.585 0.998 0.7960 22.6 1 3 0.003 0.001 Geodia barretti RP pos cleaned 0.328 0.965 0.5680 71.5 1 1 0.039 0.010 Stryphnus fortis RP pos cleaned 0.343 0.980 0.3350 48.8 1 2 0.113 0.108 Weberella bursa RP pos cleaned 0.304 0.937 0.6140 99.8 1 1 0.040 0.003 Geodia barretti RP neg cleaned 0.390 0.924 0.5060 106.0 1 1 0.089 0.015 Stryphnus fortis RP neg cleaned 0.412 0.985 0.4500 41.9 1 2 0.029 0.027 Weberella bursa RP neg cleaned 0.429 0.997 0.8660 23.7 1 2 0.003 0.001 Geodia barretti HILIC pos pc group 0.362 0.998 0.7020 19.9 1 2 0.049 0.004 Stryphnus fortis HILIC pos pc group 0.542 0.995 0.5820 25.9 1 3 0.114 0.015 Weberella bursa HILIC pos pc group 0.499 0.990 0.7500 43.2 1 2 0.004 0.002 Geodia barretti HILIC neg pc group 0.433 0.990 0.7230 40.9 1 2 0.068 0.002 Stryphnus fortis HILIC neg pc group 0.390 0.986 0.6000 39.8 1 2 0.132 0.005 Weberella bursa HILIC neg pc group 0.602 0.996 0.8090 28.9 1 3 0.014 0.001 Geodia barretti RP pos pc group 0.464 0.990 0.5850 40.9 1 2 0.122 0.017 Stryphnus fortis RP pos pc group 0.393 0.979 0.3590 49.8 1 2 0.045 0.115 Weberella bursa RP pos pc group 0.373 0.979 0.6850 59.9 1 2 0.137 0.002 Geodia barretti RP neg pc group 0.637 0.991 0.6140 39.9 1 3 0.455 0.035 Stryphnus fortis RP neg pc group 0.440 0.980 0.4170 48.6 1 2 0.089 0.049 Weberella bursa RP neg pc group 0.761 0.995 0.6610 34.2 1 5 0.072 0.018 Geodia barretti HILIC pos ion 0.294 0.915 0.3540 112.0 1 1 0.226 0.109 Stryphnus fortis HILIC pos ion 0.694 0.988 0.6570 40.2 1 4 0.032 0.019 Weberella bursa HILIC pos ion 0.401 0.942 0.6580 105.0 1 2 0.013 0.002 Geodia barretti HILIC neg ion 0.815 0.992 0.7570 39.5 1 3 0.007 0.008 Stryphnus fortis HILIC neg ion 0.556 0.949 0.6530 77.3 1 2 0.005 0.004 Weberella bursa HILIC neg ion 0.778 0.910 0.7940 126.0 1 1 0.001 0.001 Geodia barretti RP pos ion 0.368 0.874 0.2560 137.0 1 1 0.026 0.159 Stryphnus fortis RP pos ion 0.479 0.960 0.4060 68.1 1 2 0.005 0.032 Weberella bursa RP pos ion 0.430 0.624 0.0345 244.0 1 1 0.268 0.198 Geodia barretti RP neg ion 0.821 0.392 0.0936 300.0 1 1 0.585 0.190 Stryphnus fortis RP neg ion 0.804 0.973 0.5850 61.8 1 4 0.065 0.027 Weberella bursa RP neg ion write.csv(opls_diagnostics, &quot;data/opls_diagnostics.csv&quot;, row.names = F) ??? add at least one picture of an opls 2.4 VIPS From the multivariate model (OPLS) you can derive a vaiable importance in projection (VIF) score for every feature in this model. This is a approximation (but not a statistics test!) of features that support the model. A feature with a VIP score \\(\\geq\\) 1 is considered important and the higher the score, the greater the contribution to the model. 2.5 Manual annotation, identification and extraction of metabolic feature signals A manually curated data set of signal intensities was produced for analysis of identified known and novel compounds. library(ggplot2) library(ggrepel) library(reshape) library(tidyverse) library(forcats) cmp &lt;- read.csv(&quot;data/metabolite_master_20190605.csv&quot;, header = T, sep = &quot;,&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) md &lt;- md[c(&quot;Depth&quot;, &quot;unified_ID&quot;)] # FUN prep: remove, QC samples format depth and IDs prep &lt;- function(metabolites, md) { metabolites$X &lt;- NULL metabolites[&quot;spec&quot;] &lt;- str_sub(metabolites$unified_ID, 1, 2) metabolites &lt;- metabolites[!metabolites$spec == &quot;QC&quot;, ] metabolites &lt;- left_join(metabolites, md) metabolites &lt;- metabolites[-c(9), ] #removes Gb16 (Geodia atlantica) metabolites$Depth &lt;- as.numeric(metabolites$Depth) metabolites &lt;- metabolites[with(metabolites, order(metabolites$spec, metabolites$Depth)), ] metabolites[] &lt;- lapply(metabolites, function(x) if (is.factor(x)) factor(x) else x) metabolites$unified_ID &lt;- factor(metabolites$unified_ID, levels = metabolites$unified_ID) return(metabolites) } metabolites &lt;- prep(cmp, md) library(reshape2) mets &lt;- metabolites[, c(&quot;asb&quot;, &quot;his&quot;, &quot;cre&quot;, &quot;pch&quot;, &quot;crn&quot;, &quot;acl&quot;, &quot;ser&quot;, &quot;mbc&quot;, &quot;chol_s&quot;, &quot;bet&quot;, &quot;choline&quot;, &quot;ura&quot;, &quot;unified_ID&quot;, &quot;spec&quot;, &quot;Depth&quot;)] colnames(mets) &lt;- c(&quot;arseno- betaine&quot;, &quot;histamine&quot;, &quot;creatine&quot;, &quot;phospho- choline&quot;, &quot;carnitine&quot;, &quot;acetyl- choline&quot;, &quot;serotonin&quot;, &quot;2-methyl- butyroyl- carnitine&quot;, &quot;choline sulfate&quot;, &quot;betaine&quot;, &quot;choline&quot;, &quot;uranidine&quot;, &quot;unified_ID&quot;, &quot;spec&quot;, &quot;Depth&quot;) mets &lt;- melt(mets, id.vars = c(&quot;spec&quot;, &quot;Depth&quot;, &quot;unified_ID&quot;)) mets[&quot;Species&quot;] &lt;- NA mets$Species[mets$spec == &quot;Gb&quot;] &lt;- c(&quot;Geodia barretti&quot;) mets$Species[mets$spec == &quot;Sf&quot;] &lt;- c(&quot;Stryphnus fortis&quot;) mets$Species[mets$spec == &quot;Wb&quot;] &lt;- c(&quot;Weberella bursa&quot;) # labeller needs formula interface all &lt;- ggplot(mets, aes(x = Depth, y = value)) + geom_point() + facet_grid(variable ~ Species, labeller = labeller(variable = label_wrap_gen(10, multi_line = TRUE)), scales = &quot;free&quot;) all &lt;- all + ggtitle(&quot;VIPs&quot;) + ylab(&quot;signal&quot;) + xlab(&quot;Depth&quot;) + theme_bw() + theme(strip.text.x = element_text(face = &quot;italic&quot;), panel.background = element_rect(fill = &quot;white&quot;, colour = &quot;black&quot;), panel.border = element_rect(colour = &quot;black&quot;, fill = NA), axis.text.x = element_text(angle = 90, hjust = 1)) + scale_y_continuous(labels = scales::scientific) + scale_x_continuous(breaks = scales::pretty_breaks(n = 12)) all 2.6 Chromatorgrams In G. barretti barettin and 8,9-dihydrobarettin are major compounds with distinct peaks in the chromatogram. We wanted to see whether S. fortis and W. bursa also had major compounds and whether differences in sample depth would be directly reflected in the chromatograms. gb_chrom &lt;- read.csv(&quot;data/Gb_all_chromatograms.csv&quot;, header = T, sep = &quot;;&quot;) # differences in RT negligible/insignificant between the different chromatograms/samples gb_chrom[, c(&quot;Gb10_RT&quot;, &quot;Gb12_RT&quot;, &quot;Gb13_RT&quot;, &quot;Gb14_RT&quot;, &quot;Gb15_RT&quot;, &quot;Gb16_RT&quot;, &quot;Gb17_RT&quot;, &quot;Gb18_RT&quot;, &quot;Gb19_RT&quot;, &quot;Gb2_RT&quot;, &quot;Gb20_RT&quot;, &quot;Gb21_RT&quot;, &quot;Gb3_RT&quot;, &quot;Gb7_RT&quot;, &quot;Gb8_RT&quot;, &quot;Gb9_RT&quot;)] &lt;- list(NULL) colnames(gb_chrom)[colnames(gb_chrom) == &quot;Gb1_RT&quot;] &lt;- &quot;RT&quot; gb_chrom &lt;- gb_chrom[gb_chrom$RT &lt;= 12, ] # removing tail w/o any signal, run ended at 12 min # ugly but works p_gb_chrom &lt;- ggplot(gb_chrom, aes(x = RT, y = Gb1)) + geom_line() + theme_classic() + geom_rect(data = NULL, aes(xmin = 6.3, xmax = 6.5, ymin = -Inf, ymax = Inf), fill = &quot;lightgreen&quot;, alpha = 0.5) + geom_rect(data = NULL, aes(xmin = 6.95, xmax = 7.15, ymin = -Inf, ymax = Inf), fill = &quot;lightblue&quot;, alpha = 0.5) + geom_line(aes(x = RT, y = Gb2)) + geom_line(aes(x = RT, y = Gb3)) + geom_line(aes(x = RT, y = Gb7)) + geom_line(aes(x = RT, y = Gb8)) + geom_line(aes(x = RT, y = Gb9)) + geom_line(aes(x = RT, y = Gb10)) + geom_line(aes(x = RT, y = Gb15)) + geom_line(aes(x = RT, y = Gb16)) + geom_line(aes(x = RT, y = Gb17)) + geom_line(aes(x = RT, y = Gb19)) + geom_line(aes(x = RT, y = Gb21)) + geom_line(aes(x = RT, y = Gb12, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Gb13, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Gb14, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Gb18, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Gb20, color = &quot;red&quot;, alpha = 0.5)) + xlab(&quot;RT&quot;) + ylab(&quot;Signal intensity&quot;) + ggtitle(&quot;Overlay chromatograms from G. barretti HILIC positive&quot;) + theme(legend.position = &quot;none&quot;) sf_chrom &lt;- read.csv(&quot;data/Sf_all_chromatograms.csv&quot;, header = T, sep = &quot;;&quot;) sf_chrom[, c(&quot;Sf10_RT&quot;, &quot;Sf11_RT&quot;, &quot;Sf12_RT&quot;, &quot;Sf13_RT&quot;, &quot;Sf14_RT&quot;, &quot;Sf15_RT&quot;, &quot;Sf2_RT&quot;, &quot;Sf3_RT&quot;, &quot;Sf4_RT&quot;, &quot;Sf5_RT&quot;, &quot;Sf6_RT&quot;, &quot;Sf7_RT&quot;)] &lt;- list(NULL) colnames(sf_chrom)[colnames(sf_chrom) == &quot;Sf1_RT&quot;] &lt;- &quot;RT&quot; sf_chrom &lt;- sf_chrom[sf_chrom$RT &lt;= 12, ] p_sf_chrom &lt;- ggplot(sf_chrom, aes(x = RT, y = Sf1)) + geom_line() + geom_line(aes(x = RT, y = Sf2)) + geom_line(aes(x = RT, y = Sf3)) + geom_line(aes(x = RT, y = Sf4)) + geom_line(aes(x = RT, y = Sf5)) + geom_line(aes(x = RT, y = Sf6)) + geom_line(aes(x = RT, y = Sf7)) + geom_line(aes(x = RT, y = Sf10, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Sf11, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Sf12, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Sf13, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Sf14, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Sf15, color = &quot;red&quot;, alpha = 0.5)) + xlab(&quot;RT&quot;) + ylab(&quot;Signal intensity&quot;) + ggtitle(&quot;Overlay chromatograms from S. fortis HILIC positive&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) wb_chrom &lt;- read.csv(&quot;data/Wb_all_chromatograms.csv&quot;, header = T, sep = &quot;;&quot;) wb_chrom[, c(&quot;Wb10_RT&quot;, &quot;Wb11_RT&quot;, &quot;Wb12_RT&quot;, &quot;Wb13_RT&quot;, &quot;Wb14_RT&quot;, &quot;Wb15_RT&quot;, &quot;Wb16_RT&quot;, &quot;Wb17_RT&quot;, &quot;Wb2_RT&quot;, &quot;Wb3_RT&quot;, &quot;Wb4_RT&quot;, &quot;Wb5_RT&quot;, &quot;Wb6_RT&quot;, &quot;Wb7_RT&quot;, &quot;Wb8_RT&quot;)] &lt;- list(NULL) colnames(wb_chrom)[colnames(wb_chrom) == &quot;Wb1_RT&quot;] &lt;- &quot;RT&quot; wb_chrom &lt;- wb_chrom[wb_chrom$RT &lt;= 12, ] p_wb_chrom &lt;- ggplot(wb_chrom, aes(x = RT, y = Wb1)) + geom_line() + geom_line(aes(x = RT, y = Wb2)) + geom_line(aes(x = RT, y = Wb3)) + geom_line(aes(x = RT, y = Wb4)) + geom_line(aes(x = RT, y = Wb5)) + geom_line(aes(x = RT, y = Wb6)) + geom_line(aes(x = RT, y = Wb7)) + geom_line(aes(x = RT, y = Wb8)) + geom_line(aes(x = RT, y = Wb10)) + geom_line(aes(x = RT, y = Wb11)) + geom_line(aes(x = RT, y = Wb12)) + geom_line(aes(x = RT, y = Wb13, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Wb14, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Wb15, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Wb16, color = &quot;red&quot;, alpha = 0.5)) + geom_line(aes(x = RT, y = Wb17, color = &quot;red&quot;, alpha = 0.5)) + xlab(&quot;RT&quot;) + ylab(&quot;Signal intensity&quot;) + ggtitle(&quot;Overlay chromatograms from W. bursa HILIC positive&quot;) + theme_classic() + theme(legend.position = &quot;none&quot;) library(gridExtra) grid.arrange(p_gb_chrom, p_sf_chrom, p_wb_chrom, nrow = 3) rm(p_gb_chrom, p_sf_chrom, p_wb_chrom, gb_chrom, sf_chrom, wb_chrom) 2.7 Correlations sessionInfo() ## R version 3.5.1 (2018-07-02) ## Platform: x86_64-apple-darwin15.6.0 (64-bit) ## Running under: macOS 10.14.6 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] reshape_0.8.8 rnaturalearthdata_0.1.0 rnaturalearth_0.1.0 sf_0.8-1 ## [5] ggrepel_0.8.2 marmap_1.0.3 mapdata_2.3.0 maps_3.3.0 ## [9] ggmap_3.0.0.901 bookdown_0.18 reshape2_1.4.3 vegan_2.5-6 ## [13] lattice_0.20-41 permute_0.9-5 forcats_0.5.0 stringr_1.4.0 ## [17] purrr_0.3.3 readr_1.3.1 tidyr_1.0.2 tibble_3.0.0 ## [21] tidyverse_1.3.0 ropls_1.14.1 kableExtra_1.1.0.9000 dplyr_0.8.5 ## [25] usdm_1.1-18 raster_3.0-12 sp_1.4-1 gridExtra_2.3 ## [29] ggplot2_3.3.0 knitr_1.28 ## ## loaded via a namespace (and not attached): ## [1] colorspace_1.4-1 rjson_0.2.20 class_7.3-16 ellipsis_0.3.0 rprojroot_1.3-2 ## [6] fs_1.4.0 rstudioapi_0.11 farver_2.0.3 remotes_2.1.1 bit64_0.9-7 ## [11] fansi_0.4.1 lubridate_1.7.4 xml2_1.3.0 codetools_0.2-16 splines_3.5.1 ## [16] ncdf4_1.17 pkgload_1.0.2 jsonlite_1.6.1 broom_0.5.5 cluster_2.1.0 ## [21] dbplyr_1.4.2 rgeos_0.5-2 png_0.1-7 compiler_3.5.1 httr_1.4.1 ## [26] backports_1.1.5 assertthat_0.2.1 Matrix_1.2-18 cli_2.0.2 formatR_1.7 ## [31] htmltools_0.4.0 prettyunits_1.1.1 tools_3.5.1 gtable_0.3.0 glue_1.3.2 ## [36] Rcpp_1.0.4 Biobase_2.42.0 cellranger_1.1.0 vctrs_0.2.4 nlme_3.1-145 ## [41] xfun_0.13.1 ps_1.3.2 testthat_2.3.2 rvest_0.3.5 lifecycle_0.2.0 ## [46] devtools_2.2.2 MASS_7.3-51.5 scales_1.1.0 hms_0.5.3 parallel_3.5.1 ## [51] yaml_2.2.1 curl_4.3 memoise_1.1.0 RSQLite_2.2.0 stringi_1.4.6 ## [56] highr_0.8 desc_1.2.0 e1071_1.7-3 BiocGenerics_0.28.0 pkgbuild_1.0.6 ## [61] shape_1.4.4 RgoogleMaps_1.4.5.3 rlang_0.4.5 pkgconfig_2.0.3 bitops_1.0-6 ## [66] evaluate_0.14 labeling_0.3 bit_1.1-15.2 processx_3.4.2 tidyselect_1.0.0 ## [71] plyr_1.8.6 magrittr_1.5 R6_2.4.1 generics_0.0.2 DBI_1.1.0 ## [76] pillar_1.4.3 haven_2.2.0 withr_2.1.2 mgcv_1.8-31 units_0.6-6 ## [81] modelr_0.1.6 crayon_1.3.4 KernSmooth_2.23-16 utf8_1.1.4 rmarkdown_2.1 ## [86] jpeg_0.1-8.1 usethis_1.5.1 isoband_0.2.0 grid_3.5.1 readxl_1.3.1 ## [91] blob_1.2.1 callr_3.4.3 classInt_0.4-2 reprex_0.3.0 digest_0.6.25 ## [96] webshot_0.5.2 adehabitatMA_0.3.14 munsell_0.5.0 viridisLite_0.3.0 sessioninfo_1.1.1 "],
["microbiota.html", "3 Microbiota 3.1 Functions 3.2 Relative abundance 3.3 Data set description 3.4 Depth response 3.5 Shortlist", " 3 Microbiota library(vegan) library(tidyverse) library(reshape2) library(kableExtra) options(kableExtra.html.bsTable = T) # FUN SET UP: preparing meta data set meta_data_prep &lt;- function(meta_data) { meta_data &lt;- meta_data[, c(&quot;unified_ID&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;MeanBottomTemp_Cdeg&quot;, &quot;MeanBotSalinity_PSU&quot;, &quot;YEAR&quot;)] colnames(meta_data) &lt;- c(&quot;unified_ID&quot;, &quot;Depth&quot;, &quot;Latitude&quot;, &quot;Longitude&quot;, &quot;Temperature&quot;, &quot;Salinity&quot;, &quot;Year&quot;) meta_data &lt;- meta_data[!(str_sub(meta_data$unified_ID, 1, 2) == &quot;QC&quot;), ] meta_data[] &lt;- lapply(meta_data, function(x) if (is.factor(x)) factor(x) else x) # Gb12, Gb20 and Gb21 are missing temperature and salinity. Imputing data from closeby samples: meta_data$Salinity[meta_data$unified_ID == &quot;Gb12&quot;] &lt;- 34.92 meta_data$Salinity[meta_data$unified_ID == &quot;Gb20&quot;] &lt;- 34.92 meta_data$Salinity[meta_data$unified_ID == &quot;Gb21&quot;] &lt;- 34.56 meta_data$Temperature[meta_data$unified_ID == &quot;Gb12&quot;] &lt;- 3.71 meta_data$Temperature[meta_data$unified_ID == &quot;Gb20&quot;] &lt;- 3.65 meta_data$Temperature[meta_data$unified_ID == &quot;Gb21&quot;] &lt;- 2.32 meta_data[&quot;spec&quot;] &lt;- str_sub(meta_data$unified_ID, 1, 2) meta_data &lt;- meta_data[order(meta_data$unified_ID), ] return(meta_data) } # FUN SET UP: preparing OTU tables OTU_prep_sqrt &lt;- function(micro) { rownames(micro) &lt;- micro$Sample_ID micro$Sample_ID &lt;- NULL micro &lt;- sqrt(micro) micro_gb &lt;- micro[(str_sub(rownames(micro), 1, 2) == &quot;Gb&quot;), ] micro_sf &lt;- micro[(str_sub(rownames(micro), 1, 2) == &quot;Sf&quot;), ] micro_wb &lt;- micro[(str_sub(rownames(micro), 1, 2) == &quot;Wb&quot;), ] micro_gb &lt;- micro_gb[, colSums(micro_gb != 0) &gt; 0] micro_sf &lt;- micro_sf[, colSums(micro_sf != 0) &gt; 0] micro_wb &lt;- micro_wb[, colSums(micro_wb != 0) &gt; 0] micros &lt;- list(gb = micro_gb, sf = micro_sf, wb = micro_wb) return(micros) } # FUN RELATIVE ABUNDANCE: calculate relative abundance of OTU across sponge samples. For figures (OTU relative abdc # heatmaps), and inc-dec correlations. Requires OTU_prep_sqrt. rel_abdc &lt;- function(micro) { mic &lt;- micro mic &lt;- data.frame(t(mic)) mic[&quot;max&quot;] &lt;- apply(mic, 1, max) n &lt;- 0 k &lt;- dim(mic)[1] while (n &lt; k) { n &lt;- n + 1 mic[n, ] &lt;- mic[n, ]/(mic$max[n]) } mic$max &lt;- NULL return(mic) } # FUN correlation: increasing-decreasing and p-value, method default: Pearson&#39;s product-moment correlation inc_dec &lt;- function(rabdc_df, meta_data) { md &lt;- meta_data[meta_data$unified_ID %in% colnames(rabdc_df), ] inc_dec &lt;- data.frame(rownames(rabdc_df)) colnames(inc_dec) &lt;- &quot;XOTU&quot; inc_dec[&quot;inc_dec_estimate&quot;] &lt;- NA inc_dec[&quot;inc_dec_p_val&quot;] &lt;- NA n &lt;- 0 k &lt;- dim(inc_dec)[1] while (n &lt; k) { n &lt;- n + 1 inc_dec$inc_dec_estimate[n] &lt;- cor.test(as.numeric(rabdc_df[n, ]), md$Depth)$estimate inc_dec$inc_dec_p_val[n] &lt;- cor.test(as.numeric(rabdc_df[n, ]), md$Depth)$p.value } inc_dec[&quot;classification&quot;] &lt;- NA inc_dec$classification[inc_dec$inc_dec_estimate &lt; 0] &lt;- &quot;dec.trend&quot; inc_dec$classification[inc_dec$inc_dec_estimate &gt; 0] &lt;- &quot;inc.trend&quot; inc_dec$classification[inc_dec$inc_dec_estimate &lt; 0 &amp; inc_dec$inc_dec_p &lt;= 0.05] &lt;- &quot;decreasing&quot; inc_dec$classification[inc_dec$inc_dec_estimate &gt; 0 &amp; inc_dec$inc_dec_p &lt;= 0.05] &lt;- &quot;increasing&quot; return(inc_dec) } # FUN occurrence overall_rabdc &lt;- function(micros) { mic &lt;- micros n &lt;- 0 k &lt;- dim(mic)[1] mic[&quot;rowsum&quot;] &lt;- apply(mic, 1, sum) while (n &lt; k) { n &lt;- n + 1 mic[n, ] &lt;- mic[n, ]/(mic$rowsum[n]) } mic$rowsum &lt;- NULL mic &lt;- data.frame(t(mic)) mic[&quot;avg_rel_abdc&quot;] &lt;- apply(mic, 1, mean) mic[&quot;occurrence&quot;] &lt;- ifelse(mic$avg &gt; 0.0025, &quot;common&quot;, &quot;rare&quot;) return(mic) } # FUN prepared list of data sets for taxonomy aggregation aggregations &lt;- function(taxonomy, occurrence) { occurrence$gb[&quot;XOTU&quot;] &lt;- rownames(occurrence$gb) occurrence$sf[&quot;XOTU&quot;] &lt;- rownames(occurrence$sf) occurrence$wb[&quot;XOTU&quot;] &lt;- rownames(occurrence$wb) tax &lt;- taxonomy[, c(&quot;OTU_ID&quot;, &quot;Phylum&quot;, &quot;Class&quot;)] n &lt;- 0 k &lt;- dim(tax)[1] tax[&quot;XOTU&quot;] &lt;- NA while (n &lt; k) { n &lt;- n + 1 tax$XOTU[n] &lt;- paste0(&quot;X&quot;, tax$OTU_ID[n]) } tax_gb &lt;- inner_join(tax, occurrence$gb[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) tax_sf &lt;- inner_join(tax, occurrence$sf[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) tax_wb &lt;- inner_join(tax, occurrence$wb[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) taxes &lt;- list(gb = tax_gb, sf = tax_sf, wb = tax_wb) gb1 &lt;- aggregate(tax_gb$Phylum, by = list(tax_gb$Phylum), FUN = &quot;length&quot;) gb2 &lt;- aggregate(tax_gb$avg_rel_abdc, by = list(tax_gb$Phylum), FUN = &quot;sum&quot;) gb_p &lt;- full_join(gb1, gb2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(gb_p) &lt;- c(&quot;Phylum&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) gb1 &lt;- aggregate(tax_gb$Class, by = list(tax_gb$Class), FUN = &quot;length&quot;) gb2 &lt;- aggregate(tax_gb$avg_rel_abdc, by = list(tax_gb$Class), FUN = &quot;sum&quot;) gb_c &lt;- full_join(gb1, gb2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(gb_c) &lt;- c(&quot;Class&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) test1 &lt;- lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Phylum, data = x, FUN = &quot;length&quot;)) lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Phylum, data = x, FUN = &quot;sum&quot;)) return(taxes) } # FUN prepared list of data sets for adonis adonis_prep &lt;- function(taxonomy, occurrence) { occurrence$gb[&quot;XOTU&quot;] &lt;- rownames(occurrence$gb) occurrence$sf[&quot;XOTU&quot;] &lt;- rownames(occurrence$sf) occurrence$wb[&quot;XOTU&quot;] &lt;- rownames(occurrence$wb) tax &lt;- taxonomy[, c(&quot;OTU_ID&quot;, &quot;Phylum&quot;, &quot;Class&quot;)] n &lt;- 0 k &lt;- dim(tax)[1] tax[&quot;XOTU&quot;] &lt;- NA while (n &lt; k) { n &lt;- n + 1 tax$XOTU[n] &lt;- paste0(&quot;X&quot;, tax$OTU_ID[n]) } tax_gb &lt;- inner_join(tax, occurrence$gb) tax_sf &lt;- inner_join(tax, occurrence$sf) tax_wb &lt;- inner_join(tax, occurrence$wb) taxes &lt;- list(gb = tax_gb, sf = tax_sf, wb = tax_wb) return(taxes) } # FUN cleaning class and phylum namines cleaning &lt;- function(taxes) { gb &lt;- taxes$gb sf &lt;- taxes$sf wb &lt;- taxes$wb # Renaming &amp; removing whitespaces gb$Phylum &lt;- as.character(str_trim(as.character(gb$Phylum))) sf$Phylum &lt;- as.character(str_trim(as.character(sf$Phylum))) wb$Phylum &lt;- as.character(str_trim(as.character(wb$Phylum))) gb$Class &lt;- as.character(str_trim(as.character(gb$Class))) sf$Class &lt;- as.character(str_trim(as.character(sf$Class))) wb$Class &lt;- as.character(str_trim(as.character(wb$Class))) ## GB gb$Class[(gb$Phylum == &quot;PAUC34f&quot;)] &lt;- &quot;PAUC34f_unclassified&quot; gb$Class[(gb$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; gb$Phylum[(gb$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; gb$Class[(gb$Phylum == &quot;Tectomicrobia&quot;)] &lt;- &quot;Tectomicrobia_unclassified&quot; gb$Class[(gb$Phylum == &quot;SBR1093&quot;)] &lt;- &quot;SBR1093_unclassified&quot; gb$Class[(gb$Phylum == &quot;Poribacteria&quot;)] &lt;- &quot;Poribacteria_unclassified&quot; gb$Class[gb$Phylum == &quot;Chloroflexi&quot; &amp; gb$Class == &quot;&quot;] &lt;- &quot;Chloroflexi_unclassified&quot; ## SF sf$Class[(sf$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; sf$Phylum[(sf$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; sf$Class[(sf$Phylum == &quot;PAUC34f&quot;)] &lt;- &quot;PAUC34f_unclassified&quot; sf$Class[(sf$Phylum == &quot;Proteobacteria&quot; &amp; sf$Class == &quot;&quot;)] &lt;- &quot;Proteobacteria_unclassified&quot; sf$Class[(sf$Phylum == &quot;Tectomicrobia&quot;)] &lt;- &quot;Tectomicrobia_unclassified&quot; sf$Class[(sf$Phylum == &quot;SBR1093&quot;)] &lt;- &quot;SBR1093_unclassified&quot; sf$Class[(sf$Phylum == &quot;Poribacteria&quot;)] &lt;- &quot;Poribacteria_unclassified&quot; ## WB wb$Class[(wb$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; wb$Phylum[(wb$Phylum == &quot;&quot;)] &lt;- &quot;unclassified&quot; # merge back taxes &lt;- list(gb = gb, sf = sf, wb = wb) return(taxes) } # FUN multiplot # NOT MY OWN multiplot &lt;- function(..., plotlist = NULL, file, cols = 1, layout = NULL) { library(grid) # Make a list from the ... arguments and plotlist plots &lt;- c(list(...), plotlist) numPlots = length(plots) # If layout is NULL, then use &#39;cols&#39; to determine layout if (is.null(layout)) { # Make the panel ncol: Number of columns of plots nrow: Number of rows needed, calculated from # of cols layout &lt;- matrix(seq(1, cols * ceiling(numPlots/cols)), ncol = cols, nrow = ceiling(numPlots/cols)) } if (numPlots == 1) { print(plots[[1]]) } else { # Set up the page grid.newpage() pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout)))) # Make each plot, in the correct location for (i in 1:numPlots) { # Get the i,j matrix positions of the regions that contain this subplot matchidx &lt;- as.data.frame(which(layout == i, arr.ind = TRUE)) print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row, layout.pos.col = matchidx$col)) } } } 3.1 Functions # load data micro &lt;- read.csv(&quot;data/OTU_all_R.csv&quot;, header = T, sep = &quot;;&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) taxonomy &lt;- read.csv(&quot;data/microbiome_taxonomy.csv&quot;, header = T, sep = &quot;;&quot;) 3.2 Relative abundance # For figures (OTU relative abdc heatmaps), and inc-dec correlations. Requires OTU_prep_sqrt. meta_data &lt;- meta_data_prep(meta_data) micro_ds &lt;- OTU_prep_sqrt(micro) # RUN calculate relative abundance of OTU across sponge samples rabdc_gb &lt;- rel_abdc(micro_ds$gb) rabdc_sf &lt;- rel_abdc(micro_ds$sf) rabdc_wb &lt;- rel_abdc(micro_ds$wb) kable(rabdc_gb, escape = F, align = &quot;c&quot;, booktabs = T, caption = &quot;Abbreviated relative abundance table for _G. barretti_&quot;, &quot;html&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;, latex_options = &quot;striped&quot;, full_width = T)) %&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;200px&quot;) (#tab:rel_abdc)Abbreviated relative abundance table for G. barretti Gb1 Gb10 Gb11 Gb12 Gb13 Gb14 Gb2 Gb3 Gb4 Gb5 Gb6 Gb7 Gb8 Gbkable(rabdc_sf, escape = F, align = &quot;c&quot;, booktabs = T, caption = &quot;Abbreviated relative abundance table for _S. fortis_&quot;, &quot;html&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;, latex_options = &quot;striped&quot;, full_width = F)) %&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;200px&quot;) (#tab:rel_abdc)Abbreviated relative abundance table for S. fortis Sf1 Sf10 Sf11 Sf12 Sf13 Sf14 Sf15 Sf2 Sf3 Sf4 Sf5 Sf6 Sf7 Sf8 Sfkable(rabdc_wb, escape = F, align = &quot;c&quot;, booktabs = T, caption = &quot;Abbreviated relative abundance table for _W. bursa_&quot;, &quot;html&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;, latex_options = &quot;striped&quot;, full_width = F)) %&gt;% scroll_box(width = &quot;100%&quot;, height = &quot;200px&quot;) (#tab:rel_abdc)Abbreviated relative abundance table for W. bursa Wb1 Wb10 Wb11 Wb12 Wb13 Wb14 Wb15 Wb16 Wb2 Wb3 Wb4 Wb5 Wb6 Wb7 Wb8 Wb9 X1969004 0.2173078 0.4876994 0.1728598 0.3725355 0.5550635 0.6936532 0.6389926 0.6829981 0.3138855 0.3299347 0.3832095 0.7772717 0.3381204 0.5397056 1.0000000 0.7986953 X1969000 0.6557331 0.1784229 0.5999060 0.7726901 0.5989984 0.5756817 0.8094285 0.9179382 1.0000000 0.6774998 0.6479048 0.9042917 0.3397841 0.8100079 0.4807873 0.7051137 X19690015 0.3613815 0.5111777 0.5302043 0.4858141 0.5181965 0.4395599 0.5012300 0.5566929 0.7690653 1.0000000 0.4260278 0.6493650 0.3265316 0.3441592 0.0000000 0.6605632 X1969006 0.3166903 0.1637690 0.3530689 0.1253948 0.2023332 0.1002876 0.0000000 0.2175161 1.0000000 0.7087409 0.4178698 0.4257062 0.2403094 0.2009281 0.0000000 0.3949822 X19690019 0.3887468 0.7429005 0.0000000 1.0000000 0.7242671 0.0000000 0.4574604 0.8812350 0.5043524 0.4410897 0.4437558 0.6495157 0.4203074 0.6060798 0.8548567 0.7996669 X19690052 0.0000000 0.3905631 0.5203559 0.3929243 0.4639728 0.3354290 0.4141786 0.4793060 0.4548206 1.0000000 0.3825139 0.4885159 0.3107016 0.2769300 0.0000000 0.5585467 X1969009 0.9672822 0.3945207 0.5108535 0.4684299 0.4564088 0.4939659 0.0000000 0.5125688 1.0000000 0.9505011 0.5414369 0.4783187 0.3801697 0.0000000 0.0000000 0.6540149 X19690020 0.6409413 0.3617738 0.3649783 0.3378057 0.4111850 0.3171837 0.3486617 0.0000000 1.0000000 0.9875801 0.4916631 0.5701796 0.3473233 0.0000000 0.0000000 0.6180035 X19690060 0.0000000 0.6694595 0.7342242 0.6330046 0.6651208 0.4954921 0.5918771 0.7651197 0.0000000 1.0000000 0.5972335 0.6302544 0.4830659 0.5539770 0.0000000 0.7808507 X1969002 1.0000000 0.0000000 0.1455037 0.0000000 0.1348322 0.1031659 0.0000000 0.1427091 0.4491775 0.4365770 0.2718953 0.2129184 0.1311553 0.0000000 0.0000000 0.2266605 X19690029 0.3917304 0.5804796 0.0000000 0.4390614 0.4014042 0.8925666 0.4108503 1.0000000 0.0000000 0.0000000 0.0000000 0.4512699 0.0000000 0.7840726 0.6737687 0.4219823 X19690088 0.0000000 0.3887111 0.0000000 0.4881826 0.4458259 0.8253029 0.4013799 0.8086756 0.0000000 0.3868674 0.0000000 0.7521814 0.3547311 0.4778208 0.0000000 1.0000000 X1969001 0.9719800 1.0000000 0.0000000 0.0000000 0.2877810 0.3506089 0.8071101 0.0000000 0.2074259 0.6581756 0.0000000 0.0000000 0.3595329 0.0000000 0.6071278 0.7127992 X19690023 0.5936971 0.3570751 0.7044941 0.4607915 0.3806433 0.5460848 0.0000000 1.0000000 0.7709149 0.4213731 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6218705 X19690036 0.4461978 0.6625892 0.0000000 0.0000000 0.5141227 0.5477743 0.8520770 0.0000000 0.5113571 0.0000000 0.0000000 0.8274228 0.3611917 0.8443869 1.0000000 0.0000000 X19690042 0.4817217 0.4281066 0.6455422 0.4994771 0.7526955 0.6123013 0.5637109 1.0000000 0.0000000 0.5410018 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.7151911 X19690062 0.0000000 0.0000000 0.5285673 0.4645424 0.5646968 0.4551144 0.0000000 0.6728996 0.0000000 1.0000000 0.0000000 0.5954225 0.3511610 0.0000000 0.0000000 0.6954296 X19690041 0.9154445 0.0000000 0.6473170 0.7252606 0.6949189 0.9347191 0.0000000 1.0000000 0.0000000 0.7313811 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9751748 X19690083 0.0000000 0.0000000 0.0000000 0.7169055 0.5806973 0.7004982 0.0000000 1.0000000 0.0000000 0.6166300 0.0000000 0.9480703 0.4134371 0.0000000 0.0000000 0.9686961 X19690059 0.0000000 0.0000000 0.0000000 0.9868588 0.6759579 0.0000000 0.0000000 0.9504705 0.7973520 0.6883969 0.0000000 1.0000000 0.0000000 0.9338430 0.0000000 0.0000000 X19690080 0.0000000 0.0000000 0.0000000 0.6346771 0.0000000 0.6456703 0.0000000 0.9005509 0.0000000 0.6038305 0.0000000 0.7123010 0.3335567 0.0000000 0.0000000 1.0000000 X19690012 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8266974 0.6807559 0.0000000 0.7686723 0.3439269 0.0000000 0.0000000 0.5671986 X19690056 0.0000000 0.0000000 0.5925193 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9024348 0.6646252 0.0000000 0.8960344 0.4120488 0.0000000 0.0000000 1.0000000 X19690064 0.0000000 0.0000000 0.7071068 0.5993065 0.4841534 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.3074377 0.0000000 0.0000000 0.7024128 X19690010 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6114178 0.0000000 0.0000000 0.4129900 0.0000000 0.5468687 0.0000000 X19690011 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.4459209 0.0000000 0.0000000 0.2774390 0.0000000 0.3857633 0.0000000 X19690021 0.4597834 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.4367794 0.4784080 0.3355223 0.0000000 0.0000000 0.0000000 0.0000000 X19690068 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8996233 0.5785722 1.0000000 0.5166712 0.0000000 0.0000000 0.9566892 X19690082 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6996051 0.0000000 0.7394144 0.0000000 0.6031742 0.0000000 0.0000000 0.4369837 0.0000000 0.0000000 1.0000000 X19690090 0.0000000 0.0000000 0.6631253 0.6710672 0.0000000 0.7085102 0.0000000 1.0000000 0.0000000 0.6240224 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900103 0.0000000 0.0000000 0.0000000 0.7470258 0.0000000 0.7470258 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.4011856 0.0000000 0.0000000 0.9827000 X196900114 0.0000000 0.8856812 0.0000000 1.0000000 0.9742186 0.9382108 0.9695977 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X1969005 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.4781045 0.3541710 0.0000000 0.1972273 0.0000000 0.0000000 0.0000000 X19690048 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.2813693 0.0000000 0.0000000 0.0000000 0.5602979 0.3673499 0.0000000 0.0000000 X19690061 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.5030224 0.0000000 0.4041018 0.0000000 0.0000000 0.7204149 X19690066 0.0000000 0.0000000 0.8413361 0.0000000 0.6613589 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8171778 X19690097 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.4734927 0.0000000 0.0000000 0.0000000 X19690098 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8363438 0.0000000 0.7752794 0.0000000 0.0000000 0.0000000 0.6839041 0.0000000 0.0000000 0.0000000 1.0000000 X19690099 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8272830 0.0000000 0.8368719 0.0000000 0.0000000 0.0000000 0.8772135 0.0000000 0.0000000 0.0000000 1.0000000 X196900102 0.0000000 0.0000000 0.0000000 0.2199169 0.0000000 0.2800133 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1697724 0.0000000 1.0000000 0.0000000 X196900104 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.3960316 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9337520 0.0000000 0.9942295 X196900112 0.0000000 0.7341780 0.7272563 0.0000000 0.0000000 0.0000000 0.0000000 0.9210135 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 X196900113 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.6421589 0.0000000 0.1295978 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1217772 X196900131 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.8885940 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X1969007 0.5124575 0.0000000 0.8476747 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 X19690018 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.8372937 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690037 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8597270 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8846517 0.0000000 X19690054 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.1348255 0.0000000 0.0000000 1.0000000 0.0000000 0.4400479 0.0000000 0.0000000 X19690069 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.7206038 0.8377503 0.0000000 0.0000000 0.0000000 0.0000000 X19690095 0.0000000 1.0000000 0.0000000 0.0000000 0.0805002 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9852923 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900100 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6356525 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9386592 0.0000000 0.0000000 0.0000000 1.0000000 X196900117 0.0000000 0.0000000 0.6654511 1.0000000 0.0000000 0.6317461 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900118 0.0000000 0.0000000 0.7022170 0.0000000 0.0000000 0.6967437 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900124 0.0000000 0.0000000 0.0000000 0.0000000 0.9660918 0.6772493 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900132 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8315584 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X1969003 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6159955 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X1969008 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6844365 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690013 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.8919233 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690017 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690025 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9729680 0.0000000 X19690030 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9677513 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690034 0.9355556 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690046 1.0000000 0.0000000 0.9721615 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690049 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.4008306 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690050 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.4626050 X19690053 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.5913727 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690057 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.7183366 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690070 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9718800 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 X19690074 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.5784531 0.0000000 0.0000000 0.0000000 X19690081 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.9618067 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 X19690087 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690096 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.5410018 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900106 0.0000000 0.0000000 0.0000000 0.8082120 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 X196900127 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.7779866 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900129 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.6748494 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900133 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.7687616 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690014 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690016 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690022 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690024 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690026 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690027 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690028 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690031 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690032 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690033 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690035 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690038 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690039 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690040 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690043 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690044 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690045 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690047 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690051 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690055 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690058 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690063 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690065 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690067 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690071 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690072 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690073 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690075 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690076 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690077 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690078 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690079 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690084 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690085 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690086 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690089 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690091 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690092 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690093 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X19690094 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900101 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 X196900105 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 X196900107 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 X196900108 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 X196900109 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 X196900110 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 X196900111 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 X196900115 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900116 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900119 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900120 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900121 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900122 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900123 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900125 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900126 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900128 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900130 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 X196900134 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 1.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 0.0000000 OTU1969004 is the only one present in all thre sponge species. 3.3 Data set description PCA, beta diversity, Neff? # (micro_ds$gb[1:5,1:5]) (micro_ds$sf[1:5,1:5]) (micro_ds$wb[1:5,1:5]) micro_ds$gb[&quot;unified_ID&quot;] &lt;- rownames(micro_ds$gb) micro_ds$sf[&quot;unified_ID&quot;] &lt;- rownames(micro_ds$sf) micro_ds$wb[&quot;unified_ID&quot;] &lt;- rownames(micro_ds$wb) microbiota &lt;- full_join(micro_ds$gb, micro_ds$sf) microbiota &lt;- full_join(microbiota, micro_ds$wb) dim(microbiota) #ok ## [1] 45 692 rownames(microbiota) &lt;- microbiota$unified_ID microbiota$unified_ID &lt;- NULL microbiota[is.na(microbiota)] &lt;- 0 # run PCA run bray curtis based PCA pca.microbiota &lt;- prcomp(microbiota, scale = T) # PCA summary(pca.microbiota) #components ## Importance of components: ## PC1 PC2 PC3 PC4 PC5 PC6 PC7 PC8 PC9 PC10 PC11 ## Standard deviation 11.3119 8.20948 7.49084 5.57457 5.11573 5.06038 4.90804 4.84112 4.58249 4.45224 4.23375 ## Proportion of Variance 0.1852 0.09753 0.08121 0.04497 0.03787 0.03706 0.03486 0.03392 0.03039 0.02869 0.02594 ## Cumulative Proportion 0.1852 0.28271 0.36392 0.40889 0.44677 0.48382 0.51868 0.55260 0.58299 0.61168 0.63762 ## PC12 PC13 PC14 PC15 PC16 PC17 PC18 PC19 PC20 PC21 PC22 ## Standard deviation 4.04328 3.98933 3.91152 3.68163 3.64750 3.44879 3.37746 3.30565 3.2835 3.07988 3.0658 ## Proportion of Variance 0.02366 0.02303 0.02214 0.01962 0.01925 0.01721 0.01651 0.01581 0.0156 0.01373 0.0136 ## Cumulative Proportion 0.66128 0.68431 0.70645 0.72607 0.74532 0.76253 0.77904 0.79485 0.8105 0.82418 0.8378 ## PC23 PC24 PC25 PC26 PC27 PC28 PC29 PC30 PC31 PC32 PC33 ## Standard deviation 3.01157 2.8912 2.86062 2.75964 2.72634 2.67884 2.5355 2.43145 2.41647 2.41552 2.29845 ## Proportion of Variance 0.01313 0.0121 0.01184 0.01102 0.01076 0.01039 0.0093 0.00856 0.00845 0.00844 0.00765 ## Cumulative Proportion 0.85091 0.8630 0.87485 0.88587 0.89663 0.90701 0.9163 0.92487 0.93332 0.94177 0.94941 ## PC34 PC35 PC36 PC37 PC38 PC39 PC40 PC41 PC42 PC43 PC44 ## Standard deviation 2.22931 2.19660 2.16405 2.0531 2.00074 1.7837 1.56244 1.54589 1.40837 1.15988 0.95836 ## Proportion of Variance 0.00719 0.00698 0.00678 0.0061 0.00579 0.0046 0.00353 0.00346 0.00287 0.00195 0.00133 ## Cumulative Proportion 0.95660 0.96359 0.97036 0.9765 0.98226 0.9869 0.99039 0.99385 0.99672 0.99867 1.00000 ## PC45 ## Standard deviation 1.995e-14 ## Proportion of Variance 0.000e+00 ## Cumulative Proportion 1.000e+00 axes.microbiota &lt;- data.frame(predict(pca.microbiota, newdata = microbiota)) # Extracting the scores of the components p1 &lt;- ggplot(axes.microbiota, aes(x = axes.microbiota$PC1, y = axes.microbiota$PC2)) + geom_point() + ggtitle(&quot;prcomp&quot;) library(ropls) pca.microbiota2 &lt;- opls(microbiota) ## PCA ## 45 samples x 691 variables ## standard scaling of predictors ## R2X(cum) pre ort ## Total 0.519 7 0 # generating data set for the linear model lmds.micro.otu&lt;-cbind(micro_otu, axes.micro.otu, meta_data) # check rankindex() 3.4 Depth response Evaluate OTU response to depth: standardised correlating OTU relative abundance with sample depth # ====================== INC-DEC CORRELATION ================== Categorises the OTUs by their response to depth. # Requires meta_data_prep, OTU_prep_sqrt, rel_abdc. micro &lt;- read.csv(&quot;data/OTU_all_R.csv&quot;, header = T, sep = &quot;;&quot;) meta_data &lt;- read.csv(&quot;data/Steffen_et_al_metadata_PANGAEA.csv&quot;, header = T, sep = &quot;;&quot;) meta_data &lt;- meta_data_prep(meta_data) micro_ds &lt;- OTU_prep_sqrt(micro) rabdc_gb &lt;- rel_abdc(micro_ds$gb) rabdc_sf &lt;- rel_abdc(micro_ds$sf) rabdc_wb &lt;- rel_abdc(micro_ds$wb) # RUN response of OTUs to depth gb_response &lt;- inc_dec(rabdc_gb, meta_data) sf_response &lt;- inc_dec(rabdc_sf, meta_data) wb_response &lt;- inc_dec(rabdc_wb, meta_data) # For heatmaps gb rabdc_gb[&quot;XOTU&quot;] &lt;- rownames(rabdc_gb) gb_heatmap &lt;- full_join(rabdc_gb, gb_response) gb_heatmap &lt;- melt(gb_heatmap, id.vars = c(&quot;XOTU&quot;, &quot;inc_dec_estimate&quot;, &quot;inc_dec_p_val&quot;, &quot;classification&quot;)) md &lt;- meta_data[, c(&quot;unified_ID&quot;, &quot;Depth&quot;)] colnames(md) &lt;- c(&quot;variable&quot;, &quot;Depth&quot;) gb_heatmap &lt;- left_join(gb_heatmap, md) gb_heatmap[&quot;name&quot;] &lt;- str_sub(gb_heatmap$XOTU, -3) head(gb_heatmap) ## XOTU inc_dec_estimate inc_dec_p_val classification variable value Depth name ## 1 X1969004 -0.48159761 0.081216298 dec.trend Gb1 1.0000000 407 004 ## 2 X196900135 -0.08648004 0.768787815 dec.trend Gb1 0.6311977 407 135 ## 3 X196900136 -0.19338984 0.507693659 dec.trend Gb1 0.3825704 407 136 ## 4 X196900143 0.27987467 0.332486388 inc.trend Gb1 0.6454922 407 143 ## 5 X196900145 -0.13478373 0.645945762 dec.trend Gb1 1.0000000 407 145 ## 6 X196900148 0.74051197 0.002452685 increasing Gb1 0.5822352 407 148 gb_heatmap_i &lt;- gb_heatmap[gb_heatmap$classification == &quot;increasing&quot;, ] gb_heatmap_d &lt;- gb_heatmap[gb_heatmap$classification == &quot;decreasing&quot;, ] # gb_i &lt;- ggplot(gb_heatmap_i, aes(x=as.factor(gb_heatmap_i$Depth), y=gb_heatmap_i$name, # fill=gb_heatmap_i$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;GB OTUs increasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # gb_d &lt;- ggplot(gb_heatmap_d, aes(x=as.factor(gb_heatmap_d$Depth), y=gb_heatmap_d$name, # fill=gb_heatmap_d$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;GB OTUs decreasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # multiplot(gb_i, gb_d, cols=2) #gb_inc-dec_heatmap.pdf # sf rabdc_sf[&quot;XOTU&quot;] &lt;- rownames(rabdc_sf) sf_heatmap &lt;- full_join(rabdc_sf, sf_response) sf_heatmap &lt;- melt(sf_heatmap, id.vars = c(&quot;XOTU&quot;, &quot;inc_dec_estimate&quot;, &quot;inc_dec_p_val&quot;, &quot;classification&quot;)) md &lt;- meta_data[, c(&quot;unified_ID&quot;, &quot;Depth&quot;)] colnames(md) &lt;- c(&quot;variable&quot;, &quot;Depth&quot;) sf_heatmap &lt;- left_join(sf_heatmap, md) sf_heatmap[&quot;name&quot;] &lt;- str_sub(sf_heatmap$XOTU, -3) sf_heatmap_i &lt;- sf_heatmap[sf_heatmap$classification == &quot;increasing&quot;, ] sf_heatmap_d &lt;- sf_heatmap[sf_heatmap$classification == &quot;decreasing&quot;, ] # sf_i &lt;- ggplot(sf_heatmap_i, aes(x=as.factor(sf_heatmap_i$Depth), y=sf_heatmap_i$name, # fill=sf_heatmap_i$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;SF OTUs increasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # sf_d &lt;- ggplot(sf_heatmap_d, aes(x=as.factor(sf_heatmap_d$Depth), y=sf_heatmap_d$name, # fill=sf_heatmap_d$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;SF OTUs decreasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # multiplot(sf_i, sf_d, cols=2) #sf_inc-dec_heatmap.pdf # wb rabdc_wb[&quot;XOTU&quot;] &lt;- rownames(rabdc_wb) wb_heatmap &lt;- full_join(rabdc_wb, wb_response) wb_heatmap &lt;- melt(wb_heatmap, id.vars = c(&quot;XOTU&quot;, &quot;inc_dec_estimate&quot;, &quot;inc_dec_p_val&quot;, &quot;classification&quot;)) md &lt;- meta_data[, c(&quot;unified_ID&quot;, &quot;Depth&quot;)] colnames(md) &lt;- c(&quot;variable&quot;, &quot;Depth&quot;) wb_heatmap &lt;- left_join(wb_heatmap, md) wb_heatmap[&quot;name&quot;] &lt;- str_sub(wb_heatmap$XOTU, -3) wb_heatmap_i &lt;- wb_heatmap[wb_heatmap$classification == &quot;increasing&quot;, ] wb_heatmap_d &lt;- wb_heatmap[wb_heatmap$classification == &quot;decreasing&quot;, ] # wb_i &lt;- ggplot(wb_heatmap_i, aes(x=as.factor(wb_heatmap_i$Depth), y=wb_heatmap_i$name, # fill=wb_heatmap_i$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;WB OTUs increasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # wb_d &lt;- ggplot(wb_heatmap_d, aes(x=as.factor(wb_heatmap_d$Depth), y=wb_heatmap_d$name, # fill=wb_heatmap_d$value))+geom_tile()+ theme(axis.text.x = element_text(angle = 90, hjust = # 1))+xlab(&#39;Depth&#39;)+ylab(&#39;OTUs&#39;)+ggtitle(&#39;WB OTUs decreasing&#39;)+scale_fill_viridis_c(option = # &#39;plasma&#39;)+coord_equal()+theme(plot.background=element_blank(), panel.border=element_blank(), # legend.title=element_blank(),legend.position=&#39;bottom&#39;) # multiplot(wb_i, wb_d, cols=2) #wb_inc-dec_heatmap.pdf # Facetting for the figure in the publication gb_heatmap_i[&quot;spec&quot;] &lt;- c(&quot;Geodia barretti&quot;) sf_heatmap_i[&quot;spec&quot;] &lt;- c(&quot;Stryphnus fortis&quot;) wb_heatmap_i[&quot;spec&quot;] &lt;- c(&quot;Weberella bursa&quot;) increase &lt;- rbind(gb_heatmap_i, sf_heatmap_i, wb_heatmap_i) inc &lt;- ggplot(increase, aes(x = as.factor(increase$Depth), y = increase$name, fill = increase$value)) + facet_grid(. ~ increase$spec, space = &quot;free&quot;, scales = &quot;free&quot;) + geom_tile() + theme_classic() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab(&quot;Depth&quot;) + ylab(&quot;OTUs&quot;) + ggtitle(&quot;OTUs increasing&quot;) + scale_fill_viridis_c(option = &quot;plasma&quot;) + theme(plot.background = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = &quot;bottom&quot;) gb_heatmap_d[&quot;spec&quot;] &lt;- c(&quot;Geodia barretti&quot;) sf_heatmap_d[&quot;spec&quot;] &lt;- c(&quot;Stryphnus fortis&quot;) wb_heatmap_d[&quot;spec&quot;] &lt;- c(&quot;Weberella bursa&quot;) decrease &lt;- rbind(gb_heatmap_d, sf_heatmap_d, wb_heatmap_d) dec &lt;- ggplot(decrease, aes(x = as.factor(decrease$Depth), y = decrease$name, fill = decrease$value)) + facet_grid(. ~ decrease$spec, space = &quot;free&quot;, scales = &quot;free&quot;, drop = T) + geom_tile() + theme_classic() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + xlab(&quot;Depth&quot;) + ylab(&quot;OTUs&quot;) + ggtitle(&quot;OTUs decreasing&quot;) + scale_fill_viridis_c(option = &quot;plasma&quot;) + theme(plot.background = element_blank(), panel.border = element_blank(), legend.title = element_blank(), legend.position = &quot;bottom&quot;) multiplot(inc, dec, cols = 2) gb_nums &lt;- c(length(unique(gb_heatmap$name)), length(unique(gb_heatmap_i$name)), length(unique(gb_heatmap_d$name))) sf_nums &lt;- c(length(unique(sf_heatmap$name)), length(unique(sf_heatmap_i$name)), length(unique(sf_heatmap_d$name))) wb_nums &lt;- c(length(unique(wb_heatmap$name)), length(unique(wb_heatmap_i$name)), length(unique(wb_heatmap_d$name))) overview &lt;- rbind(gb_nums, sf_nums, wb_nums) colnames(overview) &lt;- c(&quot;Total&quot;, &quot;increasing&quot;, &quot;decreasing&quot;) rownames(overview) &lt;- c(&quot;G. barretti microbiota&quot;, &quot;S. fortis microbiota&quot;, &quot;W. bursa microbiota&quot;) overview &lt;- data.frame(overview) overview[&quot;unaffected&quot;] &lt;- overview$Total - (overview$increasing + overview$decreasing) kable(overview, escape = F, align = &quot;c&quot;, booktabs = T, caption = &quot;Microbiota response to depth&quot;, &quot;html&quot;) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;condensed&quot;, &quot;responsive&quot;, latex_options = &quot;striped&quot;, full_width = F)) Table 3.1: Microbiota response to depth Total increasing decreasing unaffected G. barretti microbiota 420 82 58 280 S. fortis microbiota 461 72 32 357 W. bursa microbiota 135 11 13 111 overview &lt;- overview[, c(2:4)] overview[&quot;response&quot;] &lt;- rownames(overview) plot &lt;- melt(overview) stacked &lt;- ggplot(plot, aes(x = response, y = value, fill = variable)) + geom_bar(position = &quot;stack&quot;, stat = &quot;identity&quot;) + theme_minimal() + ggtitle(&quot;Stacked counts&quot;) + xlab(&quot;Sponge species&quot;) + ylab(&quot;OTU count&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) perc &lt;- ggplot(plot, aes(x = response, y = value, fill = variable)) + geom_bar(position = &quot;fill&quot;, stat = &quot;identity&quot;) + theme_minimal() + ggtitle(&quot;Percentages&quot;) + xlab(&quot;Sponge species&quot;) + ylab(&quot;relative OTU count&quot;) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) multiplot(stacked, perc, cols = 2) # write.csv(gb_response, &#39;gb_response.csv&#39;) write.csv(sf_response, &#39;sf_response.csv&#39;) write.csv(wb_response, # &#39;wb_response.csv&#39;) 3.5 Shortlist We believe the producer of barettin (and related compounds) to have the following properties: common (average relative abundance &gt; 0.25%) specific to G. barretti positively correlated with barettin head(rabdc_gb) ## Gb1 Gb10 Gb11 Gb12 Gb13 Gb14 Gb2 Gb3 Gb4 Gb5 ## X1969004 1.0000000 0.3903206 0.6138835 0.4317032 0.3319050 0.4520601 0.6518692 0.9320986 0.5757021 0.4172269 ## X196900135 0.6311977 0.8005070 0.6070828 0.5651444 0.5782956 0.8040448 0.5310648 0.9035723 1.0000000 0.4705176 ## X196900136 0.3825704 0.3918426 0.6543369 0.1908854 0.4055418 0.4154050 0.7575152 1.0000000 0.2856270 0.1602076 ## X196900143 0.6454922 0.7092025 0.5204551 0.6760037 0.6129937 0.8115085 0.4790741 0.6304165 0.6306000 0.3492340 ## X196900145 1.0000000 0.9849502 0.4099481 0.8610974 0.3507098 0.7747906 0.4785101 0.5578963 0.5985909 0.4643499 ## X196900148 0.5822352 0.5063086 0.6802075 0.6200599 0.8177570 1.0000000 0.3787847 0.5965690 0.4903235 0.3946392 ## Gb6 Gb7 Gb8 Gb9 XOTU ## X1969004 0.3343769 0.5822124 0.9575098 0.6929447 X1969004 ## X196900135 0.5239176 0.6920649 0.6174736 0.9928735 X196900135 ## X196900136 0.3692604 0.3317765 0.7320797 0.5178798 X196900136 ## X196900143 0.4141697 0.5959349 0.7726484 1.0000000 X196900143 ## X196900145 0.7191589 0.8336226 0.7442481 0.9547506 X196900145 ## X196900148 0.3732641 0.4761371 0.5921830 0.8284317 X196900148 head(rabdc_sf) ## Sf1 Sf10 Sf11 Sf12 Sf13 Sf14 Sf15 Sf2 Sf3 Sf4 ## X1969004 0.1945896 0.2259158 0.3309891 0.2402195 0.2443452 0.1828512 0.2051067 0.4394895 0.3275761 0.2277974 ## X196900135 0.4904552 0.2738191 0.2914653 0.5448824 0.3858545 0.5649822 0.4193265 0.5821211 0.4694447 1.0000000 ## X196900136 0.9227063 0.5403248 0.5819007 0.9061961 0.9273766 1.0000000 0.8865628 0.5372018 0.7102831 0.8178322 ## X196900143 0.6157244 0.5165378 0.5113579 0.9487457 0.7232374 0.9014767 0.6777734 0.7055014 0.6245487 0.7562270 ## X196900145 0.2530272 0.1528864 0.1960491 0.2178721 0.1596795 0.2096221 0.2328819 0.4682683 0.1190768 0.2538437 ## X196900148 0.2638149 0.2631730 0.3027359 0.3066218 0.2015794 0.2741121 0.2258178 0.2922899 0.1161395 0.3465017 ## Sf5 Sf6 Sf7 Sf8 Sf9 XOTU ## X1969004 0.5039744 0.2371408 1.0000000 0.1138275 0.4144850 X1969004 ## X196900135 0.7890926 0.4276139 0.4040844 0.2958197 0.3110027 X196900135 ## X196900136 0.7988168 0.8485603 0.9816877 0.6331742 0.8649088 X196900136 ## X196900143 1.0000000 0.6573913 0.8239297 0.5676481 0.7379479 X196900143 ## X196900145 0.2554336 0.1577521 1.0000000 0.2041866 0.2451898 X196900145 ## X196900148 0.3616967 0.2634139 1.0000000 0.3129347 0.3212686 X196900148 setdiff(rownames(rabdc_gb), rownames(rabdc_sf)) #Setdiff finds rows that appear in first table but not in second ## [1] &quot;X196900605&quot; &quot;X196900606&quot; &quot;X196900591&quot; &quot;X196900596&quot; &quot;X196900597&quot; &quot;X196900589&quot; &quot;X196900618&quot; &quot;X196900588&quot; ## [9] &quot;X196900619&quot; &quot;X196900592&quot; &quot;X196900614&quot; &quot;X196900590&quot; &quot;X196900594&quot; &quot;X196900598&quot; &quot;X196900603&quot; &quot;X196900608&quot; ## [17] &quot;X196900620&quot; &quot;X196900631&quot; &quot;X196900600&quot; &quot;X196900604&quot; &quot;X196900611&quot; &quot;X196900612&quot; &quot;X19690097&quot; &quot;X196900613&quot; ## [25] &quot;X196900616&quot; &quot;X196900624&quot; &quot;X196900630&quot; &quot;X196900661&quot; &quot;X196900599&quot; &quot;X196900601&quot; &quot;X196900623&quot; &quot;X196900628&quot; ## [33] &quot;X196900635&quot; &quot;X196900648&quot; &quot;X196900655&quot; &quot;X196900656&quot; &quot;X196900658&quot; &quot;X196900662&quot; &quot;X196900663&quot; &quot;X196900667&quot; ## [41] &quot;X196900672&quot; &quot;X196900593&quot; &quot;X196900595&quot; &quot;X196900609&quot; &quot;X196900610&quot; &quot;X196900617&quot; &quot;X196900634&quot; &quot;X196900636&quot; ## [49] &quot;X196900639&quot; &quot;X196900642&quot; &quot;X196900644&quot; &quot;X196900657&quot; &quot;X196900664&quot; &quot;X196900668&quot; &quot;X196900671&quot; &quot;X196900674&quot; ## [57] &quot;X196900677&quot; &quot;X196900602&quot; &quot;X196900607&quot; &quot;X196900615&quot; &quot;X196900621&quot; &quot;X196900622&quot; &quot;X196900625&quot; &quot;X196900626&quot; ## [65] &quot;X196900627&quot; &quot;X196900629&quot; &quot;X196900632&quot; &quot;X196900633&quot; &quot;X196900637&quot; &quot;X196900638&quot; &quot;X196900640&quot; &quot;X196900641&quot; ## [73] &quot;X196900643&quot; &quot;X196900645&quot; &quot;X196900646&quot; &quot;X196900647&quot; &quot;X196900649&quot; &quot;X196900652&quot; &quot;X196900653&quot; &quot;X196900654&quot; ## [81] &quot;X196900659&quot; &quot;X196900660&quot; &quot;X196900665&quot; &quot;X196900666&quot; &quot;X196900669&quot; &quot;X196900670&quot; &quot;X196900673&quot; &quot;X196900675&quot; ## [89] &quot;X196900676&quot; &quot;X196900678&quot; &quot;X196900679&quot; &quot;X196900680&quot; &quot;X196900681&quot; &quot;X196900682&quot; &quot;X196900683&quot; &quot;X196900684&quot; ## [97] &quot;X196900685&quot; &quot;X196900686&quot; &quot;X196900687&quot; &quot;X196900688&quot; &quot;X196900689&quot; &quot;X196900690&quot; &quot;X196900691&quot; &quot;X196900692&quot; gb_unique &lt;- data.frame(setdiff(rownames(rabdc_gb), rownames(rabdc_sf))) colnames(gb_unique) &lt;- c(&quot;XOTU&quot;) # ====================== OCCURRENCE ============== REL ABDC On original data sets, NOT SQRT transformed (Y tho?) # micros is sqrt transformed micro_ds &lt;- OTU_prep_sqrt(micro) # RUN occurrence gb_occurrence &lt;- overall_rabdc((micro_ds$gb**2)) #INDRA&#39;s way exponentiate (**2) to reverse sqrt # sf_occurrence &lt;- overall_rabdc((micro_ds$sf**2)) wb_occurrence &lt;- overall_rabdc((micro_ds$wb**2)) gb_occurrence &lt;- overall_rabdc(micro_ds$gb) sf_occurrence &lt;- overall_rabdc(micro_ds$sf) wb_occurrence &lt;- overall_rabdc(micro_ds$wb) # only file dump write.csv(gb_occurrence, &#39;gb_occurrence_avg_rel_abdc_OTU.csv&#39;) write.csv(sf_occurrence, # &#39;sf_occurrence_avg_rel_abdc_OTU.csv&#39;) write.csv(wb_occurrence, &#39;wb_occurrence_avg_rel_abdc_OTU.csv&#39;) aggregate(gb_occurrence, by = list(gb_occurrence$occurrence), FUN = &quot;length&quot;) aggregate(sf_occurrence, by = list(sf_occurrence$occurrence), FUN = &quot;length&quot;) aggregate(wb_occurrence, by = list(wb_occurrence$occurrence), FUN = &quot;length&quot;) # combined file dump gb_occurrence[&#39;XOTU&#39;] &lt;- rownames(gb_occurrence) sf_occurrence[&#39;XOTU&#39;] &lt;- # rownames(sf_occurrence) wb_occurrence[&#39;XOTU&#39;] &lt;- rownames(wb_occurrence) gb_data &lt;- full_join(gb_response, # gb_occurrence[,c(&#39;XOTU&#39;, &#39;avg_rel_abdc&#39;, &#39;occurrence&#39;)]) sf_data &lt;- full_join(sf_response, # sf_occurrence[,c(&#39;XOTU&#39;, &#39;avg_rel_abdc&#39;, &#39;occurrence&#39;)]) wb_data &lt;- full_join(wb_response, # wb_occurrence[,c(&#39;XOTU&#39;, &#39;avg_rel_abdc&#39;, &#39;occurrence&#39;)]) taxonomy[&#39;dummy&#39;] &lt;- c(&#39;X&#39;) taxonomy[&#39;XOTU&#39;] &lt;- # str_c(taxonomy$dummy, taxonomy$OTU_ID) taxonomy$dummy &lt;- NULL gb_data &lt;- left_join(gb_data, taxonomy) sf_data &lt;- # left_join(sf_data, taxonomy) wb_data &lt;- left_join(wb_data, taxonomy) write.csv(gb_data, &#39;gb_data.csv&#39;) # write.csv(sf_data, &#39;sf_data.csv&#39;) write.csv(wb_data, &#39;wb_data.csv&#39;) # quick_comparison gb_occurrence &lt;- gb_occurrence[, c(&quot;avg_rel_abdc&quot;, &quot;occurrence&quot;)] sf_occurrence &lt;- sf_occurrence[, c(&quot;avg_rel_abdc&quot;, &quot;occurrence&quot;)] wb_occurrence &lt;- wb_occurrence[, c(&quot;avg_rel_abdc&quot;, &quot;occurrence&quot;)] colnames(gb_occurrence) &lt;- c(&quot;gb.avg_rabdc&quot;, &quot;gb.occurr&quot;) colnames(sf_occurrence) &lt;- c(&quot;sf.avg_rabdc&quot;, &quot;sf.occurr&quot;) colnames(wb_occurrence) &lt;- c(&quot;wb.avg_rabdc&quot;, &quot;wb.occurr&quot;) gb_occurrence[&quot;XOTU&quot;] &lt;- rownames(gb_occurrence) sf_occurrence[&quot;XOTU&quot;] &lt;- rownames(sf_occurrence) wb_occurrence[&quot;XOTU&quot;] &lt;- rownames(wb_occurrence) aggregate(gb_occurrence, by = list(gb_occurrence$gb.occurr), FUN = &quot;length&quot;) aggregate(sf_occurrence, by = list(sf_occurrence$sf.occurr), FUN = &quot;length&quot;) aggregate(wb_occurrence, by = list(wb_occurrence$wb.occurr), FUN = &quot;length&quot;) occurrence_sqrt &lt;- full_join(gb_occurrence, sf_occurrence) occurrence_sqrt &lt;- full_join(occurrence_sqrt, wb_occurrence) head(occurrence_sqrt) occurrence_exp.raw &lt;- full_join(gb_occurrence, sf_occurrence) occurrence_exp.raw &lt;- full_join(occurrence_exp.raw, wb_occurrence) head(occurrence_exp.raw) # ====================== overview phylum class ========== For figures (OTU relative abdc heatmaps), and inc-dec # correlations. Requires OTU_prep_sqrt. micro_ds &lt;- OTU_prep_sqrt(micro) # RUN calculate relative abundance of OTU across sponge samples gb_occurrence &lt;- overall_rabdc(micro_ds$gb) sf_occurrence &lt;- overall_rabdc(micro_ds$sf) wb_occurrence &lt;- overall_rabdc(micro_ds$wb) occurrence &lt;- list(gb = gb_occurrence, sf = sf_occurrence, wb = wb_occurrence) taxes &lt;- aggregations(taxonomy, occurrence) taxes &lt;- cleaning(taxes) phy_OTU &lt;- lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Phylum, data = x, FUN = &quot;length&quot;)) #OTU count phy_rabdc &lt;- lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Phylum, data = x, FUN = &quot;sum&quot;)) #sums relative abundance class_OTU &lt;- lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Class, data = x, FUN = &quot;length&quot;)) class_rabdc &lt;- lapply(taxes, function(x) aggregate(avg_rel_abdc ~ Class, data = x, FUN = &quot;sum&quot;)) # all collected in Excel file. Done. Microbiome_aggregation_phylum_class.xlsx , in &#39;/writing/&#39;. # Statistic comparison based on averages of relative abundance of phyla and classes CLASS class &lt;- full_join(class_rabdc$gb, class_rabdc$sf, by = c(&quot;Class&quot;)) class &lt;- full_join(class, class_rabdc$wb, by = c(&quot;Class&quot;)) colnames(class) &lt;- c(&quot;Class&quot;, &quot;gb_avg&quot;, &quot;sf_avg&quot;, &quot;wb_avg&quot;) class$gb_avg[is.na(class$gb_avg)] &lt;- 0 class$sf_avg[is.na(class$sf_avg)] &lt;- 0 class$wb_avg[is.na(class$wb_avg)] &lt;- 0 head(class) kruskal.test(class[, c(2:4)]) #p-value = 3.364e-05 # all three kruskal.test(class[, c(2:3)]) #p-value = 0.6594 # gb &amp; sf # PHYLUM phylum &lt;- full_join(phy_rabdc$gb, phy_rabdc$sf, by = c(&quot;Phylum&quot;)) phylum &lt;- full_join(phylum, phy_rabdc$wb, by = c(&quot;Phylum&quot;)) colnames(phylum) &lt;- c(&quot;Phylum&quot;, &quot;gb_avg&quot;, &quot;sf_avg&quot;, &quot;wb_avg&quot;) phylum$gb_avg[is.na(phylum$gb_avg)] &lt;- 0 phylum$sf_avg[is.na(phylum$sf_avg)] &lt;- 0 phylum$wb_avg[is.na(phylum$wb_avg)] &lt;- 0 head(phylum) kruskal.test(phylum[, c(2:4)]) #p-value = 0.2915 # all three kruskal.test(phylum[, c(2:3)]) #p-value = 0.5102 # gb &amp; sf # ======================= Testing differences at phylum and class level =========== micro_ds &lt;- OTU_prep_sqrt(micro) occurrence &lt;- lapply(micro_ds, overall_rabdc) # PHYLUM taxes &lt;- adonis_prep(taxonomy, occurrence) taxes &lt;- cleaning(taxes) taxes &lt;- lapply(taxes, function(x) { rownames(x) &lt;- x$XOTU x }) taxes &lt;- lapply(taxes, function(x) { x[c(&quot;avg_rel_abdc&quot;, &quot;occurrence&quot;, &quot;OTU_ID&quot;, &quot;XOTU&quot;)] &lt;- NULL x }) taxes &lt;- lapply(taxes, function(x) { x[&quot;Class&quot;] &lt;- NULL x }) head(taxes) gb &lt;- aggregate(taxes$gb[, 2:dim(taxes$gb)[2]], list(taxes$gb[, &quot;Phylum&quot;]), sum) #works sf &lt;- aggregate(taxes$sf[, 2:dim(taxes$sf)[2]], list(taxes$sf[, &quot;Phylum&quot;]), sum) #works wb &lt;- aggregate(taxes$wb[, 2:dim(taxes$wb)[2]], list(taxes$wb[, &quot;Phylum&quot;]), sum) #works # for this to work, dono&#39;t run: taxes &lt;- lapply(taxes, function(x) {x[&#39;Class&#39;] &lt;- NULL; x}) gb &lt;- # aggregate(taxes$gb[,3:dim(taxes$gb)[2]], list(taxes$gb[,&#39;Phylum&#39;], taxes$gb[,&#39;Class&#39;]), sum) #works sf &lt;- # aggregate(taxes$sf[,3:dim(taxes$sf)[2]], list(taxes$sf[,&#39;Phylum&#39;], taxes$sf[,&#39;Class&#39;]), sum) #works wb &lt;- # aggregate(taxes$wb[,3:dim(taxes$wb)[2]], list(taxes$wb[,&#39;Phylum&#39;], taxes$wb[,&#39;Class&#39;]), sum) #works taxes_phy &lt;- full_join(gb, sf) taxes_phy &lt;- full_join(taxes_phy, wb) taxes_phy[is.na(taxes_phy)] &lt;- 0 head(taxes_phy) # check there are no weird names aggregate(.~ Group.1, data=taxes_phy, sum) rownames(taxes_phy) &lt;- taxes_phy$Group.1 taxes_phy$Group.1 &lt;- NULL taxes_phy_t &lt;- data.frame(t(taxes_phy)) specs &lt;- data.frame(rownames(taxes_phy_t)) colnames(specs) &lt;- c(&quot;Sample_ID&quot;) specs[&quot;species&quot;] &lt;- str_sub(specs$Sample_ID, 1, 2) # Permutational anova adonis(taxes_phy_t ~ specs$species) #all three species //significant adonis(taxes_phy_t[c(1:29), ] ~ specs[c(1:29), 2]) #only Gb and Sf //significant # Compare variation of relative abundance of each phylum/class among/within the two/three groups ANOVA (three # groups) apply(taxes_phy_t, 2, function(x) { summary(aov(x ~ specs$species)) }) # of course they&#39;re all different, this includes Weberella. # Mann-Whittney U aka Wilcoxon rank sum test(two groups, gb vs sf) gbsf_phy &lt;- taxes_phy_t[c(1:29), ] gbsf_spec &lt;- specs[c(1:29), ] apply(gbsf_phy, 2, function(x) { wilcox.test(x ~ gbsf_spec$species) }) apply(gbsf_phy, 2, function(x) { (wilcox.test(x ~ gbsf_spec$species))[&quot;p.value&quot;] }) #This is really the result we want # CLASS micro_ds &lt;- OTU_prep_sqrt(micro) occurrence &lt;- lapply(micro_ds, overall_rabdc) taxes &lt;- adonis_prep(taxonomy, occurrence) taxes &lt;- cleaning(taxes) taxes &lt;- lapply(taxes, function(x) { rownames(x) &lt;- x$XOTU x }) taxes &lt;- lapply(taxes, function(x) { x[c(&quot;avg_rel_abdc&quot;, &quot;occurrence&quot;, &quot;OTU_ID&quot;, &quot;XOTU&quot;)] &lt;- NULL x }) # ================out=================== gb &lt;- taxes$gb sf &lt;- taxes$sf wb &lt;- taxes$wb Renaming &amp; removing # whitespaces gb$Phylum &lt;- as.character(str_trim(as.character(gb$Phylum))) sf$Phylum &lt;- # as.character(str_trim(as.character(sf$Phylum))) wb$Phylum &lt;- as.character(str_trim(as.character(wb$Phylum))) # gb$Class &lt;- as.character(str_trim(as.character(gb$Class))) sf$Class &lt;- # as.character(str_trim(as.character(sf$Class))) wb$Class &lt;- as.character(str_trim(as.character(wb$Class))) GB # gb$Class[(gb$Phylum==&#39;PAUC34f&#39;)] &lt;- &#39;PAUC34f_unclassified&#39; gb$Class[(gb$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; # gb$Phylum[(gb$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; gb$Class[(gb$Phylum==&#39;Tectomicrobia&#39;)] &lt;- # &#39;Tectomicrobia_unclassified&#39; gb$Class[(gb$Phylum==&#39;SBR1093&#39;)] &lt;- &#39;SBR1093_unclassified&#39; # gb$Class[(gb$Phylum==&#39;Poribacteria&#39;)] &lt;- &#39;Poribacteria_unclassified&#39; gb$Class[gb$Phylum==&#39;Chloroflexi&#39; &amp; # gb$Class==&#39;&#39;] &lt;- &#39;Chloroflexi_unclassified&#39; SF sf$Class[(sf$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; # sf$Phylum[(sf$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; sf$Class[(sf$Phylum==&#39;PAUC34f&#39;)] &lt;- &#39;PAUC34f_unclassified&#39; # sf$Class[(sf$Phylum==&#39;Proteobacteria&#39; &amp; sf$Class==&#39;&#39;)] &lt;- &#39;Proteobacteria_unclassified&#39; # sf$Class[(sf$Phylum==&#39;Tectomicrobia&#39;)] &lt;- &#39;Tectomicrobia_unclassified&#39; sf$Class[(sf$Phylum==&#39;SBR1093&#39;)] &lt;- # &#39;SBR1093_unclassified&#39; sf$Class[(sf$Phylum==&#39;Poribacteria&#39;)] &lt;- &#39;Poribacteria_unclassified&#39; WB # wb$Class[(wb$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; wb$Phylum[(wb$Phylum==&#39;&#39;)] &lt;- &#39;unclassified&#39; merge back taxes &lt;- # list(gb=gb, sf=sf, wb=wb) ========================================= taxes &lt;- lapply(taxes, function(x) { x[&quot;Phylum&quot;] &lt;- NULL x }) head(taxes) gb &lt;- aggregate(taxes$gb[, 2:dim(taxes$gb)[2]], list(taxes$gb[, &quot;Class&quot;]), sum) #works sf &lt;- aggregate(taxes$sf[, 2:dim(taxes$sf)[2]], list(taxes$sf[, &quot;Class&quot;]), sum) #works wb &lt;- aggregate(taxes$wb[, 2:dim(taxes$wb)[2]], list(taxes$wb[, &quot;Class&quot;]), sum) #works taxes_cla &lt;- full_join(gb, sf) taxes_cla &lt;- full_join(taxes_cla, wb) taxes_cla[is.na(taxes_cla)] &lt;- 0 head(taxes_cla) # check there are no weird names aggregate(.~ Group.1, data=taxes_cla, sum) rownames(taxes_cla) &lt;- taxes_cla$Group.1 taxes_cla$Group.1 &lt;- NULL taxes_cla_t &lt;- data.frame(t(taxes_cla)) specs &lt;- data.frame(rownames(taxes_cla_t)) colnames(specs) &lt;- c(&quot;Sample_ID&quot;) specs[&quot;species&quot;] &lt;- str_sub(specs$Sample_ID, 1, 2) # Permutational anova adonis(taxes_cla_t ~ specs$species) #all three species //significant adonis(taxes_cla_t[c(1:29), ] ~ specs[c(1:29), 2]) #only Gb and Sf //significant # Compare variation of relative abundance of each clalum/class among/within the two/three groups ANOVA (three # groups) apply(taxes_cla_t, 2, function(x) { summary(aov(x ~ specs$species)) }) # of course they&#39;re all different, this includes Weberella. # Mann-Whittney U aka Wilcoxon rank sum test(two groups, gb vs sf) gbsf_cla &lt;- taxes_cla_t[c(1:29), ] gbsf_spec &lt;- specs[c(1:29), ] apply(gbsf_cla, 2, function(x) { wilcox.test(x ~ gbsf_spec$species) }) apply(gbsf_cla, 2, function(x) { (wilcox.test(x ~ gbsf_spec$species))[&quot;p.value&quot;] }) ### =========================================== For plotting ================================ taxes_phy_m &lt;- taxes_phy_t taxes_phy_m[&quot;Sample_ID&quot;] &lt;- rownames(taxes_phy_m) taxes_phy_m &lt;- melt(taxes_phy_m, id.vars = c(&quot;Sample_ID&quot;)) taxes_phy_m[&quot;Phylum&quot;] &lt;- taxes_phy_m$variable # taxes_phy_m$Phylum[taxes_phy_m$Phylum==&#39;classified&#39;] &lt;- &#39;unclassified&#39; taxes_phy_m unique(taxes_phy_m$Phylum) library(RColorBrewer) phylum_palette &lt;- c(&quot;#b8c4f6&quot;, &quot;#ffaaaf&quot;, &quot;#3d1349&quot;, &quot;#ffffff&quot;, &quot;#01559d&quot;, &quot;#ffffff&quot;, &quot;#ffffff&quot;, &quot;#ffffff&quot;, &quot;#ffffff&quot;, &quot;#019c51&quot;, &quot;#b10060&quot;, &quot;#49ca00&quot;, &quot;#dd8e00&quot;, &quot;#f282ff&quot;, &quot;#ffffff&quot;, &quot;#ff633f&quot;, &quot;#ec0040&quot;, &quot;#010b92&quot;, &quot;#cf00aa&quot;, &quot;#aba900&quot;, &quot;#ffffff&quot;, &quot;#fce300&quot;) ggplot(taxes_phy_m, aes(x = Sample_ID, y = value, fill = Phylum)) + geom_bar(stat = &quot;identity&quot;) + theme_classic() + theme(axis.text.x = element_text(angle = 90, hjust = 1)) last_plot() + scale_x_discrete(limits = c(&quot;Gb1&quot;, &quot;Gb2&quot;, &quot;Gb3&quot;, &quot;Gb4&quot;, &quot;Gb5&quot;, &quot;Gb6&quot;, &quot;Gb7&quot;, &quot;Gb8&quot;, &quot;Gb9&quot;, &quot;Gb10&quot;, &quot;Gb11&quot;, &quot;Gb12&quot;, &quot;Gb13&quot;, &quot;Gb14&quot;, &quot;Sf1&quot;, &quot;Sf2&quot;, &quot;Sf3&quot;, &quot;Sf4&quot;, &quot;Sf5&quot;, &quot;Sf6&quot;, &quot;Sf7&quot;, &quot;Sf8&quot;, &quot;Sf9&quot;, &quot;Sf10&quot;, &quot;Sf11&quot;, &quot;Sf12&quot;, &quot;Sf13&quot;, &quot;Sf14&quot;, &quot;Sf15&quot;, &quot;Wb1&quot;, &quot;Wb2&quot;, &quot;Wb3&quot;, &quot;Wb4&quot;, &quot;Wb5&quot;, &quot;Wb6&quot;, &quot;Wb7&quot;, &quot;Wb8&quot;, &quot;Wb9&quot;, &quot;Wb10&quot;, &quot;Wb11&quot;, &quot;Wb12&quot;, &quot;Wb13&quot;, &quot;Wb14&quot;, &quot;Wb15&quot;, &quot;Wb16&quot;)) + xlab(&quot;Samples ordered by depth&quot;) + ylab(&quot;Relative abundance&quot;) + scale_fill_manual(values = phylum_palette) # ======END================================= ### ===== For Venn diagramms ============================= micro_ds &lt;- OTU_prep_sqrt(micro) gb_otus &lt;- as.data.frame(colnames(micro_ds$gb)) colnames(gb_otus) &lt;- c(&quot;XOTU&quot;) sf_otus &lt;- as.data.frame(colnames(micro_ds$sf)) colnames(sf_otus) &lt;- c(&quot;XOTU&quot;) wb_otus &lt;- as.data.frame(colnames(micro_ds$wb)) colnames(wb_otus) &lt;- c(&quot;XOTU&quot;) dim(intersect(gb_otus, sf_otus))[1] # 361 dim(intersect(gb_otus, wb_otus))[1] # 2 dim(intersect(sf_otus, wb_otus))[1] # 8 length(intersect(intersect(gb_otus, wb_otus), intersect(sf_otus, wb_otus))) # 1 # ========================================================== # levels(taxes_phy$Group.1)[1] &lt;- &#39;unclassified&#39; ### old stuff , could be deleted I belive=========== tax_gb &lt;- inner_join(tax, gb_occurrence[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) tax_sf &lt;- inner_join(tax, sf_occurrence[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) tax_wb &lt;- inner_join(tax, wb_occurrence[, c(&quot;XOTU&quot;, &quot;avg_rel_abdc&quot;)]) gb1 &lt;- aggregate(tax_gb$Phylum, by = list(tax_gb$Phylum), FUN = &quot;length&quot;) gb2 &lt;- aggregate(tax_gb$avg_rel_abdc, by = list(tax_gb$Phylum), FUN = &quot;sum&quot;) gb_p &lt;- full_join(gb1, gb2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(gb_p) &lt;- c(&quot;Phylum&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) gb1 &lt;- aggregate(tax_gb$Class, by = list(tax_gb$Class), FUN = &quot;length&quot;) gb2 &lt;- aggregate(tax_gb$avg_rel_abdc, by = list(tax_gb$Class), FUN = &quot;sum&quot;) gb_c &lt;- full_join(gb1, gb2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(gb_c) &lt;- c(&quot;Class&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) sf1 &lt;- aggregate(tax_sf$Phylum, by = list(tax_sf$Phylum), FUN = &quot;length&quot;) sf2 &lt;- aggregate(tax_sf$avg_rel_abdc, by = list(tax_sf$Phylum), FUN = &quot;sum&quot;) sf_p &lt;- full_join(sf1, sf2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(sf_p) &lt;- c(&quot;Phylum&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) sf1 &lt;- aggregate(tax_sf$Class, by = list(tax_sf$Class), FUN = &quot;length&quot;) sf2 &lt;- aggregate(tax_sf$avg_rel_abdc, by = list(tax_sf$Class), FUN = &quot;sum&quot;) sf_c &lt;- full_join(sf1, sf2, by = (&quot;Group.1&quot; = &quot;Group.1&quot;)) colnames(sf_c) &lt;- c(&quot;Class&quot;, &quot;OTU_number&quot;, &quot;avg_rel_abdc&quot;) "],
["inter-omics.html", "4 Inter-omics 4.1 Mantel test and procrustes rotations 4.2 Microbial interaction network", " 4 Inter-omics The inter-omics analyses are comprised of three parts. In the first part, we evaluate congruency of the prokaryotic and metabolomic data set as a whole using numerical methods (Mantel test) and ordination (Procrustes rotation and Protest). The second part consists of generating a microbial interaction network and annotating it with depth response of the OTUs and correlation with the barettin signal. In the third part, we rank OTUs based on properties hypothesised to be true forthe producer of barettin. 4.1 Mantel test and procrustes rotations 4.1.1 Libraries and functions library(tidyverse) library(vegan) library(kableExtra) ############# FUNCTIONS # # Prepare dataframes aka &#39;data gymnastics&#39;. The output is a list with the three data set per experiment for the # three different species gb, sf, wb gymnastics &lt;- function(df, my_colnames) { df[, c(&quot;df.1&quot;, &quot;df&quot;, &quot;mz&quot;, &quot;mzmin&quot;, &quot;mzmadf&quot;, &quot;rt&quot;, &quot;rtmin&quot;, &quot;rtmadf&quot;, &quot;npeaks&quot;, &quot;Gb&quot;, &quot;QC&quot;, &quot;Sf&quot;, &quot;Wb&quot;)] &lt;- list(NULL) df[, c(&quot;isotopes&quot;, &quot;adduct&quot;, &quot;pcgroup&quot;, &quot;SD&quot;, &quot;MEAN&quot;, &quot;CV&quot;, &quot;fss&quot;, &quot;df.M.H..&quot;, &quot;raw_peaks.pcgroup&quot;)] &lt;- list(NULL) df &lt;- data.frame(t(df)) df[&quot;ID&quot;] &lt;- rownames(df) df[&quot;unified_ID&quot;] &lt;- masslynx$unified_ID[match(df$ID, masslynx[[my_colnames]])] df &lt;- na.omit(df) df &lt;- df[order(df$unified_ID), ] rownames(df) &lt;- df$unified_ID df[&quot;spec&quot;] &lt;- str_sub(df$unified_ID, 1, 2) df &lt;- df[!df$spec == &quot;QC&quot;, ] df[, c(&quot;ID&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) df_gb &lt;- df[df$spec == &quot;Gb&quot;, ] df_sf &lt;- df[df$spec == &quot;Sf&quot;, ] df_wb &lt;- df[df$spec == &quot;Wb&quot;, ] df_gb$spec &lt;- NULL df_sf$spec &lt;- NULL df_wb$spec &lt;- NULL # ready for mantel metabolome &lt;- list(gb = df_gb, sf = df_sf, wb = df_wb) return(metabolome) } # Prepares the microbiome data sets to match the metabolomes. The output is a list with all microbiomes and # metabolomes congruency &lt;- function(metabolomes) { metabolome_gb &lt;- metabolomes$gb metabolome_sf &lt;- metabolomes$sf metabolome_wb &lt;- metabolomes$wb micro_gb &lt;- micro[micro$spec == &quot;Gb&quot;, ] micro_sf &lt;- micro[micro$spec == &quot;Sf&quot;, ] micro_wb &lt;- micro[micro$spec == &quot;Wb&quot;, ] micro_gb[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_sf[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_wb[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_gb &lt;- micro_gb[, colSums(micro_gb != 0) &gt; 0] micro_sf &lt;- micro_sf[, colSums(micro_sf != 0) &gt; 0] micro_wb &lt;- micro_wb[, colSums(micro_wb != 0) &gt; 0] micro_gb &lt;- sqrt(micro_gb) micro_sf &lt;- sqrt(micro_sf) micro_wb &lt;- sqrt(micro_wb) micro_gb &lt;- wisconsin(micro_gb) micro_sf &lt;- wisconsin(micro_sf) micro_wb &lt;- wisconsin(micro_wb) micro_gb &lt;- micro_gb[rownames(micro_gb) %in% rownames(metabolome_gb), ] metabolome_gb &lt;- metabolome_gb[rownames(metabolome_gb) %in% rownames(micro_gb), ] all(rownames(micro_gb) == rownames(metabolome_gb)) micro_sf &lt;- micro_sf[rownames(micro_sf) %in% rownames(metabolome_sf), ] metabolome_sf &lt;- metabolome_sf[rownames(metabolome_sf) %in% rownames(micro_sf), ] all(rownames(micro_sf) == rownames(metabolome_sf)) micro_wb &lt;- micro_wb[rownames(micro_wb) %in% rownames(metabolome_wb), ] metabolome_wb &lt;- metabolome_wb[rownames(metabolome_wb) %in% rownames(micro_wb), ] all(rownames(micro_wb) == rownames(metabolome_wb)) congruent_dfs &lt;- list(micro_gb = micro_gb, micro_sf = micro_sf, micro_wb = micro_wb, metabolome_gb = metabolome_gb, metabolome_sf = metabolome_sf, metabolome_wb = metabolome_wb) return(congruent_dfs) } # MANTEL TEST Generates distance matrices &#39;Bray-Curtis&#39; for microbiome, scaled &#39;euclidean&#39; for metabolomes, runs a # Mantel test with Spearman correlation, and saves the parameters to a data frame. cloak &lt;- function(congruent_dfs, experiment, filtering) { gb_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_gb), &quot;euclid&quot;) micro_gb_dist &lt;- vegdist(congruent_dfs$micro_gb, method = &quot;bray&quot;) sf_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_sf), &quot;euclid&quot;) micro_sf_dist &lt;- vegdist(congruent_dfs$micro_sf, method = &quot;bray&quot;) wb_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_wb), &quot;euclid&quot;) micro_wb_dist &lt;- vegdist(congruent_dfs$micro_wb, method = &quot;bray&quot;) m_gb &lt;- mantel(micro_gb_dist, gb_meta_dist, method = &quot;spearman&quot;) m_sf &lt;- mantel(micro_sf_dist, sf_meta_dist, method = &quot;spearman&quot;) m_wb &lt;- mantel(micro_wb_dist, wb_meta_dist, method = &quot;spearman&quot;) micro_dim &lt;- as.data.frame(t(dim(congruent_dfs$micro_gb))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_sf)))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_wb)))) colnames(micro_dim) &lt;- c(&quot;micro_samples&quot;, &quot;micro_OTUs&quot;) meta_dim &lt;- as.data.frame(t(dim(congruent_dfs$metabolome_gb))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_sf)))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_wb)))) colnames(meta_dim) &lt;- c(&quot;meta_samples&quot;, &quot;meta_features&quot;) stats &lt;- data.frame(m_gb$statistic) stats &lt;- rbind(stats, m_sf$statistic) stats &lt;- rbind(stats, m_wb$statistic) signif &lt;- data.frame(m_gb$signif) signif &lt;- rbind(signif, m_sf$signif) signif &lt;- rbind(signif, m_wb$signif) colnames(stats) &lt;- c(&quot;statistic&quot;) stats[&quot;signif&quot;] &lt;- signif stats[&quot;Sponge species&quot;] &lt;- c(&quot;Geodia barretti&quot;, &quot;Stryphnus fortis&quot;, &quot;Weberella bursa&quot;) stats &lt;- bind_cols(stats, micro_dim) stats &lt;- bind_cols(stats, meta_dim) stats[&quot;data set&quot;] &lt;- filtering stats[&quot;Experiment&quot;] &lt;- experiment return(stats) } # PROTEST NMDS ordination and protest ordination &lt;- function(congruent_dfs, experiment, filtering) { # If you do not have community data, you should probably set autotransform = FALSE. k: number of dimensions gb_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_gb, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_gb_mds &lt;- metaMDS(congruent_dfs$micro_gb, trymax = 100, distance = &quot;bray&quot;) sf_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_sf, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_sf_mds &lt;- metaMDS(congruent_dfs$micro_sf, trymax = 100, distance = &quot;bray&quot;) wb_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_wb, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_wb_mds &lt;- metaMDS(congruent_dfs$micro_wb, trymax = 100, distance = &quot;bray&quot;) gb_proc &lt;- procrustes(micro_gb_mds, gb_meta_mds, scores = &quot;sites&quot;) gb_prot &lt;- protest(micro_gb_mds, gb_meta_mds, scores = &quot;sites&quot;) sf_proc &lt;- procrustes(micro_sf_mds, sf_meta_mds, scores = &quot;sites&quot;) sf_prot &lt;- protest(micro_sf_mds, sf_meta_mds, scores = &quot;sites&quot;) wb_proc &lt;- procrustes(micro_wb_mds, wb_meta_mds, scores = &quot;sites&quot;) wb_prot &lt;- protest(micro_wb_mds, wb_meta_mds, scores = &quot;sites&quot;) micro_dim &lt;- as.data.frame(t(dim(congruent_dfs$micro_gb))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_sf)))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_wb)))) colnames(micro_dim) &lt;- c(&quot;micro_samples&quot;, &quot;micro_OTUs&quot;) meta_dim &lt;- as.data.frame(t(dim(congruent_dfs$metabolome_gb))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_sf)))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_wb)))) colnames(meta_dim) &lt;- c(&quot;meta_samples&quot;, &quot;meta_features&quot;) pss &lt;- data.frame(gb_prot$ss) pss &lt;- rbind(pss, sf_prot$ss) pss &lt;- rbind(pss, wb_prot$ss) colnames(pss) &lt;- c(&quot;Procrustes SS&quot;) cor &lt;- data.frame(gb_prot$scale) cor &lt;- rbind(cor, sf_prot$scale) cor &lt;- rbind(cor, wb_prot$scale) colnames(cor) &lt;- c(&quot;correlation in sym. rotation&quot;) signif &lt;- data.frame(gb_prot$signif) signif &lt;- rbind(signif, sf_prot$signif) signif &lt;- rbind(signif, wb_prot$signif) colnames(signif) &lt;- c(&quot;signif&quot;) stats &lt;- bind_cols(pss, cor, signif, micro_dim, meta_dim) stats[&quot;data set&quot;] &lt;- filtering stats[&quot;Experiment&quot;] &lt;- experiment stats[&quot;Sponge species&quot;] &lt;- c(&quot;Geodia barretti&quot;, &quot;Stryphnus fortis&quot;, &quot;Weberella bursa&quot;) return(stats) } 4.1.2 Data sets # LOAD DATA micro &lt;- read.csv(&quot;data/OTU_all_R.csv&quot;, header = T, sep = &quot;;&quot;) colnames(micro)[colnames(micro) == &quot;Sample_ID&quot;] &lt;- &quot;unified_ID&quot; micro &lt;- micro[order(micro$unified_ID), ] rownames(micro) &lt;- micro$unified_ID micro[&quot;spec&quot;] &lt;- str_sub(micro$unified_ID, 1, 2) meta_data &lt;- read.csv(&quot;data/PANGAEA_Final.csv&quot;, header = T, sep = &quot;;&quot;) masslynx &lt;- meta_data masslynx &lt;- masslynx[c(&quot;unified_ID&quot;, &quot;LC.MS.HILIC.positive&quot;, &quot;LC.MS.HILIC.negative&quot;, &quot;LC.MS.RP.positive&quot;, &quot;LC.MS.RP.negative&quot;)] colnames(masslynx) &lt;- c(&quot;unified_ID&quot;, &quot;H_p&quot;, &quot;H_n&quot;, &quot;R_p&quot;, &quot;R_n&quot;) masslynx &lt;- na.omit(masslynx) masslynx[&quot;HILIC_pos&quot;] &lt;- str_sub(masslynx$H_p, 1, -3) masslynx[&quot;HILIC_neg&quot;] &lt;- str_sub(masslynx$H_n, 1, -3) masslynx[&quot;RP_pos&quot;] &lt;- str_sub(masslynx$R_p, 1, -3) masslynx[&quot;RP_neg&quot;] &lt;- str_sub(masslynx$R_n, 1, -3) # load one set of experiments at a time, i.e. CLEANED, ION or PC_GROUPS ### CLEANED hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) ### ION hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) ### PC_GROUPS hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) 4.1.3 Mantel test code and tabular output ### =============================== MANTEL TEST================================= # run one of this at a time metabolomes &lt;- gymnastics(hilic_pos, &quot;H_p&quot;) metabolomes &lt;- gymnastics(hilic_neg, &quot;H_n&quot;) metabolomes &lt;- gymnastics(rp_pos, &quot;R_p&quot;) metabolomes &lt;- gymnastics(rp_neg, &quot;R_n&quot;) # run this congruent_dfs &lt;- congruency(metabolomes) # run one of these: MANTEL TEST diagnostics_hp_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_hn_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_rp_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_rn_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_hp_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;ion&quot;) diagnostics_hn_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;ion&quot;) diagnostics_rp_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;ion&quot;) diagnostics_rn_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;ion&quot;) diagnostics_hp_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_hn_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;pc_group&quot;) diagnostics_rp_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_rn_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;pc_group&quot;) ### Combine all test results into one file diagnostics &lt;- diagnostics_hp_cleaned diagnostics &lt;- rbind(diagnostics, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion) diagnostics write.csv(diagnostics, &quot;mantel_stats_FUN.csv&quot;) diagnostics &lt;- read.csv(&quot;data/mantel_stats_FUN.csv&quot;) diagnostics$X &lt;- NULL diagnostics &lt;- diagnostics[, c(&quot;statistic&quot;, &quot;signif&quot;, &quot;micro_samples&quot;, &quot;micro_OTUs&quot;, &quot;meta_samples&quot;, &quot;meta_features&quot;, &quot;Sponge.species&quot;, &quot;Experiment&quot;, &quot;data.set&quot;)] options(kableExtra.html.bsTable = T) kable(diagnostics, col.names = c(&quot;Mantel statistic r&quot;, &quot;significance&quot;, &quot;N microbiome samples&quot;, &quot;N OTUs&quot;, &quot;N metabolome samples&quot;, &quot;N features&quot;, &quot;Sponge species&quot;, &quot;Experiment&quot;, &quot;data set&quot;), longtable = T, booktabs = T, caption = &quot;Mantel test diagnostics diagnositcs comparing the microbiome and metabolome of the same sponge specimens&quot;, row.names = FALSE) %&gt;% add_header_above(c(Diagnostics = 6, `Data set attribution` = 3)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), font_size = 12, full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) (#tab:io4_mantel_results)Mantel test diagnostics diagnositcs comparing the microbiome and metabolome of the same sponge specimens Diagnostics Data set attribution Mantel statistic r significance N microbiome samples N OTUs N metabolome samples N features Sponge species Experiment data set 0.6076416 0.004 10 420 10 3507 Geodia barretti HILIC pos cleaned 0.3857788 0.011 13 461 13 3507 Stryphnus fortis HILIC pos cleaned 0.4576405 0.008 15 135 15 3507 Weberella bursa HILIC pos cleaned 0.4516469 0.006 10 420 10 2808 Geodia barretti HILIC neg cleaned 0.1513297 0.186 13 461 13 2808 Stryphnus fortis HILIC neg cleaned 0.1854966 0.168 15 135 15 2808 Weberella bursa HILIC neg cleaned -0.2014493 0.833 10 420 10 4673 Geodia barretti RP pos cleaned 0.3127632 0.064 13 461 13 4673 Stryphnus fortis RP pos cleaned 0.3323657 0.035 15 135 15 4673 Weberella bursa RP pos cleaned -0.2465894 0.845 9 420 9 3166 Geodia barretti RP neg cleaned 0.1960950 0.173 13 461 13 3166 Stryphnus fortis RP neg cleaned 0.1721750 0.174 15 135 15 3166 Weberella bursa RP neg cleaned 0.5836627 0.009 10 420 10 2212 Geodia barretti HILIC pos pc_group 0.4082626 0.016 13 461 13 2212 Stryphnus fortis HILIC pos pc_group 0.4483931 0.012 15 135 15 2212 Weberella bursa HILIC pos pc_group 0.3951252 0.018 10 420 10 1351 Geodia barretti HILIC neg pc_group 0.3211093 0.040 13 461 13 1351 Stryphnus fortis HILIC neg pc_group 0.0315675 0.414 15 135 15 1351 Weberella bursa HILIC neg pc_group -0.1600791 0.774 10 420 10 2736 Geodia barretti RP pos pc_group 0.3181249 0.064 13 461 13 2736 Stryphnus fortis RP pos pc_group 0.3008501 0.067 15 135 15 2736 Weberella bursa RP pos pc_group -0.1879022 0.790 9 420 9 1678 Geodia barretti RP neg pc_group 0.2034548 0.156 13 461 13 1678 Stryphnus fortis RP neg pc_group 0.1507257 0.198 15 135 15 1678 Weberella bursa RP neg pc_group 0.3351779 0.050 10 420 10 105 Geodia barretti HILIC pos ion 0.2908357 0.086 13 461 13 105 Stryphnus fortis HILIC pos ion 0.4683599 0.010 15 135 15 105 Weberella bursa HILIC pos ion 0.4429513 0.005 10 420 10 123 Geodia barretti HILIC neg ion 0.0727247 0.320 13 461 13 123 Stryphnus fortis HILIC neg ion 0.2320236 0.115 15 135 15 123 Weberella bursa HILIC neg ion -0.2569170 0.908 10 420 10 171 Geodia barretti RP pos ion 0.3070980 0.083 13 461 13 171 Stryphnus fortis RP pos ion 0.2656853 0.072 15 135 15 171 Weberella bursa RP pos ion -0.1220077 0.703 9 420 9 105 Geodia barretti RP neg ion -0.0505950 0.597 13 461 13 105 Stryphnus fortis RP neg ion 0.1218225 0.217 15 135 15 105 Weberella bursa RP neg ion dig &lt;- diagnostics[diagnostics$signif &lt;= 0.05, ] a &lt;- aggregate(dig, by = list(dig$Sponge.species, dig$Experiment, dig$data.set), FUN = &quot;length&quot;) summary(a$Group.1) ## Geodia barretti Stryphnus fortis Weberella bursa ## 6 3 4 summary(a$Group.2) ## HILIC neg HILIC pos RP neg RP pos ## 4 8 0 1 summary(a$Group.3) ## cleaned ion pc_group ## 5 3 5 rm(diagnostics_hp_cleaned, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group) rm(hilic_pos, hilic_neg, rp_pos, rp_neg) As we can see from the table, in 13 cases, the Mantel test returns a significant correlation between the two matrices. Above you can see the the significant tests broken down by sponge species, HPCL-experiment and filtering approach. 4.1.4 Procrustes rotation and protest code and tabular output ### =============================== PROTEST ==================================== # run one of this at a time metabolomes &lt;- gymnastics(hilic_pos, &quot;H_p&quot;) metabolomes &lt;- gymnastics(hilic_neg, &quot;H_n&quot;) metabolomes &lt;- gymnastics(rp_pos, &quot;R_p&quot;) metabolomes &lt;- gymnastics(rp_neg, &quot;R_n&quot;) # run this congruent_dfs &lt;- congruency(metabolomes) # run one of these: PROTEST TEST diagnostics_hp_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_hn_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_rp_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_rn_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_hp_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;ion&quot;) diagnostics_hn_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;ion&quot;) diagnostics_rp_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;ion&quot;) diagnostics_rn_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;ion&quot;) diagnostics_hp_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_hn_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;pc_group&quot;) diagnostics_rp_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_rn_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;pc_group&quot;) ### Combine all test results into one file diagnostics &lt;- diagnostics_hp_cleaned diagnostics &lt;- rbind(diagnostics, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion) diagnostics write.csv(diagnostics, &quot;protest_stats_FUN.csv&quot;) rm(diagnostics_hp_cleaned, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group, diagnostics) rm(hilic_pos, hilic_neg, rp_pos, rp_neg) diagnostics &lt;- read.csv(&quot;data/protest_stats_FUN.csv&quot;) diagnostics$X &lt;- NULL diagnostics &lt;- diagnostics[, c(&quot;Procrustes.SS&quot;, &quot;correlation.in.sym..rotation&quot;, &quot;signif&quot;, &quot;micro_samples&quot;, &quot;micro_OTUs&quot;, &quot;meta_samples&quot;, &quot;meta_features&quot;, &quot;Sponge.species&quot;, &quot;Experiment&quot;, &quot;data.set&quot;)] options(kableExtra.html.bsTable = T) kable(diagnostics, col.names = c(&quot;Procrustes sum of squares&quot;, &quot;correlation in symmetric rotation&quot;, &quot;significance&quot;, &quot;N microbiome samples&quot;, &quot;N OTUs&quot;, &quot;N metabolome samples&quot;, &quot;N features&quot;, &quot;Sponge species&quot;, &quot;Experiment&quot;, &quot;data set&quot;), longtable = T, booktabs = T, caption = &quot;Protest diagnostics comparing the microbiome and metabolome of the same sponge specimens&quot;, row.names = FALSE) %&gt;% add_header_above(c(Diagnostics = 7, `Data set attribution` = 3)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), font_size = 12, full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) (#tab:io6_prt)Protest diagnostics comparing the microbiome and metabolome of the same sponge specimens Diagnostics Data set attribution Procrustes sum of squares correlation in symmetric rotation significance N microbiome samples N OTUs N metabolome samples N features Sponge species Experiment data set 0.4901473 0.7140397 0.009 10 420 10 3507 Geodia barretti HILIC pos cleaned 0.3360196 0.8148499 0.001 13 461 13 3507 Stryphnus fortis HILIC pos cleaned 0.6451196 0.5957184 0.009 15 135 15 3507 Weberella bursa HILIC pos cleaned 0.5056719 0.7030847 0.015 10 420 10 2808 Geodia barretti HILIC neg cleaned 0.7144829 0.5343380 0.043 13 461 13 2808 Stryphnus fortis HILIC neg cleaned 0.6454847 0.5954119 0.003 15 135 15 2808 Weberella bursa HILIC neg cleaned 0.7241690 0.5251961 0.124 10 420 10 4673 Geodia barretti RP pos cleaned 0.5535784 0.6681479 0.005 13 461 13 4673 Stryphnus fortis RP pos cleaned 0.9089831 0.3016901 0.513 15 135 15 4673 Weberella bursa RP pos cleaned 0.7744081 0.4749652 0.229 9 420 9 3166 Geodia barretti RP neg cleaned 0.7769037 0.4723307 0.107 13 461 13 3166 Stryphnus fortis RP neg cleaned 0.9426954 0.2393838 0.656 15 135 15 3166 Weberella bursa RP neg cleaned 0.4903060 0.7139285 0.008 10 420 10 2212 Geodia barretti HILIC pos pc_group 0.6122646 0.6226840 0.009 13 461 13 2212 Stryphnus fortis HILIC pos pc_group 0.5611609 0.6624494 0.002 15 135 15 2212 Weberella bursa HILIC pos pc_group 0.4442919 0.7454583 0.007 10 420 10 1351 Geodia barretti HILIC neg pc_group 0.6072203 0.6267214 0.013 13 461 13 1351 Stryphnus fortis HILIC neg pc_group 0.7647882 0.4849864 0.062 15 135 15 1351 Weberella bursa HILIC neg pc_group 0.7332277 0.5165001 0.146 10 420 10 2736 Geodia barretti RP pos pc_group 0.5557670 0.6665081 0.002 13 461 13 2736 Stryphnus fortis RP pos pc_group 0.9184545 0.2855616 0.579 15 135 15 2736 Weberella bursa RP pos pc_group 0.7952845 0.4524550 0.314 9 420 9 1678 Geodia barretti RP neg pc_group 0.7513407 0.4986575 0.089 13 461 13 1678 Stryphnus fortis RP neg pc_group 0.9669093 0.1819085 0.851 15 135 15 1678 Weberella bursa RP neg pc_group 0.7744285 0.4749437 0.254 9 420 9 3166 Geodia barretti HILIC pos ion 0.7768298 0.4724090 0.119 13 461 13 3166 Stryphnus fortis HILIC pos ion 0.9427350 0.2393010 0.671 15 135 15 3166 Weberella bursa HILIC pos ion 0.3977778 0.7760297 0.005 10 420 10 123 Geodia barretti HILIC neg ion 0.7620196 0.4878323 0.101 13 461 13 123 Stryphnus fortis HILIC neg ion 0.6263664 0.6112558 0.007 15 135 15 123 Weberella bursa HILIC neg ion 0.6879735 0.5585933 0.083 10 420 10 171 Geodia barretti RP pos ion 0.6735153 0.5713884 0.038 13 461 13 171 Stryphnus fortis RP pos ion 0.9830213 0.1303022 0.961 15 135 15 171 Weberella bursa RP pos ion 0.7788793 0.4702347 0.271 9 420 9 105 Geodia barretti RP neg ion 0.9754054 0.1568265 0.767 13 461 13 105 Stryphnus fortis RP neg ion 0.9595716 0.2010681 0.791 15 135 15 105 Weberella bursa RP neg ion dig &lt;- diagnostics[diagnostics$signif &lt;= 0.05, ] a &lt;- aggregate(dig, by = list(dig$Sponge.species, dig$Experiment, dig$data.set), FUN = &quot;length&quot;) summary(a$Group.1) ## Geodia barretti Stryphnus fortis Weberella bursa ## 5 7 4 summary(a$Group.2) ## HILIC neg HILIC pos RP neg RP pos ## 7 6 0 3 summary(a$Group.3) ## cleaned ion pc_group ## 7 3 6 Out of the 36 tests performed, 16 are significant (p \\(\\leq\\) 0.05). Immediately above you can see the the significant tests broken down by sponge species, HPCL-experiment and filtering approach. 4.2 Microbial interaction network 4.2.1 Generating network based on different algorithms The overall goal of the subsequent seqctions of code is to produce a microbial interation network for Geodia barretti. Nodes will be OTUs/ASVs from Geodia barretti samples and edges represent an interaction between those OTUs/ASVs. In this first part, we will employ different algorithms for network building. Network building algorithms are mannifold and their results not uncontroversial, thus the recommended strategy is to use different methods and merge the resulting networks to one consensus representation (Weiss et al., 2016), which we will do in the second part. The original data set from 14 specimens of Geodia barretti contained 420 OTUs/ASVs. To reduce sparsity, we removed OTUs/ASVs with two or less non-zero values resulting in a data set containing 289 OTUs/ASVs. This data set was used for network inference with the following methods: MENA Pipeline fastLSA SparCC Maximal information coefficient MIC 4.2.1.1 Molecular Ecological Network Analysis (MENA) Pipeline The implementation of MENA (Deng et al., 2012; Zhou, Deng et al., 2010; Zhou, Deng et al.,2011) can be accessed at http://ieg4.rccc.ou.edu/mena. The data set was saved as tab separated values and all zeros were converted to blanks. No further filtering for non-zero values was done (more than two non-zero values). For data preparation, default settings were applied, i.e. missing data was only filled with 0.01 in blanks with paired valid values, logarithm was taken, Pearson correlation coefficient was selected. Likewise, Random matrix theory settings were kept at defaults, decreasing the cutoff from the top using Regress Poisson distribution only. The cutoff of 0.800 was chosen for the similarity matrix to construct the network, corresponding to a Chi-square test on Poisson distribution of 99.191 and a p-value of 0.001. This resulted in a network with 241 nodes and 3582 edges. A second analysis was produced with the same settings except building the similarity matrix based on Spearman’s Rho. The cutoff of 0.820 was chosen for the similarity matrix to construct the network, corresponding to a Chi-square test on Poisson distribution of 98.417 and a p-value of 0.001. This resulted in a network with 252 nodes and 2216 edges. Network properties and parameters are summarized in MENA_network_parameters_Feb2019.xlsx. 4.2.1.2 Local Similarity Analysis: fastLSA The command line program for calcularing local similarity (Durno et al., 2013) was downloaded from http://hallam.microbiology.ubc.ca/fastLSA/install/index.html and run specifying the input file, no time lag (-d 0) and significance level alpha (-a 0.05). All other paramters were kept at their default values. The input data set was a tab delimited text file stripped of OTU labels or sample IDs. $ ./fastLSA -i ../gb_289_feb2019.txt -d 0 -a 0.05 -o ../gb_289_feb2019.out The output file, as specified on the website, containes five columns. ‘index1’ and ‘index2’ represent the significant paired indices ranging from 0 to n-1 (OTUs/ASVs). LSA denotes the LSA statistic of each pair, lag was set to 0 with the -d flag and the p-valueBound column provides the p-value’s upper boundary for the significantly paired p-value. To produce comparable data sets, we replaced the indices with their OTU IDs and removed superfluous columns. fastLSA &lt;- read.csv(&quot;data/gb_289_feb2019.out&quot;, header = T, sep = &quot;&quot;) key &lt;- read.csv(&quot;data/fastLSA_index_otu_CORRECTEDfeb2019.csv&quot;, header = T, sep = &quot;;&quot;) fastLSA$index1_otu &lt;- key$fastLSA_OTU[match(fastLSA$index1, key$fastLSA_index)] fastLSA$index2_otu &lt;- key$fastLSA_OTU[match(fastLSA$index2, key$fastLSA_index)] fastLSA$index1 &lt;- NULL fastLSA$index2 &lt;- NULL fastLSA$lag &lt;- NULL fastLSA$X &lt;- NULL fastLSA &lt;- fastLSA[, c(3, 4, 1, 2)] fastLSA &lt;- fastLSA[order(fastLSA$p.valueBound), ] write.csv(fastLSA, &quot;fastLSA_for_networks.csv&quot;) rm(fastLSA, key) LSA scores range from -1 for strong negatively correlations to 1, for strong positive correlations. There were no negative correlations in this data setand we refrained from scaleding the LSA score furhter. The resulting network contrained length(unique(c(fastLSA$index1, fastLSA$index2))) nodes and (dim(fastLSA)[1])-1 edges. 4.2.1.3 SparCC SparCC (Friedman and Alm, 2012) is a network building algorithm for compositional data and can be found at https://bitbucket.org/yonatanf/sparcc. Prior to running it I had to get help as there was a minor issue during compilation. SparCC needed specific versions of numpy, panda and python to run properly, which is easiest accomodated in a specific environment. The OTU table needs to be windows formatted text. The embedded code is an example, for the analysis, 500 iterations were combined. $ cd to working directory with SparCC and the data set gb_289.csv $ source activate sparcc python SparCC.py ../gb_sparcc.txt -c ../gb_sparcc_cor_file.txt -v ../gb_sparcc_coverage_file.txt -i 5 $ deactivate Create a results directory and redirect all the output there. Pseudo p-value Calculation, generates -n shuffled data sets: $ mkdir results #creates output directory $ python MakeBootstraps.py ../gb_sparcc.txt -n 5 -t permutation_#.txt -p ../results/ And run SparCC.py on all the re-shuffled data sets: $ python SparCC.py ../results/permutation_0.txt -i 5 --cor_file=../results/perm_cor_0.txt $ python SparCC.py ../results/permutation_1.txt -i 5 --cor_file=../results/perm_cor_1.txt $ python SparCC.py ../results/permutation_2.txt -i 5 --cor_file=../results/perm_cor_2.txt $ python SparCC.py ../results/permutation_3.txt -i 5 --cor_file=../results/perm_cor_3.txt $ python SparCC.py ../results/permutation_4.txt -i 5 --cor_file=../results/perm_cor_4.txt Generate p-values: $ python PseudoPvals.py ../results/gb_sparcc_cor_file.txt ../results/perm_cor_#.txt 5 -o ../results/pvals.two_sided.txt -t two_sided Formatting the resulting data set like so: library(reshape2) cor_file &lt;- read.csv(&quot;data/gb_sparcc_cor_file_289.csv&quot;, header = T, sep = &quot;;&quot;) p_vals &lt;- read.csv(&quot;data/gb_289_pvals.two_sided.csv&quot;, header = T, sep = &quot;;&quot;) # make OTU ID the rowname rownames(cor_file) &lt;- cor_file[, 1] cor_file[, 1] &lt;- NULL rownames(p_vals) &lt;- p_vals[, 1] p_vals[, 1] &lt;- NULL # check ds congruency all(colnames(cor_file) == rownames(cor_file)) all(colnames(p_vals) == rownames(p_vals)) # melt into long format, all vs all comparison: 289^2=83521 rows cor_file_m &lt;- melt(as.matrix(cor_file)) p_vals_m &lt;- melt(as.matrix(p_vals)) all(cor_file_m$Var1 == p_vals_m$Var1) all(cor_file_m$Var2 == p_vals_m$Var2) # complete data set with p_vals and &#39;correlation coeff&#39; cor_file_m[&quot;p_vals&quot;] &lt;- p_vals_m$value # This removes AB - BA duplicates but still contains self comprisons, AA, BB,CC etc. cols &lt;- c(&quot;Var1&quot;, &quot;Var2&quot;) newdf &lt;- cor_file_m[, cols] #generate new data set with just those two # a &lt;- Sys.time() for (i in 1:nrow(cor_file_m)) { newdf[i, ] = sort(cor_file_m[i, cols]) } # b &lt;- Sys.time() b-a cor_file_shortened &lt;- cor_file_m[!duplicated(newdf), ] #and can be removed with duplicate cor_file_shortened &lt;- cor_file_shortened[which(cor_file_shortened$Var1 != cor_file_shortened$Var2), ] # removing self comparison colnames(cor_file_shortened) &lt;- c(&quot;Var1_SparCC&quot;, &quot;Var2_SparCC&quot;, &quot;SparCC&quot;, &quot;pSparCC&quot;) #41616 write.csv(cor_file_shortened, &quot;data/SparCC_for_networks.csv&quot;) rm(cor_file_m, newdf, p_vals_m, i, cols) 4.2.1.4 Maximal information coefficient MIC MIC for pariwise interaction was calculated with the R package minearva. The MIC is part of a statistic called Maximal Information-Based Nonparametric Exploration (MINE). library(minerva) OTU &lt;- read.csv(&quot;data/gb_289.csv&quot;, header = T, sep = &quot;;&quot;) rownames(OTU) &lt;- OTU[, 1] OTU[, 1] &lt;- NULL OTU &lt;- as.data.frame(t(OTU)) # Calculate MIC of original data set. MINE &lt;- mine(OTU) MIC &lt;- MINE$MIC #dim(MIC): 289 289 Obtaining p-values for this statistic can be achieved by premutation of the original OTU table as below or emprirically, by selecting the thousandth stronges interactions. # 10 needs to be replaced with 1000 for final version, three times!!! reshuffling the OTU table, saving the MIC to # a list, a total of 1000 times n &lt;- 0 results &lt;- list() # For reproducibility, one could e.g.: set.seed(1984) # c &lt;- Sys.time() while (n &lt; 1000) { n &lt;- n + 1 mock &lt;- apply(OTU, MARGIN = 2, sample) mock_mine &lt;- mine(mock) results[[n]] &lt;- mock_mine$MIC } # d &lt;- Sys.time() d-c # for every element of the true matrix, go through all the same elements in the 1000 generated mock matrix MIC # indices and count how many of those are greater. MIC &lt;- MINE$MIC e_values &lt;- matrix(nrow = nrow(MIC), ncol = ncol(MIC), data = 0) for (i in 1:nrow(MIC)) { for (j in 1:ncol(MIC)) { n &lt;- 0 while (n &lt; 1000) { n &lt;- n + 1 if (results[[n]][i, j] &gt;= MIC[i, j]) { e_values[i, j] &lt;- e_values[i, j] + 1 } } } } e_values &lt;- e_values/1000 # write.csv(e_values, &#39;data/MIC_e_values.csv&#39;) For n=1000, the first part takes about 8 mins on one core, the second part about 2 min. The relevant output is saved in the initial calculations of the MIC and the corresponding e-values are in e_values. These are symmetric matrices that will be reduced to a long table with unique OTUs/ASVs pairs, their MIC and the e-value. For clarity, all other files are removed. rm(MINE, mock, mock_mine, results) # transforming symmetric matrix to unique-pair long format cor_file &lt;- data.frame(MIC) p_vals &lt;- data.frame(e_values) # inspect the files, adapt them and test congruency rownames(p_vals) &lt;- rownames(cor_file) colnames(p_vals) &lt;- colnames(cor_file) all(colnames(cor_file) == rownames(cor_file)) # melt into long format, all vs all comparison: 289*289=83521 rows cor_file_m &lt;- melt(as.matrix(cor_file)) all(colnames(p_vals) == rownames(p_vals)) p_vals_m &lt;- melt(as.matrix(p_vals)) # complete data set with p_vals cor_file_m[&quot;p_vals&quot;] &lt;- p_vals_m$value # This removes AB - BA duplicates but still contains self comprisons, AA, BB, etc. cols &lt;- c(&quot;Var1&quot;, &quot;Var2&quot;) newdf &lt;- cor_file_m[, cols] #generate new data set with just those two for (i in 1:nrow(cor_file_m)) { newdf[i, ] &lt;- sort(cor_file_m[i, cols]) } cor_file_shortened &lt;- cor_file_m[!duplicated(newdf), ] #and can be removed with duplicate cor_file_shortened &lt;- cor_file_shortened[which(cor_file_shortened$Var1 != cor_file_shortened$Var2), ] # removing self comparison rm(cor_file_m, newdf, p_vals_m, i, cols) # write.csv(cor_file_shortened, &#39;data/MIC_for_networks.csv&#39;) 4.2.2 Consolidation of the different networks 4.2.2.1 MIC MIC allows to detect a variety of interactions. According to the manual of the R wrapper minerva, the resulting MIC score “is related to the relationship strenght and it can be interpreted as a correlation measure. It is symmetric and it ranges in [0,1], where it tends to 0 for statistically independent data and it approaches 1 in probability for noiseless functional relationships”. Thus, it also contains strong negative relationship up to mutual exclusivity, which we want to filter out. mic &lt;- read.csv(&quot;data/MIC_for_networks.csv&quot;, header = T, sep = &quot;,&quot;) mic$X &lt;- NULL colnames(mic) &lt;- c(&quot;node1_mic&quot;, &quot;node2_mic&quot;, &quot;MIC&quot;, &quot;pMIC&quot;) Initially, the MIC network generated by the R wrapper minerva contained MIC values for all possible edges (i.e. 41616). Of those, 4370 edges/interactions had a p-value \\(\\leq\\) 0.05. As we will only include those edges in the final network, we select those and calculate the linear regression coefficient and p-value for the regression, to test whether we are able to distinguish negative from positive interaction. # Original OTU table for regressions OTU &lt;- read.csv(&quot;data/gb_289.csv&quot;, header = T, sep = &quot;;&quot;) rownames(OTU) &lt;- OTU[, 1] OTU[, 1] &lt;- NULL OTU[&quot;ID&quot;] &lt;- row.names(OTU) # goal: in mic data frame, set to &#39;NA&#39; MIC and pMIC of edges with a significant p-value for MIC that have a # significant negative regression mic[&quot;regression&quot;] &lt;- NA mic[&quot;p_regression&quot;] &lt;- NA for (i in 1:nrow(mic)) { bac1 &lt;- factor(mic[i, 1]) bac2 &lt;- factor(mic[i, 2]) temp_ds &lt;- data.frame(t(rbind(OTU[OTU$ID == bac1, ], OTU[OTU$ID == bac2, ]))) temp_ds &lt;- temp_ds[-c(15), ] temp_ds[] &lt;- lapply(temp_ds, function(x) if (is.factor(x)) factor(x) else x) # removes factors, not sure if necessary mic$regression[i] &lt;- summary(lm(c(temp_ds[, 1]) ~ c(temp_ds[, 2])))$coefficients[2, 1] #slope mic$p_regression[i] &lt;- summary(lm(c(temp_ds[, 1]) ~ c(temp_ds[, 2])))$coefficients[2, 4] #p-val } before &lt;- sum(mic$pMIC &lt;= 0.05) #4370 mic$MIC &lt;- ifelse((mic$pMIC &lt;= 0.05 &amp; mic$regression &lt; 0 &amp; mic$p_regression &lt;= 0.05), NA, mic$MIC) mic$pMIC &lt;- ifelse((mic$pMIC &lt;= 0.05 &amp; mic$regression &lt; 0 &amp; mic$p_regression &lt;= 0.05), NA, mic$pMIC) after &lt;- sum(mic$pMIC &lt;= 0.05, na.rm = T) #3522 write.csv(mic, &quot;data/MIC.csv&quot;) rm(temp_ds, bac1, bac2, i, mic) The MIC data set initially contained 41616 edges, 4370 of which were significant prior to the removal of negative correlations and leaving 3522 edges with a p-value \\(\\leq\\) 0.05. 4.2.2.2 SparCC The next network data set is based on the SparCC algorithm for computing correlations in compositional data. sparcc &lt;- read.csv(&quot;data/SparCC_for_networks.csv&quot;, header = T, sep = &quot;,&quot;) sparcc$X &lt;- NULL colnames(sparcc) &lt;- c(&quot;node1_sparcc&quot;, &quot;node2_sparcc&quot;, &quot;SparCC&quot;, &quot;pSparCC&quot;) # hist(sparcc$SparCC) hist(sparcc$pSparCC) sparcc$pSparCC &lt;- ifelse((sparcc$SparCC &lt; 0), NA, sparcc$pSparCC) #setting the p-values of negative interactions to NA sparcc$SparCC &lt;- ifelse((sparcc$SparCC &lt; 0), NA, sparcc$SparCC) #setting negative interactions to NA The network based on the SparCC algorithm contained 41616 edges of which 20420 negative interactions that were removed. 6622 significant positive edges remain. 4.2.2.3 MENA The next two network data sets are generated by MENA based on random matrix theory. mena_pcc &lt;- read.csv(&quot;data/MENA_0.800_PCC_edge_attribute.txt&quot;, header = F, sep = &quot; &quot;) # &#39;np&#39; in V2 and -1 in V5 mean negative interaction, these should be removed. dim(mena_pcc)[1] - dim(mena_pcc[mena_pcc$V5 == -1, ])[1] # Number of pos interactions ## [1] 171 mena_pcc[&quot;pMENA_PCC&quot;] &lt;- ifelse((mena_pcc$V5 &lt; 0), NA, 0.001) mena_pcc$V2 &lt;- NULL mena_pcc$V4 &lt;- NULL mena_pcc$V5 &lt;- NULL colnames(mena_pcc) &lt;- c(&quot;node1_mena&quot;, &quot;node2_mena&quot;, &quot;pMENA_PCC&quot;) mena_scc &lt;- read.csv(&quot;data/MENA_0.820_SCC_edge_attribute.txt&quot;, header = F, sep = &quot; &quot;) dim(mena_scc)[1] - dim(mena_scc[mena_scc$V5 == -1, ])[1] # Number of pos interactions ## [1] 317 mena_scc[&quot;pMENA_SCC&quot;] &lt;- ifelse((mena_scc$V5 &lt; 0), NA, 0.001) mena_scc$V2 &lt;- NULL mena_scc$V4 &lt;- NULL mena_scc$V5 &lt;- NULL colnames(mena_scc) &lt;- c(&quot;node1_mena&quot;, &quot;node2_mena&quot;, &quot;pMENA_SCC&quot;) MENA network with Pearson correlation contained 3582 edges of which 3411 negative interactions were removed. For Spearman correlations, the network contained 2216 edges of which 1899 negative interactions were removed. 4.2.2.4 LSA The next network data set is based on local similarity. It does not contain any negative values for LSA, so we do not exclude any edges. lsa &lt;- read.csv(&quot;data/fastLSA_for_networks.csv&quot;, header = T, sep = &quot;,&quot;) lsa$X &lt;- NULL colnames(lsa) &lt;- c(&quot;node1_lsa&quot;, &quot;node2_lsa&quot;, &quot;LSA&quot;, &quot;pLSA&quot;) dim(lsa)[1] # Number of edges ## [1] 208 4.2.2.5 Integration of the networks Now we combine all five networks into one data set. mic &lt;- read.csv(&quot;data/MIC.csv&quot;, header = T) mic$X &lt;- NULL mic$regression &lt;- NULL mic$p_regression &lt;- NULL master_summary &lt;- mic library(dplyr) master_summary &lt;- full_join(master_summary, lsa, by = c(node1_mic = &quot;node2_lsa&quot;, node2_mic = &quot;node1_lsa&quot;)) # sum(!is.na(master_summary$pLSA))==nrow(lsa) #TRUE master_summary &lt;- full_join(master_summary, sparcc, by = c(node1_mic = &quot;node1_sparcc&quot;, node2_mic = &quot;node2_sparcc&quot;)) # sum(!is.na(master_summary$pSparCC))==sum(!is.na(sparcc$pSparCC)) #TRUE master_summary &lt;- full_join(master_summary, mena_pcc, by = c(node1_mic = &quot;node2_mena&quot;, node2_mic = &quot;node1_mena&quot;)) # sum(!is.na(master_summary$pMENA_PCC))==sum(!is.na(mena_pcc$pMENA_PCC)) #TRUE master_summary &lt;- full_join(master_summary, mena_scc, by = c(node1_mic = &quot;node2_mena&quot;, node2_mic = &quot;node1_mena&quot;)) # sum(!is.na(master_summary$pMENA_SCC))==sum(!is.na(mena_scc$pMENA_SCC)) #TRUE master_summary &lt;- master_summary[, c(1, 2, 4, 6, 8, 9, 10, 3, 5, 7)] #reorder columns head(master_summary) # write.csv(master_summary, &#39;data/master_summary_networks_1.csv&#39;, row.names = FALSE) # For p-value merging: metap::sumlog, or EmpiricalBrownsMethod::EBM library(metap) ms &lt;- read.csv(&quot;data/master_summary_networks_1.csv&quot;, header = T) head(ms) ## node1_mic node2_mic pMIC pLSA pSparCC pMENA_PCC pMENA_SCC MIC LSA SparCC ## 1 OTU196900135 OTU1969004 0.918 NA 0.0 NA NA 0.1601125 NA 0.5372737 ## 2 OTU196900136 OTU1969004 0.068 NA 0.0 NA NA 0.5087257 NA 0.6541941 ## 3 OTU196900137 OTU1969004 0.008 NA 0.6 NA NA 0.6052891 NA 0.5449118 ## 4 OTU196900138 OTU1969004 0.222 NA 0.0 NA NA 0.3705065 NA -0.5931877 ## 5 OTU196900139 OTU1969004 0.247 NA 0.8 NA NA 0.3705065 NA 0.0806820 ## 6 OTU196900140 OTU1969004 0.015 NA 0.6 NA NA 0.6893917 NA 0.1745214 par(mfrow = c(2, 3)) hist(ms$pMIC) hist(ms$pLSA) #xlim = range(0,1) hist(ms$pSparCC) plot(ms$pMENA_PCC) plot(ms$pMENA_SCC) par(mfrow = c(1, 1)) # metap::sumlog doesn&#39;t think 0 is a valid p-value, replace all zeros with small non-zero values, e.g. half-minimum ms$pSparCC[ms$pSparCC == 0] &lt;- 0.005 ms$pMIC[ms$pMIC == 0] &lt;- 5e-04 ms[&quot;NA_count&quot;] &lt;- NA ms[&quot;signif_0.05&quot;] &lt;- NA ms[&quot;signif_0.001&quot;] &lt;- NA ms[&quot;sumlog&quot;] &lt;- NA n &lt;- 0 k &lt;- dim(ms)[1] while (n &lt; k) { n &lt;- n + 1 ms$NA_count[n] &lt;- sum(is.na(ms[n, 3:7])) ms$signif_0.05[n] &lt;- sum(ms[n, 3:7] &lt;= 0.05, na.rm = T) ms$signif_0.001[n] &lt;- sum(ms[n, 3:7] &lt;= 0.001, na.rm = T) ifelse((ms$NA_count[n] &lt;= 3), (ms$sumlog[n] &lt;- sumlog(ms[n, 3:7][!is.na(ms[n, 3:7])])$p), NA) } rm(k, n) ms[&quot;p.adjust_Bonferroni&quot;] &lt;- p.adjust(ms$sumlog, method = &quot;bonferroni&quot;) ms[&quot;p.adjust_FDR&quot;] &lt;- p.adjust(ms$sumlog, method = &quot;fdr&quot;) #aka Benjamini &amp; Hochberg write.csv(ms, &quot;data/master_summary_networks_2.csv&quot;) par(mfrow = c(1, 3)) hist(ms$signif_0.05, main = &quot;p-values &lt;= 0.05&quot;, xlab = &quot;Counts per edge &quot;, breaks = c(0, 1, 2, 3, 4, 5), labels = TRUE) hist(ms$signif_0.001, main = &quot;p-values &lt;= 0.001&quot;, xlab = &quot;Counts per edge &quot;, breaks = c(0, 1, 2, 3, 4, 5), labels = TRUE) hist(ms$NA_count, main = &quot;NAs&quot;, xlab = &quot;Counts per edge &quot;, breaks = c(0, 1, 2, 3, 4, 5), labels = TRUE) par(mfrow = c(1, 1)) ds &lt;- split(ms, ms$signif_0.05) raw_nodes &lt;- rbind(ds$`4`, ds$`5`) # Selection/inclusion criterion rm(ds) We selected all edges with at least 4 p-values \\(\\leq\\) 0.05 (n=155) to visualise in the network. library(igraph) edges &lt;- raw_nodes[, 1:2] nodes &lt;- union(raw_nodes$node1_mic, raw_nodes$node2_mic) ### K### meta_data &lt;- read.csv(&quot;~/Documents/Metabolomics/Depth_Gradient_study/R_depth_study/Network_analyses_R/gb_attributes_barettin_vip2.csv&quot;, header = T, sep = &quot;;&quot;) # head(meta_data) meta_data &lt;- meta_data[meta_data$OTU_otu %in% nodes, ] # head(meta_data) str(meta_data) meta_data$OTU_num &lt;- NULL meta_data$order &lt;- NULL nodes &lt;- meta_data nodes$labels &lt;- NA nodes$labels &lt;- ifelse(nodes$bar_scale_abs == 1, as.character(nodes$OTU_otu), NA) # sum(!is.na(nodes$labels)) #18 nodes$labels head(nodes, n=20) nodes$labels &lt;- sub(pattern = &quot;OTU196900&quot;, replacement = &quot;&quot;, x = nodes$labels, ignore.case = F) nodes[] &lt;- lapply(nodes, function(x) if (is.factor(x)) factor(x) else x) net &lt;- graph_from_data_frame(d = edges, vertices = nodes, directed = F) # plot(net) l &lt;- layout_with_kk(net) plot(net, edge.arrow.size=.4,vertex.label=NA, layout=l) #plot again # Barettin highligted (orange node size) l &lt;- layout_with_kk(net) plot(net, edge.arrow.size = 0.2, edge.color = &quot;grey&quot;, vertex.color = &quot;orange&quot;, vertex.frame.color = &quot;#ffffff&quot;, vertex.label = NA, vertex.label.color = &quot;black&quot;, vertex.size = V(net)$bar_scale_rel * 10, layout = l) # node info and classification for all nodes correlated with barettin node_info &lt;- nodes[, c(&quot;OTU_otu&quot;, &quot;phylum&quot;, &quot;class&quot;)][nodes$bar_scale_abs == 1, ] node_info[&quot;counter&quot;] &lt;- 1 #for quick grasp with aggregate node_info nrow(node_info) #18 node_info[] &lt;- lapply(node_info, function(x) if (is.factor(x)) factor(x) else x) #dropping factors from full data set for all columns node_info[order(node_info$phylum, node_info$class), ] aggregate(. ~ phylum, data = node_info, sum) aggregate(. ~ class, data = node_info, sum) # Taxonomy coloring &amp; barettin: Phylum ecol &lt;- rep(&quot;gray80&quot;, ecount(net)) vcol &lt;- rep(&quot;grey40&quot;, vcount(net)) vcol[V(net)$phylum == &quot;Proteobacteria&quot;] &lt;- &quot;yellow&quot; vcol[V(net)$phylum == &quot;Acidobacteria&quot;] &lt;- &quot;purple&quot; vcol[V(net)$phylum == &quot;Chloroflexi&quot;] &lt;- &quot;blue&quot; vcol[V(net)$phylum == &quot;Gemmatimonadetes&quot;] &lt;- &quot;red&quot; # The unclassified OTU196900307 will be displayed in grey. plot(net, vertex.color = vcol, edge.color = ecol, vertex.size = V(net)$bar_scale_rel * 10, edge.width = E(net)$value^2, vertex.label = NA, layout = l) # PUBLICATION FIGURE Taxonomy coloring &amp; barettin: Class ecol &lt;- rep(&quot;gray80&quot;, ecount(net)) vcol &lt;- rep(&quot;grey40&quot;, vcount(net)) vcol[V(net)$class == &quot;Holophagae&quot;] &lt;- &quot;#9e0142&quot; vcol[V(net)$class == &quot;Subgroup_15&quot;] &lt;- &quot;#d53e4f&quot; vcol[V(net)$class == &quot;Subgroup_6&quot;] &lt;- &quot;#f46d43&quot; vcol[V(net)$class == &quot;Anaerolineae&quot;] &lt;- &quot;#fdae61&quot; vcol[V(net)$class == &quot;JG30-KF-CM66&quot;] &lt;- &quot;#fee08b&quot; vcol[V(net)$class == &quot;SAR202_clade&quot;] &lt;- &quot;#e6f598&quot; vcol[V(net)$class == &quot;TK10&quot;] &lt;- &quot;#abdda4&quot; vcol[V(net)$class == &quot;BD2-11_terrestrial_group&quot;] &lt;- &quot;#66c2a5&quot; vcol[V(net)$class == &quot;Alphaproteobacteria&quot;] &lt;- &quot;#3288bd&quot; vcol[V(net)$class == &quot;JTB23&quot;] &lt;- &quot;#5e4fa2&quot; colrs &lt;- c(&quot;#9e0142&quot;, &quot;#d53e4f&quot;, &quot;#f46d43&quot;, &quot;#fdae61&quot;, &quot;#fee08b&quot;, &quot;#e6f598&quot;, &quot;#abdda4&quot;, &quot;#66c2a5&quot;, &quot;#3288bd&quot;, &quot;#5e4fa2&quot;) V(net)$color &lt;- colrs[V(net)$class] # PUBLICATION FIGURE plot(net, vertex.color = vcol, edge.color = ecol, vertex.size = V(net)$bar_scale_rel * 10, edge.width = E(net)$value^2, vertex.label = NA, layout = l) # legend(x=-2.1, y=0.5, c(&#39;Holophagae (Acidobacteria)&#39;,&#39;Subgroup_15 (Acidobacteria)&#39;, &#39;Subgroup_6 (Acidobacteria)&#39;, # &#39;Anaerolineae (Chloroflexi)&#39;, &#39;JG30-KF-CM66 (Chloroflexi)&#39;, &#39;SAR202_clade (Chloroflexi)&#39;, &#39;TK10 (Chloroflexi)&#39;, # &#39;BD2-11_terrestrial_group (Gemmatimonadetes)&#39;, &#39;Alphaproteobacteria (Proteobacteria)&#39;, &#39;JTB23 (Proteobacteria)&#39;), # pt.bg=colrs, pch=21,col=&#39;#777777&#39;, pt.cex=2, cex=.8, bty=&#39;n&#39;, ncol=1) legend(x = -2.9, y = 0.5, c(&quot;Holophagae (Acidobacteria)&quot;, &quot;Subgroup_15 (Acidobacteria)&quot;, &quot;Subgroup_6 (Acidobacteria)&quot;, &quot;Anaerolineae (Chloroflexi)&quot;, &quot;JG30-KF-CM66 (Chloroflexi)&quot;, &quot;SAR202_clade (Chloroflexi)&quot;, &quot;TK10 (Chloroflexi)&quot;, &quot;BD2-11_terrestrial_group (Gemmatimonadetes)&quot;, &quot;Alphaproteobacteria (Proteobacteria)&quot;, &quot;JTB23 (Proteobacteria)&quot;), pt.bg = colrs, pch = 21, col = &quot;#777777&quot;, pt.cex = 1.5, cex = 0.7, bty = &quot;n&quot;, ncol = 1) # Labels, personal use plot(net, vertex.color = vcol, edge.color = ecol, vertex.size = V(net)$bar_scale_rel * 10, edge.width = E(net)$value^2, vertex.label = V(net)$labels, layout = l) # legend(x=-2.1, y=0.5, c(&#39;Holophagae (Acidobacteria)&#39;,&#39;Subgroup_15 (Acidobacteria)&#39;, &#39;Subgroup_6 (Acidobacteria)&#39;, # &#39;Anaerolineae (Chloroflexi)&#39;, &#39;JG30-KF-CM66 (Chloroflexi)&#39;, &#39;SAR202_clade (Chloroflexi)&#39;, &#39;TK10 (Chloroflexi)&#39;, # &#39;BD2-11_terrestrial_group (Gemmatimonadetes)&#39;, &#39;Alphaproteobacteria (Proteobacteria)&#39;, &#39;JTB23 (Proteobacteria)&#39;), # pt.bg=colrs, pch=21,col=&#39;#777777&#39;, pt.cex=2, cex=.8, bty=&#39;n&#39;, ncol=1) legend(x = -2.9, y = 0.5, c(&quot;Holophagae (Acidobacteria)&quot;, &quot;Subgroup_15 (Acidobacteria)&quot;, &quot;Subgroup_6 (Acidobacteria)&quot;, &quot;Anaerolineae (Chloroflexi)&quot;, &quot;JG30-KF-CM66 (Chloroflexi)&quot;, &quot;SAR202_clade (Chloroflexi)&quot;, &quot;TK10 (Chloroflexi)&quot;, &quot;BD2-11_terrestrial_group (Gemmatimonadetes)&quot;, &quot;Alphaproteobacteria (Proteobacteria)&quot;, &quot;JTB23 (Proteobacteria)&quot;), pt.bg = colrs, pch = 21, col = &quot;#777777&quot;, pt.cex = 1.5, cex = 0.7, bty = &quot;n&quot;, ncol = 1) # VIPs l &lt;- layout_with_kk(net) plot(net, edge.arrow.size = 0.2, edge.color = &quot;grey&quot;, vertex.color = &quot;orange&quot;, vertex.frame.color = &quot;#ffffff&quot;, vertex.label = NA, vertex.label.color = &quot;black&quot;, vertex.size = V(net)$vip_scale_rel * 5, layout = l) sessionInfo() ## R version 3.5.1 (2018-07-02) ## Platform: x86_64-apple-darwin15.6.0 (64-bit) ## Running under: macOS 10.14.6 ## ## Matrix products: default ## BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] grid stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] metap_1.3 minerva_1.5.8 reshape_0.8.8 rnaturalearthdata_0.1.0 ## [5] rnaturalearth_0.1.0 sf_0.8-1 ggrepel_0.8.2 marmap_1.0.3 ## [9] mapdata_2.3.0 maps_3.3.0 ggmap_3.0.0.901 bookdown_0.18 ## [13] reshape2_1.4.3 vegan_2.5-6 lattice_0.20-41 permute_0.9-5 ## [17] forcats_0.5.0 stringr_1.4.0 purrr_0.3.3 readr_1.3.1 ## [21] tidyr_1.0.2 tibble_3.0.0 tidyverse_1.3.0 ropls_1.14.1 ## [25] kableExtra_1.1.0.9000 dplyr_0.8.5 usdm_1.1-18 raster_3.0-12 ## [29] sp_1.4-1 gridExtra_2.3 ggplot2_3.3.0 knitr_1.28 ## ## loaded via a namespace (and not attached): ## [1] readxl_1.3.1 backports_1.1.5 sn_1.6-1 plyr_1.8.6 splines_3.5.1 ## [6] TH.data_1.0-10 usethis_1.5.1 digest_0.6.25 htmltools_0.4.0 fansi_0.4.1 ## [11] magrittr_1.5 memoise_1.1.0 cluster_2.1.0 remotes_2.1.1 modelr_0.1.6 ## [16] sandwich_2.5-1 prettyunits_1.1.1 jpeg_0.1-8.1 colorspace_1.4-1 blob_1.2.1 ## [21] rvest_0.3.5 haven_2.2.0 xfun_0.13.1 callr_3.4.3 crayon_1.3.4 ## [26] jsonlite_1.6.1 survival_3.1-11 zoo_1.8-7 glue_1.3.2 gtable_0.3.0 ## [31] webshot_0.5.2 pkgbuild_1.0.6 shape_1.4.4 BiocGenerics_0.28.0 scales_1.1.0 ## [36] mvtnorm_1.1-0 DBI_1.1.0 bibtex_0.4.2.2 Rcpp_1.0.4 plotrix_3.7-7 ## [41] isoband_0.2.0 viridisLite_0.3.0 units_0.6-6 bit_1.1-15.2 stats4_3.5.1 ## [46] httr_1.4.1 TFisher_0.2.0 ellipsis_0.3.0 pkgconfig_2.0.3 farver_2.0.3 ## [51] dbplyr_1.4.2 utf8_1.1.4 tidyselect_1.0.0 labeling_0.3 rlang_0.4.5 ## [56] munsell_0.5.0 cellranger_1.1.0 tools_3.5.1 cli_2.0.2 generics_0.0.2 ## [61] RSQLite_2.2.0 devtools_2.2.2 broom_0.5.5 evaluate_0.14 yaml_2.2.1 ## [66] processx_3.4.2 bit64_0.9-7 fs_1.4.0 RgoogleMaps_1.4.5.3 ncdf4_1.17 ## [71] nlme_3.1-145 formatR_1.7 xml2_1.3.0 compiler_3.5.1 rstudioapi_0.11 ## [76] curl_4.3 png_0.1-7 e1071_1.7-3 testthat_2.3.2 reprex_0.3.0 ## [81] stringi_1.4.6 highr_0.8 ps_1.3.2 desc_1.2.0 rgeos_0.5-2 ## [86] Matrix_1.2-18 classInt_0.4-2 multtest_2.38.0 vctrs_0.2.4 mutoss_0.1-12 ## [91] pillar_1.4.3 lifecycle_0.2.0 Rdpack_0.11-1 bitops_1.0-6 gbRd_0.4-11 ## [96] R6_2.4.1 KernSmooth_2.23-16 sessioninfo_1.1.1 codetools_0.2-16 MASS_7.3-51.5 ## [101] assertthat_0.2.1 pkgload_1.0.2 rprojroot_1.3-2 rjson_0.2.20 withr_2.1.2 ## [106] mnormt_1.5-6 multcomp_1.4-12 adehabitatMA_0.3.14 mgcv_1.8-31 parallel_3.5.1 ## [111] hms_0.5.3 class_7.3-16 rmarkdown_2.1 numDeriv_2016.8-1.1 Biobase_2.42.0 ## [116] lubridate_1.7.4 "],
["funding-disclaimer.html", "5 Funding disclaimer", " 5 Funding disclaimer This study was financially supported by the SponGES project from the European Union’s Horizon 2020 research and innovation programme under grant agreement No 679849. This document reflects only the authors’ view and the Executive Agency for Small and Medium-sized Enterprises (EASME) is not responsible for any use that may be made of the information it contains. For more information, please visit the SponGES website. # automatically create a bib database for R packages knitr::write_bib(c(.packages(), &quot;bookdown&quot;, &quot;knitr&quot;, &quot;rmarkdown&quot;, &quot;kableExtra&quot;, &quot;ggplot2&quot;, &quot;ggmap&quot;, &quot;maps&quot;, &quot;mapdata&quot;, &quot;marmap&quot;, &quot;ggrepel&quot;, &quot;lattice&quot;, &quot;sf&quot;, &quot;rnaturalearth&quot;, &quot;rnaturalearthdata&quot;, &quot;vegan&quot;, &quot;xcms&quot;, &quot;ropls&quot;, &quot;tidyverse&quot;, &quot;stringr&quot;), &quot;packages.bib&quot;) Maps were made with the pacakges marmap (Pante and Simon-Bouhet 2013), ggmap (Kahle and Wickham 2013), maps (Brownrigg 2018), mapdata (Richard A. Becker and Ray Brownrigg. 2018), sf (Pebesma 2018), rnaturalearth (South 2017b), rnaturalearthdata (South 2017a), lattice (Sarkar 2008). Analyses used the packages usdm (Naimi et al. 2014) as well as functionalities from R (R Core Team 2018), tidyverse (Wickham et al. 2019), dplyr (Wickham et al. 2020), stringr (Wickham 2019), kableExtra (Zhu 2019), GridExtra (Auguie 2017), ggrepel (Slowikowski 2020), reshape2 [@], knitr (Xie 2015), Rmarkadown (Xie, Allaire, and Grolemund 2018) and bookdown (Xie 2020). References "],
["references.html", "References", " References "]
]
