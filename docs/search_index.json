[
["inter-omics.html", "4 Inter-omics", " 4 Inter-omics library(tidyverse) library(vegan) library(kableExtra) ############# FUNCTIONS # # Prepare dataframes aka &#39;data gymnastics&#39;. The output is a list with the three # data set per experiment for the three different species gb, sf, wb gymnastics &lt;- function(df, my_colnames) { df[, c(&quot;df.1&quot;, &quot;df&quot;, &quot;mz&quot;, &quot;mzmin&quot;, &quot;mzmadf&quot;, &quot;rt&quot;, &quot;rtmin&quot;, &quot;rtmadf&quot;, &quot;npeaks&quot;, &quot;Gb&quot;, &quot;QC&quot;, &quot;Sf&quot;, &quot;Wb&quot;)] &lt;- list(NULL) df[, c(&quot;isotopes&quot;, &quot;adduct&quot;, &quot;pcgroup&quot;, &quot;SD&quot;, &quot;MEAN&quot;, &quot;CV&quot;, &quot;fss&quot;, &quot;df.M.H..&quot;, &quot;raw_peaks.pcgroup&quot;)] &lt;- list(NULL) df &lt;- data.frame(t(df)) df[&quot;ID&quot;] &lt;- rownames(df) df[&quot;unified_ID&quot;] &lt;- masslynx$unified_ID[match(df$ID, masslynx[[my_colnames]])] df &lt;- na.omit(df) df &lt;- df[order(df$unified_ID), ] rownames(df) &lt;- df$unified_ID df[&quot;spec&quot;] &lt;- str_sub(df$unified_ID, 1, 2) df &lt;- df[!df$spec == &quot;QC&quot;, ] df[, c(&quot;ID&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) df_gb &lt;- df[df$spec == &quot;Gb&quot;, ] df_sf &lt;- df[df$spec == &quot;Sf&quot;, ] df_wb &lt;- df[df$spec == &quot;Wb&quot;, ] df_gb$spec &lt;- NULL df_sf$spec &lt;- NULL df_wb$spec &lt;- NULL # ready for mantel metabolome &lt;- list(gb = df_gb, sf = df_sf, wb = df_wb) return(metabolome) } # Prepares the microbiome data sets to match the metabolomes. The output is a # list with all microbiomes and metabolomes congruency &lt;- function(metabolomes) { metabolome_gb &lt;- metabolomes$gb metabolome_sf &lt;- metabolomes$sf metabolome_wb &lt;- metabolomes$wb micro_gb &lt;- micro[micro$spec == &quot;Gb&quot;, ] micro_sf &lt;- micro[micro$spec == &quot;Sf&quot;, ] micro_wb &lt;- micro[micro$spec == &quot;Wb&quot;, ] micro_gb[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_sf[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_wb[, c(&quot;spec&quot;, &quot;unified_ID&quot;)] &lt;- list(NULL) micro_gb &lt;- micro_gb[, colSums(micro_gb != 0) &gt; 0] micro_sf &lt;- micro_sf[, colSums(micro_sf != 0) &gt; 0] micro_wb &lt;- micro_wb[, colSums(micro_wb != 0) &gt; 0] micro_gb &lt;- sqrt(micro_gb) micro_sf &lt;- sqrt(micro_sf) micro_wb &lt;- sqrt(micro_wb) micro_gb &lt;- wisconsin(micro_gb) micro_sf &lt;- wisconsin(micro_sf) micro_wb &lt;- wisconsin(micro_wb) micro_gb &lt;- micro_gb[rownames(micro_gb) %in% rownames(metabolome_gb), ] metabolome_gb &lt;- metabolome_gb[rownames(metabolome_gb) %in% rownames(micro_gb), ] all(rownames(micro_gb) == rownames(metabolome_gb)) micro_sf &lt;- micro_sf[rownames(micro_sf) %in% rownames(metabolome_sf), ] metabolome_sf &lt;- metabolome_sf[rownames(metabolome_sf) %in% rownames(micro_sf), ] all(rownames(micro_sf) == rownames(metabolome_sf)) micro_wb &lt;- micro_wb[rownames(micro_wb) %in% rownames(metabolome_wb), ] metabolome_wb &lt;- metabolome_wb[rownames(metabolome_wb) %in% rownames(micro_wb), ] all(rownames(micro_wb) == rownames(metabolome_wb)) congruent_dfs &lt;- list(micro_gb = micro_gb, micro_sf = micro_sf, micro_wb = micro_wb, metabolome_gb = metabolome_gb, metabolome_sf = metabolome_sf, metabolome_wb = metabolome_wb) return(congruent_dfs) } # MANTEL TEST Generates distance matrices &#39;Bray-Curtis&#39; for microbiome, scaled # &#39;euclidean&#39; for metabolomes, runs a Mantel test with Spearman correlation, and # saves the parameters to a data frame. cloak &lt;- function(congruent_dfs, experiment, filtering) { gb_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_gb), &quot;euclid&quot;) micro_gb_dist &lt;- vegdist(congruent_dfs$micro_gb, method = &quot;bray&quot;) sf_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_sf), &quot;euclid&quot;) micro_sf_dist &lt;- vegdist(congruent_dfs$micro_sf, method = &quot;bray&quot;) wb_meta_dist &lt;- vegdist(scale(congruent_dfs$metabolome_wb), &quot;euclid&quot;) micro_wb_dist &lt;- vegdist(congruent_dfs$micro_wb, method = &quot;bray&quot;) m_gb &lt;- mantel(micro_gb_dist, gb_meta_dist, method = &quot;spearman&quot;) m_sf &lt;- mantel(micro_sf_dist, sf_meta_dist, method = &quot;spearman&quot;) m_wb &lt;- mantel(micro_wb_dist, wb_meta_dist, method = &quot;spearman&quot;) micro_dim &lt;- as.data.frame(t(dim(congruent_dfs$micro_gb))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_sf)))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_wb)))) colnames(micro_dim) &lt;- c(&quot;micro_samples&quot;, &quot;micro_OTUs&quot;) meta_dim &lt;- as.data.frame(t(dim(congruent_dfs$metabolome_gb))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_sf)))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_wb)))) colnames(meta_dim) &lt;- c(&quot;meta_samples&quot;, &quot;meta_features&quot;) stats &lt;- data.frame(m_gb$statistic) stats &lt;- rbind(stats, m_sf$statistic) stats &lt;- rbind(stats, m_wb$statistic) signif &lt;- data.frame(m_gb$signif) signif &lt;- rbind(signif, m_sf$signif) signif &lt;- rbind(signif, m_wb$signif) colnames(stats) &lt;- c(&quot;statistic&quot;) stats[&quot;signif&quot;] &lt;- signif stats[&quot;Sponge species&quot;] &lt;- c(&quot;Geodia barretti&quot;, &quot;Stryphnus fortis&quot;, &quot;Weberella bursa&quot;) stats &lt;- bind_cols(stats, micro_dim) stats &lt;- bind_cols(stats, meta_dim) stats[&quot;data set&quot;] &lt;- filtering stats[&quot;Experiment&quot;] &lt;- experiment return(stats) } # PROTEST NMDS ordination and protest ordination &lt;- function(congruent_dfs, experiment, filtering) { # If you do not have community data, you should probably set autotransform = # FALSE. k: number of dimensions gb_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_gb, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_gb_mds &lt;- metaMDS(congruent_dfs$micro_gb, trymax = 100, distance = &quot;bray&quot;) sf_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_sf, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_sf_mds &lt;- metaMDS(congruent_dfs$micro_sf, trymax = 100, distance = &quot;bray&quot;) wb_meta_mds &lt;- metaMDS(congruent_dfs$metabolome_wb, trymax = 100, distance = &quot;euclid&quot;, autotransforme = F) micro_wb_mds &lt;- metaMDS(congruent_dfs$micro_wb, trymax = 100, distance = &quot;bray&quot;) gb_proc &lt;- procrustes(micro_gb_mds, gb_meta_mds, scores = &quot;sites&quot;) gb_prot &lt;- protest(micro_gb_mds, gb_meta_mds, scores = &quot;sites&quot;) sf_proc &lt;- procrustes(micro_sf_mds, sf_meta_mds, scores = &quot;sites&quot;) sf_prot &lt;- protest(micro_sf_mds, sf_meta_mds, scores = &quot;sites&quot;) wb_proc &lt;- procrustes(micro_wb_mds, wb_meta_mds, scores = &quot;sites&quot;) wb_prot &lt;- protest(micro_wb_mds, wb_meta_mds, scores = &quot;sites&quot;) micro_dim &lt;- as.data.frame(t(dim(congruent_dfs$micro_gb))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_sf)))) micro_dim &lt;- rbind(micro_dim, as.data.frame(t(dim(congruent_dfs$micro_wb)))) colnames(micro_dim) &lt;- c(&quot;micro_samples&quot;, &quot;micro_OTUs&quot;) meta_dim &lt;- as.data.frame(t(dim(congruent_dfs$metabolome_gb))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_sf)))) meta_dim &lt;- rbind(meta_dim, as.data.frame(t(dim(congruent_dfs$metabolome_wb)))) colnames(meta_dim) &lt;- c(&quot;meta_samples&quot;, &quot;meta_features&quot;) pss &lt;- data.frame(gb_prot$ss) pss &lt;- rbind(pss, sf_prot$ss) pss &lt;- rbind(pss, wb_prot$ss) colnames(pss) &lt;- c(&quot;Procrustes SS&quot;) cor &lt;- data.frame(gb_prot$scale) cor &lt;- rbind(cor, sf_prot$scale) cor &lt;- rbind(cor, wb_prot$scale) colnames(cor) &lt;- c(&quot;correlation in sym. rotation&quot;) signif &lt;- data.frame(gb_prot$signif) signif &lt;- rbind(signif, sf_prot$signif) signif &lt;- rbind(signif, wb_prot$signif) colnames(signif) &lt;- c(&quot;signif&quot;) stats &lt;- bind_cols(pss, cor, signif, micro_dim, meta_dim) stats[&quot;data set&quot;] &lt;- filtering stats[&quot;Experiment&quot;] &lt;- experiment stats[&quot;Sponge species&quot;] &lt;- c(&quot;Geodia barretti&quot;, &quot;Stryphnus fortis&quot;, &quot;Weberella bursa&quot;) return(stats) } ############# LOAD DATA # micro &lt;- read.csv(&quot;data/OTU_all_R.csv&quot;, header = T, sep = &quot;;&quot;) colnames(micro)[colnames(micro) == &quot;Sample_ID&quot;] &lt;- &quot;unified_ID&quot; micro &lt;- micro[order(micro$unified_ID), ] rownames(micro) &lt;- micro$unified_ID micro[&quot;spec&quot;] &lt;- str_sub(micro$unified_ID, 1, 2) meta_data &lt;- read.csv(&quot;data/PANGAEA_Final.csv&quot;, header = T, sep = &quot;;&quot;) masslynx &lt;- meta_data masslynx &lt;- masslynx[c(&quot;unified_ID&quot;, &quot;LC.MS.HILIC.positive&quot;, &quot;LC.MS.HILIC.negative&quot;, &quot;LC.MS.RP.positive&quot;, &quot;LC.MS.RP.negative&quot;)] colnames(masslynx) &lt;- c(&quot;unified_ID&quot;, &quot;H_p&quot;, &quot;H_n&quot;, &quot;R_p&quot;, &quot;R_n&quot;) masslynx &lt;- na.omit(masslynx) masslynx[&quot;HILIC_pos&quot;] &lt;- str_sub(masslynx$H_p, 1, -3) masslynx[&quot;HILIC_neg&quot;] &lt;- str_sub(masslynx$H_n, 1, -3) masslynx[&quot;RP_pos&quot;] &lt;- str_sub(masslynx$R_p, 1, -3) masslynx[&quot;RP_neg&quot;] &lt;- str_sub(masslynx$R_n, 1, -3) # load one set of experiments at a time, i.e. CLEANED, ION or PC_GROUPS ### CLEANED hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned.csv&quot;, header = T, sep = &quot;,&quot;) ### ION hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_MH.csv&quot;, header = T, sep = &quot;,&quot;) ### PC_GROUPS hilic_pos &lt;- read.csv(&quot;data/HILIC_pos_20190417_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) hilic_neg &lt;- read.csv(&quot;data/HILIC_neg_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_pos &lt;- read.csv(&quot;data/RP_pos_20190421_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) rp_neg &lt;- read.csv(&quot;data/RP_neg_20190422_cleaned_pcgroup.csv&quot;, header = T, sep = &quot;,&quot;) ### =============================== MANTEL TEST================================= # run one of this at a time metabolomes &lt;- gymnastics(hilic_pos, &quot;H_p&quot;) metabolomes &lt;- gymnastics(hilic_neg, &quot;H_n&quot;) metabolomes &lt;- gymnastics(rp_pos, &quot;R_p&quot;) metabolomes &lt;- gymnastics(rp_neg, &quot;R_n&quot;) # run this congruent_dfs &lt;- congruency(metabolomes) # run one of these: MANTEL TEST diagnostics_hp_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_hn_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_rp_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_rn_cleaned &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_hp_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;ion&quot;) diagnostics_hn_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;ion&quot;) diagnostics_rp_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;ion&quot;) diagnostics_rn_ion &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;ion&quot;) diagnostics_hp_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_hn_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;pc_group&quot;) diagnostics_rp_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_rn_pc_group &lt;- cloak(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;pc_group&quot;) ### Combine all test results into one file diagnostics &lt;- diagnostics_hp_cleaned diagnostics &lt;- rbind(diagnostics, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion) diagnostics # write.csv(diagnostics, &#39;mantel_stats_FUN.csv&#39;) diagnostics &lt;- read.csv(&quot;data/mantel_stats_FUN.csv&quot;) diagnostics$X &lt;- NULL diagnostics &lt;- diagnostics[, c(&quot;statistic&quot;, &quot;signif&quot;, &quot;micro_samples&quot;, &quot;micro_OTUs&quot;, &quot;meta_samples&quot;, &quot;meta_features&quot;, &quot;Sponge.species&quot;, &quot;Experiment&quot;, &quot;data.set&quot;)] options(kableExtra.html.bsTable = T) kable(diagnostics, col.names = c(&quot;Mantel statistic r&quot;, &quot;significance&quot;, &quot;N microbiome samples&quot;, &quot;N OTUs&quot;, &quot;N metabolome samples&quot;, &quot;N features&quot;, &quot;Sponge species&quot;, &quot;Experiment&quot;, &quot;data set&quot;), longtable = T, booktabs = T, caption = &quot;Mantel test diagnostics diagnositcs comparing the microbiome and metabolome of the same sponge specimens&quot;, row.names = FALSE) %&gt;% add_header_above(c(Diagnostics = 6, `Data set attribution` = 3)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), font_size = 12, full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) (#tab:io4_mantel_results)Mantel test diagnostics diagnositcs comparing the microbiome and metabolome of the same sponge specimens Diagnostics Data set attribution Mantel statistic r significance N microbiome samples N OTUs N metabolome samples N features Sponge species Experiment data set 0.6076416 0.004 10 420 10 3507 Geodia barretti HILIC pos cleaned 0.3857788 0.011 13 461 13 3507 Stryphnus fortis HILIC pos cleaned 0.4576405 0.008 15 135 15 3507 Weberella bursa HILIC pos cleaned 0.4516469 0.006 10 420 10 2808 Geodia barretti HILIC neg cleaned 0.1513297 0.186 13 461 13 2808 Stryphnus fortis HILIC neg cleaned 0.1854966 0.168 15 135 15 2808 Weberella bursa HILIC neg cleaned -0.2014493 0.833 10 420 10 4673 Geodia barretti RP pos cleaned 0.3127632 0.064 13 461 13 4673 Stryphnus fortis RP pos cleaned 0.3323657 0.035 15 135 15 4673 Weberella bursa RP pos cleaned -0.2465894 0.845 9 420 9 3166 Geodia barretti RP neg cleaned 0.1960950 0.173 13 461 13 3166 Stryphnus fortis RP neg cleaned 0.1721750 0.174 15 135 15 3166 Weberella bursa RP neg cleaned 0.5836627 0.009 10 420 10 2212 Geodia barretti HILIC pos pc_group 0.4082626 0.016 13 461 13 2212 Stryphnus fortis HILIC pos pc_group 0.4483931 0.012 15 135 15 2212 Weberella bursa HILIC pos pc_group 0.3951252 0.018 10 420 10 1351 Geodia barretti HILIC neg pc_group 0.3211093 0.040 13 461 13 1351 Stryphnus fortis HILIC neg pc_group 0.0315675 0.414 15 135 15 1351 Weberella bursa HILIC neg pc_group -0.1600791 0.774 10 420 10 2736 Geodia barretti RP pos pc_group 0.3181249 0.064 13 461 13 2736 Stryphnus fortis RP pos pc_group 0.3008501 0.067 15 135 15 2736 Weberella bursa RP pos pc_group -0.1879022 0.790 9 420 9 1678 Geodia barretti RP neg pc_group 0.2034548 0.156 13 461 13 1678 Stryphnus fortis RP neg pc_group 0.1507257 0.198 15 135 15 1678 Weberella bursa RP neg pc_group 0.3351779 0.050 10 420 10 105 Geodia barretti HILIC pos ion 0.2908357 0.086 13 461 13 105 Stryphnus fortis HILIC pos ion 0.4683599 0.010 15 135 15 105 Weberella bursa HILIC pos ion 0.4429513 0.005 10 420 10 123 Geodia barretti HILIC neg ion 0.0727247 0.320 13 461 13 123 Stryphnus fortis HILIC neg ion 0.2320236 0.115 15 135 15 123 Weberella bursa HILIC neg ion -0.2569170 0.908 10 420 10 171 Geodia barretti RP pos ion 0.3070980 0.083 13 461 13 171 Stryphnus fortis RP pos ion 0.2656853 0.072 15 135 15 171 Weberella bursa RP pos ion -0.1220077 0.703 9 420 9 105 Geodia barretti RP neg ion -0.0505950 0.597 13 461 13 105 Stryphnus fortis RP neg ion 0.1218225 0.217 15 135 15 105 Weberella bursa RP neg ion ### =============================== PROTEST ==================================== # run one of this at a time metabolomes &lt;- gymnastics(hilic_pos, &quot;H_p&quot;) metabolomes &lt;- gymnastics(hilic_neg, &quot;H_n&quot;) metabolomes &lt;- gymnastics(rp_pos, &quot;R_p&quot;) metabolomes &lt;- gymnastics(rp_neg, &quot;R_n&quot;) # run this congruent_dfs &lt;- congruency(metabolomes) # run one of these: PROTEST TEST diagnostics_hp_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_hn_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_rp_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;cleaned&quot;) diagnostics_rn_cleaned &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;cleaned&quot;) diagnostics_hp_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;ion&quot;) diagnostics_hn_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;ion&quot;) diagnostics_rp_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;ion&quot;) diagnostics_rn_ion &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;ion&quot;) diagnostics_hp_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_hn_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;HILIC neg&quot;, filtering = &quot;pc_group&quot;) diagnostics_rp_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP pos&quot;, filtering = &quot;pc_group&quot;) diagnostics_rn_pc_group &lt;- ordination(congruent_dfs = congruent_dfs, experiment = &quot;RP neg&quot;, filtering = &quot;pc_group&quot;) ### Combine all test results into one file diagnostics &lt;- diagnostics_hp_cleaned diagnostics &lt;- rbind(diagnostics, diagnostics_hn_cleaned, diagnostics_rp_cleaned, diagnostics_rn_cleaned, diagnostics_hp_pc_group, diagnostics_hn_pc_group, diagnostics_rp_pc_group, diagnostics_rn_pc_group, diagnostics_hp_ion, diagnostics_hn_ion, diagnostics_rp_ion, diagnostics_rn_ion) diagnostics write.csv(diagnostics, &quot;protest_stats_FUN.csv&quot;) diagnostics &lt;- read.csv(&quot;data/protest_stats_FUN.csv&quot;) diagnostics$X &lt;- NULL diagnostics &lt;- diagnostics[, c(&quot;Procrustes.SS&quot;, &quot;correlation.in.sym..rotation&quot;, &quot;signif&quot;, &quot;micro_samples&quot;, &quot;micro_OTUs&quot;, &quot;meta_samples&quot;, &quot;meta_features&quot;, &quot;Sponge.species&quot;, &quot;Experiment&quot;, &quot;data.set&quot;)] options(kableExtra.html.bsTable = T) kable(diagnostics, col.names = c(&quot;Procrustes sum of squares&quot;, &quot;correlation in symmetric rotation&quot;, &quot;significance&quot;, &quot;N microbiome samples&quot;, &quot;N OTUs&quot;, &quot;N metabolome samples&quot;, &quot;N features&quot;, &quot;Sponge species&quot;, &quot;Experiment&quot;, &quot;data set&quot;), longtable = T, booktabs = T, caption = &quot;Protest diagnositcs comparing the microbiome and metabolome of the same sponge specimens&quot;, row.names = FALSE) %&gt;% add_header_above(c(Diagnostics = 7, `Data set attribution` = 3)) %&gt;% kable_styling(bootstrap_options = c(&quot;striped&quot;, &quot;hover&quot;, &quot;bordered&quot;, &quot;condensed&quot;, &quot;responsive&quot;), font_size = 12, full_width = F, latex_options = c(&quot;striped&quot;, &quot;scale_down&quot;)) (#tab:io6_prt)Protest diagnositcs comparing the microbiome and metabolome of the same sponge specimens Diagnostics Data set attribution Procrustes sum of squares correlation in symmetric rotation significance N microbiome samples N OTUs N metabolome samples N features Sponge species Experiment data set 0.4901473 0.7140397 0.009 10 420 10 3507 Geodia barretti HILIC pos cleaned 0.3360196 0.8148499 0.001 13 461 13 3507 Stryphnus fortis HILIC pos cleaned 0.6451196 0.5957184 0.009 15 135 15 3507 Weberella bursa HILIC pos cleaned 0.5056719 0.7030847 0.015 10 420 10 2808 Geodia barretti HILIC neg cleaned 0.7144829 0.5343380 0.043 13 461 13 2808 Stryphnus fortis HILIC neg cleaned 0.6454847 0.5954119 0.003 15 135 15 2808 Weberella bursa HILIC neg cleaned 0.7241690 0.5251961 0.124 10 420 10 4673 Geodia barretti RP pos cleaned 0.5535784 0.6681479 0.005 13 461 13 4673 Stryphnus fortis RP pos cleaned 0.9089831 0.3016901 0.513 15 135 15 4673 Weberella bursa RP pos cleaned 0.7744081 0.4749652 0.229 9 420 9 3166 Geodia barretti RP neg cleaned 0.7769037 0.4723307 0.107 13 461 13 3166 Stryphnus fortis RP neg cleaned 0.9426954 0.2393838 0.656 15 135 15 3166 Weberella bursa RP neg cleaned 0.4903060 0.7139285 0.008 10 420 10 2212 Geodia barretti HILIC pos pc_group 0.6122646 0.6226840 0.009 13 461 13 2212 Stryphnus fortis HILIC pos pc_group 0.5611609 0.6624494 0.002 15 135 15 2212 Weberella bursa HILIC pos pc_group 0.4442919 0.7454583 0.007 10 420 10 1351 Geodia barretti HILIC neg pc_group 0.6072203 0.6267214 0.013 13 461 13 1351 Stryphnus fortis HILIC neg pc_group 0.7647882 0.4849864 0.062 15 135 15 1351 Weberella bursa HILIC neg pc_group 0.7332277 0.5165001 0.146 10 420 10 2736 Geodia barretti RP pos pc_group 0.5557670 0.6665081 0.002 13 461 13 2736 Stryphnus fortis RP pos pc_group 0.9184545 0.2855616 0.579 15 135 15 2736 Weberella bursa RP pos pc_group 0.7952845 0.4524550 0.314 9 420 9 1678 Geodia barretti RP neg pc_group 0.7513407 0.4986575 0.089 13 461 13 1678 Stryphnus fortis RP neg pc_group 0.9669093 0.1819085 0.851 15 135 15 1678 Weberella bursa RP neg pc_group 0.7744285 0.4749437 0.254 9 420 9 3166 Geodia barretti HILIC pos ion 0.7768298 0.4724090 0.119 13 461 13 3166 Stryphnus fortis HILIC pos ion 0.9427350 0.2393010 0.671 15 135 15 3166 Weberella bursa HILIC pos ion 0.3977778 0.7760297 0.005 10 420 10 123 Geodia barretti HILIC neg ion 0.7620196 0.4878323 0.101 13 461 13 123 Stryphnus fortis HILIC neg ion 0.6263664 0.6112558 0.007 15 135 15 123 Weberella bursa HILIC neg ion 0.6879735 0.5585933 0.083 10 420 10 171 Geodia barretti RP pos ion 0.6735153 0.5713884 0.038 13 461 13 171 Stryphnus fortis RP pos ion 0.9830213 0.1303022 0.961 15 135 15 171 Weberella bursa RP pos ion 0.7788793 0.4702347 0.271 9 420 9 105 Geodia barretti RP neg ion 0.9754054 0.1568265 0.767 13 461 13 105 Stryphnus fortis RP neg ion 0.9595716 0.2010681 0.791 15 135 15 105 Weberella bursa RP neg ion sessionInfo() ## R version 3.5.1 (2018-07-02) ## Platform: x86_64-apple-darwin15.6.0 (64-bit) ## Running under: macOS 10.14.6 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRblas.0.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] kableExtra_1.1.0.9000 vegan_2.5-6 lattice_0.20-41 ## [4] permute_0.9-5 forcats_0.5.0 stringr_1.4.0 ## [7] dplyr_0.8.5 purrr_0.3.3 readr_1.3.1 ## [10] tidyr_1.0.2 tibble_3.0.0 ggplot2_3.3.0 ## [13] tidyverse_1.3.0 knitr_1.28 ## ## loaded via a namespace (and not attached): ## [1] Rcpp_1.0.4 lubridate_1.7.4 assertthat_0.2.1 digest_0.6.25 ## [5] R6_2.4.1 cellranger_1.1.0 backports_1.1.5 reprex_0.3.0 ## [9] evaluate_0.14 highr_0.8 httr_1.4.1 pillar_1.4.3 ## [13] rlang_0.4.5 readxl_1.3.1 rstudioapi_0.11 Matrix_1.2-18 ## [17] rmarkdown_2.1 splines_3.5.1 webshot_0.5.2 munsell_0.5.0 ## [21] broom_0.5.5 compiler_3.5.1 modelr_0.1.6 xfun_0.12 ## [25] pkgconfig_2.0.3 mgcv_1.8-31 htmltools_0.4.0 tidyselect_1.0.0 ## [29] bookdown_0.18 viridisLite_0.3.0 fansi_0.4.1 crayon_1.3.4 ## [33] dbplyr_1.4.2 withr_2.1.2 MASS_7.3-51.5 grid_3.5.1 ## [37] nlme_3.1-145 jsonlite_1.6.1 gtable_0.3.0 lifecycle_0.2.0 ## [41] DBI_1.1.0 magrittr_1.5 formatR_1.7 scales_1.1.0 ## [45] cli_2.0.2 stringi_1.4.6 fs_1.4.0 xml2_1.3.0 ## [49] ellipsis_0.3.0 generics_0.0.2 vctrs_0.2.4 tools_3.5.1 ## [53] glue_1.3.2 hms_0.5.3 parallel_3.5.1 yaml_2.2.1 ## [57] colorspace_1.4-1 cluster_2.1.0 rvest_0.3.5 haven_2.2.0 "]
]
